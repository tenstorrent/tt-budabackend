devices:
  arch: [grayskull, wormhole_b0]

queues:
  # input
  input0: {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [8, 1], ublock: [1, 4], ublock_order: r, df: Float32, target_device: 0, loc: host, host: [0x0]}
  input1: {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [8, 1], ublock: [1, 4], ublock_order: r, df: Float32, target_device: 0, loc: dram, dram: [[0, 0x40000000]]}
  input2: {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [4, 1], ublock: [1, 1], ublock_order: r, df: Float32, target_device: 0, loc: dram, dram: [[2, 0x465a100]]}
  output0: {type: queue, input: _fused_op_0 , entries: 1, grid_size: [1, 1], t: 1, mblock: [8, 1], ublock: [1, 1], df: Float32, target_device: 0, loc: dram, dram: [[0, 0x32000000]]}

graphs:
  fwd_0_0_temporal_epoch_0:
    target_device: 0
    input_count: 1
    _fused_op_0:
      type: fused_op
      grid_loc: [0, 3]
      grid_size: [1, 1]
      inputs: [input0, input1, input2]
      t: 1
      mblock: [8, 1]
      ublock: [1, 1]
      buf_size_mb: 2
      ublock_order: r
      in_df: [Float32, Float32, Float32]
      out_df: Float32
      intermed_df: Float32
      acc_df: Float32
      math_fidelity: HiFi3
      attributes: {approximate_mode: false, fused_op_id: 0}


programs:
  - run_fwd_0:
    - var: {$c_microbatch_size: 1, $c_one: 1, $c_zero: 0}
    - staticvar: {$gptr_q0: 0, $lptr_q0: 0}
    - loop: 1
    -   execute: {graph_name: fwd_0_0_temporal_epoch_0, queue_settings: {
               input0: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               input1: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               input2: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero}}}
    -   varinst: [$gptr_q0, incwrap, $c_microbatch_size, 4]
    -   varinst: [$lptr_q0, incwrap, $c_microbatch_size, 4]
    - endloop


fused_ops:
  0:
    inputs: 3
    intermediates: 2
    schedules:
      -
        - argmax.dc.multiply.4.1: { type: multiply, inputs: [input0, input1], mblock: [8, 1], ublock: [1, 4], output: intermed0}
        - argmax.dc.reduce_sum.5.lc1.1: { type: matmul, inputs: [intermed0, input2], attributes: {m_k: 4, u_kt: 1}, pop: [intermed0], mblock: [8, 1], ublock: [1, 1], output: intermed1}
      -
        - argmax.dc.reduce_sum.5.lc1_output_nop.2: { type: nop, inputs: [intermed1], pop_last: [intermed1], mblock: [8, 1], ublock: [1, 1], output: output}

test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -1.0
    uniform_upper_bound: 1.0