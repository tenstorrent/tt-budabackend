devices:
  arch: grayskull

queues:
  q0    : {type: queue, input: HOST   , entries: 4, grid_size: [2, 2], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x100000], [1, 0x100000], [2, 0x100000], [3, 0x100000]]}
  output: {type: queue, input: unary0 , entries: 4, grid_size: [2, 2], t: 4, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x200000], [1, 0x200000], [2, 0x200000], [3, 0x200000]]}

graphs:
  test_unary:
    target_device: 0
    input_count: 2
    unary0: {type: exp, grid_loc: [0, 0], grid_size: [2, 2], inputs: [q0], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 4, mblock: [2, 2], ublock: [2, 2], input_0_tms: [broadcast: {z: 4}]}

programs:
  - program0:
      - var: [$0, $1, $5, $8]
      - varinst: [$5, set, 1] # LOAD an 8 into $5
      - varinst: [$8, set, 1] # LOAD a  1 into $8 
      - loop: $5
      - execute: {graph_name: test_unary, queue_settings: {q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}}}
      - varinst: [$0, add, $0, $8] # add two variables
      - varinst: [$1, add, $1, $8] # add two variables
      - endloop 
