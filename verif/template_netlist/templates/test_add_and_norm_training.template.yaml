# test_add_and_norm_training
# test_config_id=$TEMPLATE_test_config_id
# act1_size_r=$TEMPLATE_act1_size_r
# act1_size_c=$TEMPLATE_act1_size_c
# act2_size_r=$TEMPLATE_act2_size_r
# act2_size_c=$TEMPLATE_act2_size_c
# loss_test_module.output_add_and_norm_bias_size_r=$TEMPLATE_loss_test_module.output_add_and_norm_bias_size_r
# loss_test_module.output_add_and_norm_bias_size_c=$TEMPLATE_loss_test_module.output_add_and_norm_bias_size_c

devices:
  arch: $TEMPLATE_arch_name

queues:
  # input
  act1:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_1,
      grid_size: [$TEMPLATE_grid_size_0_var_2, $TEMPLATE_grid_size_1_var_3],
      t: $TEMPLATE_t_var_4,
      mblock: [$TEMPLATE_mblock_0_var_5, $TEMPLATE_mblock_1_var_6],
      ublock: [$TEMPLATE_ublock_0_var_7, $TEMPLATE_ublock_1_var_8],
      ublock_order: r,
      df: $TEMPLATE_df_var_9,
      target_device: 0,
      loc: $TEMPLATE_loc_var_10,
      $TEMPLATE_loc_var_10: $TEMPLATE_loc_var_655,
    }
  act2:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_12,
      grid_size: [$TEMPLATE_grid_size_0_var_13, $TEMPLATE_grid_size_1_var_14],
      t: $TEMPLATE_t_var_15,
      mblock: [$TEMPLATE_mblock_0_var_16, $TEMPLATE_mblock_1_var_17],
      ublock: [$TEMPLATE_ublock_0_var_18, $TEMPLATE_ublock_1_var_19],
      ublock_order: r,
      df: $TEMPLATE_df_var_20,
      target_device: 0,
      loc: $TEMPLATE_loc_var_21,
      $TEMPLATE_loc_var_21: $TEMPLATE_loc_var_656,
    }
  # output
  test_module.output_add_and_norm_bias:
    {
      input: add_and_norm_bias,
      type: queue,
      entries: $TEMPLATE_entries_var_23,
      grid_size: [$TEMPLATE_grid_size_0_var_24, $TEMPLATE_grid_size_1_var_25],
      t: $TEMPLATE_t_var_26,
      mblock: [$TEMPLATE_mblock_0_var_27, $TEMPLATE_mblock_1_var_28],
      ublock: [$TEMPLATE_ublock_0_var_29, $TEMPLATE_ublock_1_var_30],
      ublock_order: r,
      df: $TEMPLATE_df_var_31,
      target_device: 0,
      loc: $TEMPLATE_loc_var_32,
      $TEMPLATE_loc_var_32: $TEMPLATE_loc_var_657,
    }
  # parameter
  test_module.weights:
    {
      input: opt_in1_test_module.weights_subtract_2,
      type: ram,
      entries: $TEMPLATE_entries_var_34,
      grid_size: [$TEMPLATE_grid_size_0_var_35, $TEMPLATE_grid_size_1_var_36],
      t: $TEMPLATE_t_var_37,
      mblock: [$TEMPLATE_mblock_0_var_38, $TEMPLATE_mblock_1_var_39],
      ublock: [$TEMPLATE_ublock_0_var_40, $TEMPLATE_ublock_1_var_41],
      ublock_order: r,
      df: $TEMPLATE_df_var_42,
      target_device: 0,
      loc: $TEMPLATE_loc_var_43,
      $TEMPLATE_loc_var_43: $TEMPLATE_loc_var_658,
    }
  test_module.bias:
    {
      input: opt_in1_test_module.bias_subtract_2,
      type: ram,
      entries: $TEMPLATE_entries_var_45,
      grid_size: [$TEMPLATE_grid_size_0_var_46, $TEMPLATE_grid_size_1_var_47],
      t: $TEMPLATE_t_var_48,
      mblock: [$TEMPLATE_mblock_0_var_49, $TEMPLATE_mblock_1_var_50],
      ublock: [$TEMPLATE_ublock_0_var_51, $TEMPLATE_ublock_1_var_52],
      ublock_order: r,
      df: $TEMPLATE_df_var_53,
      target_device: 0,
      loc: $TEMPLATE_loc_var_54,
      $TEMPLATE_loc_var_54: $TEMPLATE_loc_var_659,
    }
  # constant
  lc.input_tensor.add_and_norm_mean.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_56,
      grid_size: [$TEMPLATE_grid_size_0_var_57, $TEMPLATE_grid_size_1_var_58],
      t: $TEMPLATE_t_var_59,
      mblock: [$TEMPLATE_mblock_0_var_60, $TEMPLATE_mblock_1_var_61],
      ublock: [$TEMPLATE_ublock_0_var_62, $TEMPLATE_ublock_1_var_63],
      ublock_order: r,
      df: $TEMPLATE_df_var_64,
      target_device: 0,
      loc: $TEMPLATE_loc_var_65,
      $TEMPLATE_loc_var_65: $TEMPLATE_loc_var_660,
    }
  lc.input_tensor.add_and_norm_var.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_67,
      grid_size: [$TEMPLATE_grid_size_0_var_68, $TEMPLATE_grid_size_1_var_69],
      t: $TEMPLATE_t_var_70,
      mblock: [$TEMPLATE_mblock_0_var_71, $TEMPLATE_mblock_1_var_72],
      ublock: [$TEMPLATE_ublock_0_var_73, $TEMPLATE_ublock_1_var_74],
      ublock_order: r,
      df: $TEMPLATE_df_var_75,
      target_device: 0,
      loc: $TEMPLATE_loc_var_76,
      $TEMPLATE_loc_var_76: $TEMPLATE_loc_var_661,
    }
  constant_1_add_and_norm_var_plus_eps:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_78,
      grid_size: [$TEMPLATE_grid_size_0_var_79, $TEMPLATE_grid_size_1_var_80],
      t: $TEMPLATE_t_var_81,
      mblock: [$TEMPLATE_mblock_0_var_82, $TEMPLATE_mblock_1_var_83],
      ublock: [$TEMPLATE_ublock_0_var_84, $TEMPLATE_ublock_1_var_85],
      ublock_order: r,
      df: $TEMPLATE_df_var_86,
      target_device: 0,
      loc: $TEMPLATE_loc_var_87,
      $TEMPLATE_loc_var_87: $TEMPLATE_loc_var_662,
    }
  lc.input_tensor.add_and_norm_recip_s_brcst_m1_0_0.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_89,
      grid_size: [$TEMPLATE_grid_size_0_var_90, $TEMPLATE_grid_size_1_var_91],
      t: $TEMPLATE_t_var_92,
      mblock: [$TEMPLATE_mblock_0_var_93, $TEMPLATE_mblock_1_var_94],
      ublock: [$TEMPLATE_ublock_0_var_95, $TEMPLATE_ublock_1_var_96],
      ublock_order: r,
      df: $TEMPLATE_df_var_97,
      target_device: 0,
      loc: $TEMPLATE_loc_var_98,
      $TEMPLATE_loc_var_98: $TEMPLATE_loc_var_663,
    }
  lc.input_tensor.test_module.weights_s_brcst_m2_1_0.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_100,
      grid_size: [$TEMPLATE_grid_size_0_var_101, $TEMPLATE_grid_size_1_var_102],
      t: $TEMPLATE_t_var_103,
      mblock: [$TEMPLATE_mblock_0_var_104, $TEMPLATE_mblock_1_var_105],
      ublock: [$TEMPLATE_ublock_0_var_106, $TEMPLATE_ublock_1_var_107],
      ublock_order: r,
      df: $TEMPLATE_df_var_108,
      target_device: 0,
      loc: $TEMPLATE_loc_var_109,
      $TEMPLATE_loc_var_109: $TEMPLATE_loc_var_664,
    }
  lc.input_tensor.test_module.bias_s_brcst_m2_1_0.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_111,
      grid_size: [$TEMPLATE_grid_size_0_var_112, $TEMPLATE_grid_size_1_var_113],
      t: $TEMPLATE_t_var_114,
      mblock: [$TEMPLATE_mblock_0_var_115, $TEMPLATE_mblock_1_var_116],
      ublock: [$TEMPLATE_ublock_0_var_117, $TEMPLATE_ublock_1_var_118],
      ublock_order: r,
      df: $TEMPLATE_df_var_119,
      target_device: 0,
      loc: $TEMPLATE_loc_var_120,
      $TEMPLATE_loc_var_120: $TEMPLATE_loc_var_665,
    }
  lc.input_tensor.bw_in1_add_and_norm_bias_reduce_sum_0.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_122,
      grid_size: [$TEMPLATE_grid_size_0_var_123, $TEMPLATE_grid_size_1_var_124],
      t: $TEMPLATE_t_var_125,
      mblock: [$TEMPLATE_mblock_0_var_126, $TEMPLATE_mblock_1_var_127],
      ublock: [$TEMPLATE_ublock_0_var_128, $TEMPLATE_ublock_1_var_129],
      ublock_order: r,
      df: $TEMPLATE_df_var_130,
      target_device: 0,
      loc: $TEMPLATE_loc_var_131,
      $TEMPLATE_loc_var_131: $TEMPLATE_loc_var_666,
    }
  lc.input_tensor.bw_in1_add_and_norm_weights_reduce_sum_1.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_133,
      grid_size: [$TEMPLATE_grid_size_0_var_134, $TEMPLATE_grid_size_1_var_135],
      t: $TEMPLATE_t_var_136,
      mblock: [$TEMPLATE_mblock_0_var_137, $TEMPLATE_mblock_1_var_138],
      ublock: [$TEMPLATE_ublock_0_var_139, $TEMPLATE_ublock_1_var_140],
      ublock_order: r,
      df: $TEMPLATE_df_var_141,
      target_device: 0,
      loc: $TEMPLATE_loc_var_142,
      $TEMPLATE_loc_var_142: $TEMPLATE_loc_var_667,
    }
  # epoch_to_epoch
  e2e_add_and_norm_output_0:
    {
      input: add_and_norm_output,
      type: queue,
      entries: $TEMPLATE_entries_var_144,
      grid_size: [$TEMPLATE_grid_size_0_var_145, $TEMPLATE_grid_size_1_var_146],
      t: $TEMPLATE_t_var_147,
      mblock: [$TEMPLATE_mblock_0_var_148, $TEMPLATE_mblock_1_var_149],
      ublock: [$TEMPLATE_ublock_0_var_150, $TEMPLATE_ublock_1_var_151],
      ublock_order: r,
      df: $TEMPLATE_df_var_152,
      target_device: 0,
      loc: $TEMPLATE_loc_var_153,
      $TEMPLATE_loc_var_153: $TEMPLATE_loc_var_668,
    }
  # optimizer_parameter
  input_opt_test_module.weights_0.lr:
    {
      input: HOST,
      type: ram,
      entries: $TEMPLATE_entries_var_155,
      grid_size: [$TEMPLATE_grid_size_0_var_156, $TEMPLATE_grid_size_1_var_157],
      t: $TEMPLATE_t_var_158,
      mblock: [$TEMPLATE_mblock_0_var_159, $TEMPLATE_mblock_1_var_160],
      ublock: [$TEMPLATE_ublock_0_var_161, $TEMPLATE_ublock_1_var_162],
      ublock_order: r,
      df: $TEMPLATE_df_var_163,
      target_device: 0,
      loc: $TEMPLATE_loc_var_164,
      $TEMPLATE_loc_var_164: $TEMPLATE_loc_var_669,
    }
  input_opt_test_module.bias_0.lr:
    {
      input: HOST,
      type: ram,
      entries: $TEMPLATE_entries_var_166,
      grid_size: [$TEMPLATE_grid_size_0_var_167, $TEMPLATE_grid_size_1_var_168],
      t: $TEMPLATE_t_var_169,
      mblock: [$TEMPLATE_mblock_0_var_170, $TEMPLATE_mblock_1_var_171],
      ublock: [$TEMPLATE_ublock_0_var_172, $TEMPLATE_ublock_1_var_173],
      ublock_order: r,
      df: $TEMPLATE_df_var_174,
      target_device: 0,
      loc: $TEMPLATE_loc_var_175,
      $TEMPLATE_loc_var_175: $TEMPLATE_loc_var_670,
    }
  # loss
  loss_test_module.output_add_and_norm_bias:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_177,
      grid_size: [$TEMPLATE_grid_size_0_var_178, $TEMPLATE_grid_size_1_var_179],
      t: $TEMPLATE_t_var_180,
      mblock: [$TEMPLATE_mblock_0_var_181, $TEMPLATE_mblock_1_var_182],
      ublock: [$TEMPLATE_ublock_0_var_183, $TEMPLATE_ublock_1_var_184],
      ublock_order: r,
      df: $TEMPLATE_df_var_185,
      target_device: 0,
      loc: $TEMPLATE_loc_var_186,
      $TEMPLATE_loc_var_186: $TEMPLATE_loc_var_671,
    }
  # grad_accumulator
  grad_acc_test_module.bias:
    {
      input: bw_in1_add_and_norm_bias_brcst_reduce_sum_0,
      type: ram,
      entries: $TEMPLATE_entries_var_188,
      grid_size: [$TEMPLATE_grid_size_0_var_189, $TEMPLATE_grid_size_1_var_190],
      t: $TEMPLATE_t_var_191,
      mblock: [$TEMPLATE_mblock_0_var_192, $TEMPLATE_mblock_1_var_193],
      ublock: [$TEMPLATE_ublock_0_var_194, $TEMPLATE_ublock_1_var_195],
      ublock_order: r,
      df: $TEMPLATE_df_var_196,
      target_device: 0,
      loc: $TEMPLATE_loc_var_197,
      $TEMPLATE_loc_var_197: $TEMPLATE_loc_var_672,
    }
  grad_acc_test_module.weights:
    {
      input: bw_in1_add_and_norm_weights_brcst_reduce_sum_0,
      type: ram,
      entries: $TEMPLATE_entries_var_199,
      grid_size: [$TEMPLATE_grid_size_0_var_200, $TEMPLATE_grid_size_1_var_201],
      t: $TEMPLATE_t_var_202,
      mblock: [$TEMPLATE_mblock_0_var_203, $TEMPLATE_mblock_1_var_204],
      ublock: [$TEMPLATE_ublock_0_var_205, $TEMPLATE_ublock_1_var_206],
      ublock_order: r,
      df: $TEMPLATE_df_var_207,
      target_device: 0,
      loc: $TEMPLATE_loc_var_208,
      $TEMPLATE_loc_var_208: $TEMPLATE_loc_var_673,
    }

graphs:
  # forward
  fwd_0:
    target_device: 0
    input_count: $TEMPLATE_input_count_var_210
    add_and_norm_a_plus_b:
      {
        type: add,
        grid_loc: [$TEMPLATE_grid_loc_0_var_211, $TEMPLATE_grid_loc_1_var_212],
        grid_size: [$TEMPLATE_grid_size_0_var_213, $TEMPLATE_grid_size_1_var_214],
        inputs: [act1, act2],
        t: $TEMPLATE_t_var_215,
        mblock: [$TEMPLATE_mblock_0_var_216, $TEMPLATE_mblock_1_var_217],
        ublock: [$TEMPLATE_ublock_0_var_218, $TEMPLATE_ublock_1_var_219],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_674, $TEMPLATE_input_buf_min_size_tiles_1_var_675],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_220,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_221, $TEMPLATE_in_df_1_var_222],
        out_df: $TEMPLATE_out_df_var_223,
        intermed_df: $TEMPLATE_intermed_df_var_224,
        acc_df: $TEMPLATE_acc_df_var_225,
        math_fidelity: HiFi3,
      }
    add_and_norm_mean.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_226, $TEMPLATE_grid_loc_1_var_227],
        grid_size: [$TEMPLATE_grid_size_0_var_228, $TEMPLATE_grid_size_1_var_229],
        inputs: [add_and_norm_a_plus_b, lc.input_tensor.add_and_norm_mean.0],
        t: $TEMPLATE_t_var_230,
        mblock: [$TEMPLATE_mblock_0_var_231, $TEMPLATE_mblock_1_var_232],
        ublock: [$TEMPLATE_ublock_0_var_233, $TEMPLATE_ublock_1_var_234],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_676, $TEMPLATE_input_buf_min_size_tiles_1_var_677],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_235,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_236, $TEMPLATE_in_df_1_var_237],
        out_df: $TEMPLATE_out_df_var_238,
        intermed_df: $TEMPLATE_intermed_df_var_239,
        acc_df: $TEMPLATE_acc_df_var_240,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { r: $TEMPLATE_r_var_241 }, broadcast: { z: $TEMPLATE_z_var_242 }],
        attributes: { m_k: $TEMPLATE_m_k_var_243, u_kt: $TEMPLATE_u_kt_var_244 },
      }
    buffer_0_add_and_norm_a_plus_b_add_and_norm_sub:
      {
        type: nop,
        grid_loc: [$TEMPLATE_grid_loc_0_var_245, $TEMPLATE_grid_loc_1_var_246],
        grid_size: [$TEMPLATE_grid_size_0_var_247, $TEMPLATE_grid_size_1_var_248],
        inputs: [add_and_norm_a_plus_b],
        t: $TEMPLATE_t_var_249,
        mblock: [$TEMPLATE_mblock_0_var_250, $TEMPLATE_mblock_1_var_251],
        ublock: [$TEMPLATE_ublock_0_var_252, $TEMPLATE_ublock_1_var_253],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_678],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_254,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_255],
        out_df: $TEMPLATE_out_df_var_256,
        intermed_df: $TEMPLATE_intermed_df_var_257,
        acc_df: $TEMPLATE_acc_df_var_258,
        math_fidelity: HiFi3,
      }
    add_and_norm_sub:
      {
        type: subtract,
        grid_loc: [$TEMPLATE_grid_loc_0_var_259, $TEMPLATE_grid_loc_1_var_260],
        grid_size: [$TEMPLATE_grid_size_0_var_261, $TEMPLATE_grid_size_1_var_262],
        inputs:
          [
            buffer_0_add_and_norm_a_plus_b_add_and_norm_sub,
            add_and_norm_mean.lc1,
          ],
        t: $TEMPLATE_t_var_263,
        mblock: [$TEMPLATE_mblock_0_var_264, $TEMPLATE_mblock_1_var_265],
        ublock: [$TEMPLATE_ublock_0_var_266, $TEMPLATE_ublock_1_var_267],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_679, $TEMPLATE_input_buf_min_size_tiles_1_var_680],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_268,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_269, $TEMPLATE_in_df_1_var_270],
        out_df: $TEMPLATE_out_df_var_271,
        intermed_df: $TEMPLATE_intermed_df_var_272,
        acc_df: $TEMPLATE_acc_df_var_273,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { c: $TEMPLATE_c_var_274 }],
      }
    add_and_norm_sq:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_275, $TEMPLATE_grid_loc_1_var_276],
        grid_size: [$TEMPLATE_grid_size_0_var_277, $TEMPLATE_grid_size_1_var_278],
        inputs: [add_and_norm_sub, add_and_norm_sub],
        t: $TEMPLATE_t_var_279,
        mblock: [$TEMPLATE_mblock_0_var_280, $TEMPLATE_mblock_1_var_281],
        ublock: [$TEMPLATE_ublock_0_var_282, $TEMPLATE_ublock_1_var_283],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_681, $TEMPLATE_input_buf_min_size_tiles_1_var_682],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_284,
        ublock_order: c,
        in_df: [$TEMPLATE_in_df_0_var_285, $TEMPLATE_in_df_1_var_286],
        out_df: $TEMPLATE_out_df_var_287,
        intermed_df: $TEMPLATE_intermed_df_var_288,
        acc_df: $TEMPLATE_acc_df_var_289,
        math_fidelity: HiFi3,
      }
    add_and_norm_var.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_290, $TEMPLATE_grid_loc_1_var_291],
        grid_size: [$TEMPLATE_grid_size_0_var_292, $TEMPLATE_grid_size_1_var_293],
        inputs: [add_and_norm_sq, lc.input_tensor.add_and_norm_var.0],
        t: $TEMPLATE_t_var_294,
        mblock: [$TEMPLATE_mblock_0_var_295, $TEMPLATE_mblock_1_var_296],
        ublock: [$TEMPLATE_ublock_0_var_297, $TEMPLATE_ublock_1_var_298],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_683, $TEMPLATE_input_buf_min_size_tiles_1_var_684],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_299,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_300, $TEMPLATE_in_df_1_var_301],
        out_df: $TEMPLATE_out_df_var_302,
        intermed_df: $TEMPLATE_intermed_df_var_303,
        acc_df: $TEMPLATE_acc_df_var_304,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { r: $TEMPLATE_r_var_305 }, broadcast: { z: $TEMPLATE_z_var_306 }],
        attributes: { m_k: $TEMPLATE_m_k_var_307, u_kt: $TEMPLATE_u_kt_var_308 },
      }
    add_and_norm_var_plus_eps:
      {
        type: add,
        grid_loc: [$TEMPLATE_grid_loc_0_var_309, $TEMPLATE_grid_loc_1_var_310],
        grid_size: [$TEMPLATE_grid_size_0_var_311, $TEMPLATE_grid_size_1_var_312],
        inputs: [add_and_norm_var.lc1, constant_1_add_and_norm_var_plus_eps],
        t: $TEMPLATE_t_var_313,
        mblock: [$TEMPLATE_mblock_0_var_314, $TEMPLATE_mblock_1_var_315],
        ublock: [$TEMPLATE_ublock_0_var_316, $TEMPLATE_ublock_1_var_317],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_685, $TEMPLATE_input_buf_min_size_tiles_1_var_686],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_318,
        ublock_order: c,
        in_df: [$TEMPLATE_in_df_0_var_319, $TEMPLATE_in_df_1_var_320],
        out_df: $TEMPLATE_out_df_var_321,
        intermed_df: $TEMPLATE_intermed_df_var_322,
        acc_df: $TEMPLATE_acc_df_var_323,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { r: $TEMPLATE_r_var_324 }, broadcast: { z: $TEMPLATE_z_var_325 }],
      }
    add_and_norm_sqrt:
      {
        type: sqrt,
        grid_loc: [$TEMPLATE_grid_loc_0_var_326, $TEMPLATE_grid_loc_1_var_327],
        grid_size: [$TEMPLATE_grid_size_0_var_328, $TEMPLATE_grid_size_1_var_329],
        inputs: [add_and_norm_var_plus_eps],
        t: $TEMPLATE_t_var_330,
        mblock: [$TEMPLATE_mblock_0_var_331, $TEMPLATE_mblock_1_var_332],
        ublock: [$TEMPLATE_ublock_0_var_333, $TEMPLATE_ublock_1_var_334],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_687],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_335,
        ublock_order: c,
        in_df: [$TEMPLATE_in_df_0_var_336],
        out_df: $TEMPLATE_out_df_var_337,
        intermed_df: $TEMPLATE_intermed_df_var_338,
        acc_df: $TEMPLATE_acc_df_var_339,
        math_fidelity: HiFi3,
      }
    add_and_norm_recip:
      {
        type: reciprocal,
        grid_loc: [$TEMPLATE_grid_loc_0_var_340, $TEMPLATE_grid_loc_1_var_341],
        grid_size: [$TEMPLATE_grid_size_0_var_342, $TEMPLATE_grid_size_1_var_343],
        inputs: [add_and_norm_sqrt],
        t: $TEMPLATE_t_var_344,
        mblock: [$TEMPLATE_mblock_0_var_345, $TEMPLATE_mblock_1_var_346],
        ublock: [$TEMPLATE_ublock_0_var_347, $TEMPLATE_ublock_1_var_348],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_688],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_349,
        ublock_order: c,
        in_df: [$TEMPLATE_in_df_0_var_350],
        out_df: $TEMPLATE_out_df_var_351,
        intermed_df: $TEMPLATE_intermed_df_var_352,
        acc_df: $TEMPLATE_acc_df_var_353,
        math_fidelity: HiFi3,
      }
    add_and_norm_recip_s_brcst_m1_0_0.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_354, $TEMPLATE_grid_loc_1_var_355],
        grid_size: [$TEMPLATE_grid_size_0_var_356, $TEMPLATE_grid_size_1_var_357],
        inputs:
          [
            add_and_norm_recip,
            lc.input_tensor.add_and_norm_recip_s_brcst_m1_0_0.0,
          ],
        t: $TEMPLATE_t_var_358,
        mblock: [$TEMPLATE_mblock_0_var_359, $TEMPLATE_mblock_1_var_360],
        ublock: [$TEMPLATE_ublock_0_var_361, $TEMPLATE_ublock_1_var_362],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_689, $TEMPLATE_input_buf_min_size_tiles_1_var_690],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_363,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_364, $TEMPLATE_in_df_1_var_365],
        out_df: $TEMPLATE_out_df_var_366,
        intermed_df: $TEMPLATE_intermed_df_var_367,
        acc_df: $TEMPLATE_acc_df_var_368,
        math_fidelity: HiFi3,
        attributes: { m_k: $TEMPLATE_m_k_var_369, u_kt: $TEMPLATE_u_kt_var_370 },
        input_1_tms: [broadcast: { z: $TEMPLATE_z_var_371 }],
      }
    buffer_1_add_and_norm_sub_add_and_norm_output:
      {
        type: nop,
        grid_loc: [$TEMPLATE_grid_loc_0_var_372, $TEMPLATE_grid_loc_1_var_373],
        grid_size: [$TEMPLATE_grid_size_0_var_374, $TEMPLATE_grid_size_1_var_375],
        inputs: [add_and_norm_sub],
        t: $TEMPLATE_t_var_376,
        mblock: [$TEMPLATE_mblock_0_var_377, $TEMPLATE_mblock_1_var_378],
        ublock: [$TEMPLATE_ublock_0_var_379, $TEMPLATE_ublock_1_var_380],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_691],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_381,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_382],
        out_df: $TEMPLATE_out_df_var_383,
        intermed_df: $TEMPLATE_intermed_df_var_384,
        acc_df: $TEMPLATE_acc_df_var_385,
        math_fidelity: HiFi3,
      }
    buffer_0_add_and_norm_sub_add_and_norm_output:
      {
        type: nop,
        grid_loc: [$TEMPLATE_grid_loc_0_var_386, $TEMPLATE_grid_loc_1_var_387],
        grid_size: [$TEMPLATE_grid_size_0_var_388, $TEMPLATE_grid_size_1_var_389],
        inputs: [buffer_1_add_and_norm_sub_add_and_norm_output],
        t: $TEMPLATE_t_var_390,
        mblock: [$TEMPLATE_mblock_0_var_391, $TEMPLATE_mblock_1_var_392],
        ublock: [$TEMPLATE_ublock_0_var_393, $TEMPLATE_ublock_1_var_394],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_692],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_395,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_396],
        out_df: $TEMPLATE_out_df_var_397,
        intermed_df: $TEMPLATE_intermed_df_var_398,
        acc_df: $TEMPLATE_acc_df_var_399,
        math_fidelity: HiFi3,
      }
    add_and_norm_output:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_400, $TEMPLATE_grid_loc_1_var_401],
        grid_size: [$TEMPLATE_grid_size_0_var_402, $TEMPLATE_grid_size_1_var_403],
        inputs:
          [
            buffer_0_add_and_norm_sub_add_and_norm_output,
            add_and_norm_recip_s_brcst_m1_0_0.lc1,
          ],
        t: $TEMPLATE_t_var_404,
        mblock: [$TEMPLATE_mblock_0_var_405, $TEMPLATE_mblock_1_var_406],
        ublock: [$TEMPLATE_ublock_0_var_407, $TEMPLATE_ublock_1_var_408],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_693, $TEMPLATE_input_buf_min_size_tiles_1_var_694],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_409,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_410, $TEMPLATE_in_df_1_var_411],
        out_df: $TEMPLATE_out_df_var_412,
        intermed_df: $TEMPLATE_intermed_df_var_413,
        acc_df: $TEMPLATE_acc_df_var_414,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { c: $TEMPLATE_c_var_415 }],
      }
    test_module.weights_s_brcst_m2_1_0.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_416, $TEMPLATE_grid_loc_1_var_417],
        grid_size: [$TEMPLATE_grid_size_0_var_418, $TEMPLATE_grid_size_1_var_419],
        inputs:
          [
            lc.input_tensor.test_module.weights_s_brcst_m2_1_0.0,
            test_module.weights,
          ],
        t: $TEMPLATE_t_var_420,
        mblock: [$TEMPLATE_mblock_0_var_421, $TEMPLATE_mblock_1_var_422],
        ublock: [$TEMPLATE_ublock_0_var_423, $TEMPLATE_ublock_1_var_424],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_695, $TEMPLATE_input_buf_min_size_tiles_1_var_696],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_425,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_426, $TEMPLATE_in_df_1_var_427],
        out_df: $TEMPLATE_out_df_var_428,
        intermed_df: $TEMPLATE_intermed_df_var_429,
        acc_df: $TEMPLATE_acc_df_var_430,
        math_fidelity: HiFi3,
        attributes: { m_k: $TEMPLATE_m_k_var_431, u_kt: $TEMPLATE_u_kt_var_432 },
        input_0_tms: [broadcast: { z: $TEMPLATE_z_var_433 }],
      }
    add_and_norm_weights:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_434, $TEMPLATE_grid_loc_1_var_435],
        grid_size: [$TEMPLATE_grid_size_0_var_436, $TEMPLATE_grid_size_1_var_437],
        inputs: [add_and_norm_output, test_module.weights_s_brcst_m2_1_0.lc1],
        t: $TEMPLATE_t_var_438,
        mblock: [$TEMPLATE_mblock_0_var_439, $TEMPLATE_mblock_1_var_440],
        ublock: [$TEMPLATE_ublock_0_var_441, $TEMPLATE_ublock_1_var_442],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_697, $TEMPLATE_input_buf_min_size_tiles_1_var_698],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_443,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_444, $TEMPLATE_in_df_1_var_445],
        out_df: $TEMPLATE_out_df_var_446,
        intermed_df: $TEMPLATE_intermed_df_var_447,
        acc_df: $TEMPLATE_acc_df_var_448,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { r: $TEMPLATE_r_var_449 }],
      }
    test_module.bias_s_brcst_m2_1_0.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_450, $TEMPLATE_grid_loc_1_var_451],
        grid_size: [$TEMPLATE_grid_size_0_var_452, $TEMPLATE_grid_size_1_var_453],
        inputs:
          [lc.input_tensor.test_module.bias_s_brcst_m2_1_0.0, test_module.bias],
        t: $TEMPLATE_t_var_454,
        mblock: [$TEMPLATE_mblock_0_var_455, $TEMPLATE_mblock_1_var_456],
        ublock: [$TEMPLATE_ublock_0_var_457, $TEMPLATE_ublock_1_var_458],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_699, $TEMPLATE_input_buf_min_size_tiles_1_var_700],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_459,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_460, $TEMPLATE_in_df_1_var_461],
        out_df: $TEMPLATE_out_df_var_462,
        intermed_df: $TEMPLATE_intermed_df_var_463,
        acc_df: $TEMPLATE_acc_df_var_464,
        math_fidelity: HiFi3,
        attributes: { m_k: $TEMPLATE_m_k_var_465, u_kt: $TEMPLATE_u_kt_var_466 },
        input_0_tms: [broadcast: { z: $TEMPLATE_z_var_467 }],
      }
    add_and_norm_bias:
      {
        type: add,
        grid_loc: [$TEMPLATE_grid_loc_0_var_468, $TEMPLATE_grid_loc_1_var_469],
        grid_size: [$TEMPLATE_grid_size_0_var_470, $TEMPLATE_grid_size_1_var_471],
        inputs: [add_and_norm_weights, test_module.bias_s_brcst_m2_1_0.lc1],
        untilize_output: $TEMPLATE_untilize_output_var_472,
        t: $TEMPLATE_t_var_473,
        mblock: [$TEMPLATE_mblock_0_var_474, $TEMPLATE_mblock_1_var_475],
        ublock: [$TEMPLATE_ublock_0_var_476, $TEMPLATE_ublock_1_var_477],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_701, $TEMPLATE_input_buf_min_size_tiles_1_var_702],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_478,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_479, $TEMPLATE_in_df_1_var_480],
        out_df: $TEMPLATE_out_df_var_481,
        intermed_df: $TEMPLATE_intermed_df_var_482,
        acc_df: $TEMPLATE_acc_df_var_483,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { r: $TEMPLATE_r_var_484 }],
      }
  # backward
  bwd_1:
    target_device: 0
    input_count: $TEMPLATE_input_count_var_485
    bw_in1_add_and_norm_bias_reduce_sum_0.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_486, $TEMPLATE_grid_loc_1_var_487],
        grid_size: [$TEMPLATE_grid_size_0_var_488, $TEMPLATE_grid_size_1_var_489],
        inputs:
          [
            lc.input_tensor.bw_in1_add_and_norm_bias_reduce_sum_0.0,
            loss_test_module.output_add_and_norm_bias,
          ],
        t: $TEMPLATE_t_var_490,
        mblock: [$TEMPLATE_mblock_0_var_491, $TEMPLATE_mblock_1_var_492],
        ublock: [$TEMPLATE_ublock_0_var_493, $TEMPLATE_ublock_1_var_494],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_703, $TEMPLATE_input_buf_min_size_tiles_1_var_704],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_495,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_496, $TEMPLATE_in_df_1_var_497],
        out_df: $TEMPLATE_out_df_var_498,
        intermed_df: $TEMPLATE_intermed_df_var_499,
        acc_df: $TEMPLATE_acc_df_var_500,
        math_fidelity: HiFi3,
        input_0_tms: [broadcast: { c: $TEMPLATE_c_var_501 }, broadcast: { z: $TEMPLATE_z_var_502 }],
        attributes: { m_k: $TEMPLATE_m_k_var_503, u_kt: $TEMPLATE_u_kt_var_504 },
      }
    bw_in1_add_and_norm_bias_brcst_reduce_sum_0:
      {
        type: nop,
        grid_loc: [$TEMPLATE_grid_loc_0_var_505, $TEMPLATE_grid_loc_1_var_506],
        grid_size: [$TEMPLATE_grid_size_0_var_507, $TEMPLATE_grid_size_1_var_508],
        inputs: [bw_in1_add_and_norm_bias_reduce_sum_0.lc1],
        gradient_op: true,
        t: $TEMPLATE_t_var_509,
        mblock: [$TEMPLATE_mblock_0_var_510, $TEMPLATE_mblock_1_var_511],
        ublock: [$TEMPLATE_ublock_0_var_512, $TEMPLATE_ublock_1_var_513],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_705],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_514,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_515],
        out_df: $TEMPLATE_out_df_var_516,
        intermed_df: $TEMPLATE_intermed_df_var_517,
        acc_df: $TEMPLATE_acc_df_var_518,
        math_fidelity: HiFi3,
      }
    bw_in1_add_and_norm_weights_multiply_0:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_519, $TEMPLATE_grid_loc_1_var_520],
        grid_size: [$TEMPLATE_grid_size_0_var_521, $TEMPLATE_grid_size_1_var_522],
        inputs:
          [
            loss_test_module.output_add_and_norm_bias,
            e2e_add_and_norm_output_0,
          ],
        t: $TEMPLATE_t_var_523,
        mblock: [$TEMPLATE_mblock_0_var_524, $TEMPLATE_mblock_1_var_525],
        ublock: [$TEMPLATE_ublock_0_var_526, $TEMPLATE_ublock_1_var_527],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_706, $TEMPLATE_input_buf_min_size_tiles_1_var_707],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_528,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_529, $TEMPLATE_in_df_1_var_530],
        out_df: $TEMPLATE_out_df_var_531,
        intermed_df: $TEMPLATE_intermed_df_var_532,
        acc_df: $TEMPLATE_acc_df_var_533,
        math_fidelity: HiFi3,
      }
    bw_in1_add_and_norm_weights_reduce_sum_1.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_534, $TEMPLATE_grid_loc_1_var_535],
        grid_size: [$TEMPLATE_grid_size_0_var_536, $TEMPLATE_grid_size_1_var_537],
        inputs:
          [
            lc.input_tensor.bw_in1_add_and_norm_weights_reduce_sum_1.0,
            bw_in1_add_and_norm_weights_multiply_0,
          ],
        t: $TEMPLATE_t_var_538,
        mblock: [$TEMPLATE_mblock_0_var_539, $TEMPLATE_mblock_1_var_540],
        ublock: [$TEMPLATE_ublock_0_var_541, $TEMPLATE_ublock_1_var_542],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_708, $TEMPLATE_input_buf_min_size_tiles_1_var_709],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_543,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_544, $TEMPLATE_in_df_1_var_545],
        out_df: $TEMPLATE_out_df_var_546,
        intermed_df: $TEMPLATE_intermed_df_var_547,
        acc_df: $TEMPLATE_acc_df_var_548,
        math_fidelity: HiFi3,
        input_0_tms: [broadcast: { c: $TEMPLATE_c_var_549 }, broadcast: { z: $TEMPLATE_z_var_550 }],
        attributes: { m_k: $TEMPLATE_m_k_var_551, u_kt: $TEMPLATE_u_kt_var_552 },
      }
    bw_in1_add_and_norm_weights_brcst_reduce_sum_0:
      {
        type: nop,
        grid_loc: [$TEMPLATE_grid_loc_0_var_553, $TEMPLATE_grid_loc_1_var_554],
        grid_size: [$TEMPLATE_grid_size_0_var_555, $TEMPLATE_grid_size_1_var_556],
        inputs: [bw_in1_add_and_norm_weights_reduce_sum_1.lc1],
        gradient_op: true,
        t: $TEMPLATE_t_var_557,
        mblock: [$TEMPLATE_mblock_0_var_558, $TEMPLATE_mblock_1_var_559],
        ublock: [$TEMPLATE_ublock_0_var_560, $TEMPLATE_ublock_1_var_561],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_710],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_562,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_563],
        out_df: $TEMPLATE_out_df_var_564,
        intermed_df: $TEMPLATE_intermed_df_var_565,
        acc_df: $TEMPLATE_acc_df_var_566,
        math_fidelity: HiFi3,
      }
  # optimizer
  opt_2:
    target_device: 0
    input_count: $TEMPLATE_input_count_var_567
    opt_in1_test_module.weights_multiply_1:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_568, $TEMPLATE_grid_loc_1_var_569],
        grid_size: [$TEMPLATE_grid_size_0_var_570, $TEMPLATE_grid_size_1_var_571],
        inputs: [grad_acc_test_module.weights, input_opt_test_module.weights_0.lr],
        t: $TEMPLATE_t_var_572,
        mblock: [$TEMPLATE_mblock_0_var_573, $TEMPLATE_mblock_1_var_574],
        ublock: [$TEMPLATE_ublock_0_var_575, $TEMPLATE_ublock_1_var_576],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_711, $TEMPLATE_input_buf_min_size_tiles_1_var_712],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_577,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_578, $TEMPLATE_in_df_1_var_579],
        out_df: $TEMPLATE_out_df_var_580,
        intermed_df: $TEMPLATE_intermed_df_var_581,
        acc_df: $TEMPLATE_acc_df_var_582,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { c: $TEMPLATE_c_var_583 }],
      }
    opt_in1_test_module.weights_subtract_2:
      {
        type: subtract,
        grid_loc: [$TEMPLATE_grid_loc_0_var_584, $TEMPLATE_grid_loc_1_var_585],
        grid_size: [$TEMPLATE_grid_size_0_var_586, $TEMPLATE_grid_size_1_var_587],
        inputs: [test_module.weights, opt_in1_test_module.weights_multiply_1],
        t: $TEMPLATE_t_var_588,
        mblock: [$TEMPLATE_mblock_0_var_589, $TEMPLATE_mblock_1_var_590],
        ublock: [$TEMPLATE_ublock_0_var_591, $TEMPLATE_ublock_1_var_592],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_713, $TEMPLATE_input_buf_min_size_tiles_1_var_714],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_593,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_594, $TEMPLATE_in_df_1_var_595],
        out_df: $TEMPLATE_out_df_var_596,
        intermed_df: $TEMPLATE_intermed_df_var_597,
        acc_df: $TEMPLATE_acc_df_var_598,
        math_fidelity: HiFi3,
      }
    opt_in1_test_module.bias_multiply_1:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_599, $TEMPLATE_grid_loc_1_var_600],
        grid_size: [$TEMPLATE_grid_size_0_var_601, $TEMPLATE_grid_size_1_var_602],
        inputs: [grad_acc_test_module.bias, input_opt_test_module.bias_0.lr],
        t: $TEMPLATE_t_var_603,
        mblock: [$TEMPLATE_mblock_0_var_604, $TEMPLATE_mblock_1_var_605],
        ublock: [$TEMPLATE_ublock_0_var_606, $TEMPLATE_ublock_1_var_607],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_715, $TEMPLATE_input_buf_min_size_tiles_1_var_716],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_608,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_609, $TEMPLATE_in_df_1_var_610],
        out_df: $TEMPLATE_out_df_var_611,
        intermed_df: $TEMPLATE_intermed_df_var_612,
        acc_df: $TEMPLATE_acc_df_var_613,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { c: $TEMPLATE_c_var_614 }],
      }
    opt_in1_test_module.bias_subtract_2:
      {
        type: subtract,
        grid_loc: [$TEMPLATE_grid_loc_0_var_615, $TEMPLATE_grid_loc_1_var_616],
        grid_size: [$TEMPLATE_grid_size_0_var_617, $TEMPLATE_grid_size_1_var_618],
        inputs: [test_module.bias, opt_in1_test_module.bias_multiply_1],
        t: $TEMPLATE_t_var_619,
        mblock: [$TEMPLATE_mblock_0_var_620, $TEMPLATE_mblock_1_var_621],
        ublock: [$TEMPLATE_ublock_0_var_622, $TEMPLATE_ublock_1_var_623],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_717, $TEMPLATE_input_buf_min_size_tiles_1_var_718],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_624,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_625, $TEMPLATE_in_df_1_var_626],
        out_df: $TEMPLATE_out_df_var_627,
        intermed_df: $TEMPLATE_intermed_df_var_628,
        acc_df: $TEMPLATE_acc_df_var_629,
        math_fidelity: HiFi3,
      }

programs:
  # forward
  - run_fwd:
      - param: [$p_microbatch_count, $p_microbatch_size]
      - staticvar: { $gptr_q0: 0, $lptr_q0: 0 }
      - var: { $c_zero: 0, $c_wrap: 2 }
      - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]
      - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count]
      - loop: $p_microbatch_count
      - execute:
          {
            graph_name: fwd_0,
            queue_settings:
              {
                act1:
                  {
                    prologue: $TEMPLATE_prologue_var_630,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $lptr_q0,
                    rd_ptr_global: $gptr_q0,
                  },
                act2:
                  {
                    prologue: $TEMPLATE_prologue_var_631,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $lptr_q0,
                    rd_ptr_global: $gptr_q0,
                  },
                lc.input_tensor.add_and_norm_mean.0:
                  {
                    prologue: $TEMPLATE_prologue_var_632,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                lc.input_tensor.add_and_norm_var.0:
                  {
                    prologue: $TEMPLATE_prologue_var_633,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                constant_1_add_and_norm_var_plus_eps:
                  {
                    prologue: $TEMPLATE_prologue_var_634,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                lc.input_tensor.add_and_norm_recip_s_brcst_m1_0_0.0:
                  {
                    prologue: $TEMPLATE_prologue_var_635,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                lc.input_tensor.test_module.weights_s_brcst_m2_1_0.0:
                  {
                    prologue: $TEMPLATE_prologue_var_636,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                test_module.weights:
                  {
                    prologue: $TEMPLATE_prologue_var_637,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                lc.input_tensor.test_module.bias_s_brcst_m2_1_0.0:
                  {
                    prologue: $TEMPLATE_prologue_var_638,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                test_module.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_639,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
              },
          }
      - varinst: [$gptr_q0, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$lptr_q0, incwrap, $p_microbatch_size, $c_wrap]
      - endloop
  # backward
  - run_bwd:
      - param: [$p_zero_grad, $p_microbatch_count, $p_microbatch_size]
      - staticvar: { $lptr_q0: 0, $gptr_q0: 0, $gptr_q1: 0, $lptr_q1: 0 }
      - var: { $c_zero: 0, $c_wrap: 2 }
      - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]
      - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count]
      - varinst: [$v_zero_grad, set, $p_zero_grad]
      - loop: $p_microbatch_count
      - execute:
          {
            graph_name: bwd_1,
            queue_settings:
              {
                loss_test_module.output_add_and_norm_bias:
                  {
                    prologue: $TEMPLATE_prologue_var_640,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $lptr_q0,
                    rd_ptr_global: $gptr_q0,
                  },
                e2e_add_and_norm_output_0:
                  {
                    prologue: $TEMPLATE_prologue_var_641,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $lptr_q1,
                    rd_ptr_global: $gptr_q1,
                  },
                lc.input_tensor.bw_in1_add_and_norm_bias_reduce_sum_0.0:
                  {
                    prologue: $TEMPLATE_prologue_var_642,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                lc.input_tensor.bw_in1_add_and_norm_weights_reduce_sum_1.0:
                  {
                    prologue: $TEMPLATE_prologue_var_643,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                grad_acc_test_module.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_644,
                    epilogue: true,
                    zero: $v_zero_grad,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_test_module.weights:
                  {
                    prologue: $TEMPLATE_prologue_var_645,
                    epilogue: true,
                    zero: $v_zero_grad,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
              },
          }
      - varinst: [$gptr_q0, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$gptr_q1, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$lptr_q0, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$lptr_q1, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$v_zero_grad, set, 0]
      - endloop
  # optimizer
  - run_opt:
      - var: { $p_microbatch_size: 1, $c_one: 1, $c_zero: 0 }
      - execute:
          {
            graph_name: opt_2,
            queue_settings:
              {
                test_module.weights:
                  {
                    prologue: $TEMPLATE_prologue_var_646,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                test_module.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_647,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_test_module.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_648,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_test_module.weights:
                  {
                    prologue: $TEMPLATE_prologue_var_649,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                input_opt_test_module.weights_0.lr:
                  {
                    prologue: $TEMPLATE_prologue_var_650,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                input_opt_test_module.bias_0.lr:
                  {
                    prologue: $TEMPLATE_prologue_var_651,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
              },
          }

test-config:
  test-args:
    minibatch_count: $TEMPLATE_minibatch_count_var_652
    microbatch_size: $TEMPLATE_microbatch_size_var_653
    microbatch_count: $TEMPLATE_microbatch_count_var_654
  comparison-config:
    type: AllCloseHw
    atol: 0.1
    rtol: 1.0
    check_pct: 0.85
    check_pcc: 0.90
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -1.0
    uniform_upper_bound: 1.0
    overrides:
      loss_test_module.output_add_and_norm_bias:
        type: Uniform
        uniform_lower_bound: -0.2
        uniform_upper_bound: 0.2
      input_opt_.*\.lr:
        type: Constant
        constant_value: 0.01
      lc.input_tensor..*_s_brcst_m2.*:
        type: Constant
        constant_value: 1.0
        set_tile_cols: [1, 1]
      lc.input_tensor..*_s_brcst_m1.*:
        type: Constant
        constant_value: 1.0
        set_tile_rows: [1, 1]
      lc.input_tensor.add_and_norm_mean.0:
        type: Constant
        constant_value: $TEMPLATE_mean_constant
      lc.input_tensor.add_and_norm_var.0:
        type: Constant
        constant_value: $TEMPLATE_mean_constant
        set_tile_cols: [1, 1]
      constant_1_add_and_norm_var_plus_eps:
        type: Constant
        constant_value: 0.00001
        set_tile_cols: [1, 1]
      .*\.weights:
        type: Normal
        normal_mean: 0.0
        normal_stddev: 0.01
        set_tile_rows: [1, 1]
      .*\.bias:
        type: Constant
        constant_value: 0.25
        set_tile_rows: [1, 1]
      .*reduce_sum.*:
        type: Constant
        constant_value: 1
