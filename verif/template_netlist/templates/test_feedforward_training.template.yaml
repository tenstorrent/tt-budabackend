# test_feedforward_training
# test_config_id=$TEMPLATE_test_config_id
# encoder_input_size_r=$TEMPLATE_encoder_input_size_r
# encoder_input_size_c=$TEMPLATE_encoder_input_size_c

devices:
  arch: $TEMPLATE_arch_name

queues:
  # input
  encoder_input:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_1,
      grid_size: [$TEMPLATE_grid_size_0_var_2, $TEMPLATE_grid_size_1_var_3],
      t: $TEMPLATE_t_var_4,
      mblock: [$TEMPLATE_mblock_0_var_5, $TEMPLATE_mblock_1_var_6],
      ublock: [$TEMPLATE_ublock_0_var_7, $TEMPLATE_ublock_1_var_8],
      ublock_order: r,
      df: $TEMPLATE_df_var_9,
      target_device: 0,
      loc: $TEMPLATE_loc_var_10,
      $TEMPLATE_loc_var_10: $TEMPLATE_loc_var_685,
    }
  # output
  ff.output_ff_0_ff2.bias:
    {
      input: ff_0_ff2.bias,
      type: queue,
      entries: $TEMPLATE_entries_var_12,
      grid_size: [$TEMPLATE_grid_size_0_var_13, $TEMPLATE_grid_size_1_var_14],
      t: $TEMPLATE_t_var_15,
      mblock: [$TEMPLATE_mblock_0_var_16, $TEMPLATE_mblock_1_var_17],
      ublock: [$TEMPLATE_ublock_0_var_18, $TEMPLATE_ublock_1_var_19],
      ublock_order: r,
      df: $TEMPLATE_df_var_20,
      target_device: 0,
      loc: $TEMPLATE_loc_var_21,
      $TEMPLATE_loc_var_21: $TEMPLATE_loc_var_686,
    }
  # parameter
  ff.bert.encoder.layer.0.intermediate.dense.weight:
    {
      input: opt_in1_ff.bert.encoder.layer.0.intermediate.dense.weight_subtract_2,
      type: ram,
      entries: $TEMPLATE_entries_var_23,
      grid_size: [$TEMPLATE_grid_size_0_var_24, $TEMPLATE_grid_size_1_var_25],
      t: $TEMPLATE_t_var_26,
      mblock: [$TEMPLATE_mblock_0_var_27, $TEMPLATE_mblock_1_var_28],
      ublock: [$TEMPLATE_ublock_0_var_29, $TEMPLATE_ublock_1_var_30],
      ublock_order: r,
      df: $TEMPLATE_df_var_31,
      target_device: 0,
      loc: $TEMPLATE_loc_var_32,
      $TEMPLATE_loc_var_32: $TEMPLATE_loc_var_687,
    }
  ff.bert.encoder.layer.0.intermediate.dense.bias:
    {
      input: opt_in1_ff.bert.encoder.layer.0.intermediate.dense.bias_subtract_2,
      type: ram,
      entries: $TEMPLATE_entries_var_34,
      grid_size: [$TEMPLATE_grid_size_0_var_35, $TEMPLATE_grid_size_1_var_36],
      t: $TEMPLATE_t_var_37,
      mblock: [$TEMPLATE_mblock_0_var_38, $TEMPLATE_mblock_1_var_39],
      ublock: [$TEMPLATE_ublock_0_var_40, $TEMPLATE_ublock_1_var_41],
      ublock_order: r,
      df: $TEMPLATE_df_var_42,
      target_device: 0,
      loc: $TEMPLATE_loc_var_43,
      $TEMPLATE_loc_var_43: $TEMPLATE_loc_var_688,
    }
  ff.bert.encoder.layer.0.output.dense.weight:
    {
      input: opt_in0_ff.bert.encoder.layer.0.output.dense.weight_subtract_2,
      type: ram,
      entries: $TEMPLATE_entries_var_45,
      grid_size: [$TEMPLATE_grid_size_0_var_46, $TEMPLATE_grid_size_1_var_47],
      t: $TEMPLATE_t_var_48,
      mblock: [$TEMPLATE_mblock_0_var_49, $TEMPLATE_mblock_1_var_50],
      ublock: [$TEMPLATE_ublock_0_var_51, $TEMPLATE_ublock_1_var_52],
      ublock_order: r,
      df: $TEMPLATE_df_var_53,
      target_device: 0,
      loc: $TEMPLATE_loc_var_54,
      $TEMPLATE_loc_var_54: $TEMPLATE_loc_var_689,
    }
  ff.bert.encoder.layer.0.output.dense.bias:
    {
      input: opt_in1_ff.bert.encoder.layer.0.output.dense.bias_subtract_2,
      type: ram,
      entries: $TEMPLATE_entries_var_56,
      grid_size: [$TEMPLATE_grid_size_0_var_57, $TEMPLATE_grid_size_1_var_58],
      t: $TEMPLATE_t_var_59,
      mblock: [$TEMPLATE_mblock_0_var_60, $TEMPLATE_mblock_1_var_61],
      ublock: [$TEMPLATE_ublock_0_var_62, $TEMPLATE_ublock_1_var_63],
      ublock_order: r,
      df: $TEMPLATE_df_var_64,
      target_device: 0,
      loc: $TEMPLATE_loc_var_65,
      $TEMPLATE_loc_var_65: $TEMPLATE_loc_var_690,
    }
  # constant
  lc.input_tensor.ff.bert.encoder.layer.0.intermediate.dense.bias_s_brcst_m2_1_0.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_67,
      grid_size: [$TEMPLATE_grid_size_0_var_68, $TEMPLATE_grid_size_1_var_69],
      t: $TEMPLATE_t_var_70,
      mblock: [$TEMPLATE_mblock_0_var_71, $TEMPLATE_mblock_1_var_72],
      ublock: [$TEMPLATE_ublock_0_var_73, $TEMPLATE_ublock_1_var_74],
      ublock_order: r,
      df: $TEMPLATE_df_var_75,
      target_device: 0,
      loc: $TEMPLATE_loc_var_76,
      $TEMPLATE_loc_var_76: $TEMPLATE_loc_var_691,
    }
  lc.input_tensor.ff.bert.encoder.layer.0.output.dense.bias_s_brcst_m2_1_0.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_78,
      grid_size: [$TEMPLATE_grid_size_0_var_79, $TEMPLATE_grid_size_1_var_80],
      t: $TEMPLATE_t_var_81,
      mblock: [$TEMPLATE_mblock_0_var_82, $TEMPLATE_mblock_1_var_83],
      ublock: [$TEMPLATE_ublock_0_var_84, $TEMPLATE_ublock_1_var_85],
      ublock_order: r,
      df: $TEMPLATE_df_var_86,
      target_device: 0,
      loc: $TEMPLATE_loc_var_87,
      $TEMPLATE_loc_var_87: $TEMPLATE_loc_var_692,
    }
  lc.input_tensor.bw_in1_ff_0_ff2.bias_reduce_sum_0.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_89,
      grid_size: [$TEMPLATE_grid_size_0_var_90, $TEMPLATE_grid_size_1_var_91],
      t: $TEMPLATE_t_var_92,
      mblock: [$TEMPLATE_mblock_0_var_93, $TEMPLATE_mblock_1_var_94],
      ublock: [$TEMPLATE_ublock_0_var_95, $TEMPLATE_ublock_1_var_96],
      ublock_order: r,
      df: $TEMPLATE_df_var_97,
      target_device: 0,
      loc: $TEMPLATE_loc_var_98,
      $TEMPLATE_loc_var_98: $TEMPLATE_loc_var_693,
    }
  lc.input_tensor.bw_in1_ff_0_ff1.bias_reduce_sum_0.0:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_100,
      grid_size: [$TEMPLATE_grid_size_0_var_101, $TEMPLATE_grid_size_1_var_102],
      t: $TEMPLATE_t_var_103,
      mblock: [$TEMPLATE_mblock_0_var_104, $TEMPLATE_mblock_1_var_105],
      ublock: [$TEMPLATE_ublock_0_var_106, $TEMPLATE_ublock_1_var_107],
      ublock_order: r,
      df: $TEMPLATE_df_var_108,
      target_device: 0,
      loc: $TEMPLATE_loc_var_109,
      $TEMPLATE_loc_var_109: $TEMPLATE_loc_var_694,
    }
  # epoch_to_epoch
  e2e_ff0_gelu_0:
    {
      input: ff0_gelu,
      type: queue,
      entries: $TEMPLATE_entries_var_111,
      grid_size: [$TEMPLATE_grid_size_0_var_112, $TEMPLATE_grid_size_1_var_113],
      t: $TEMPLATE_t_var_114,
      mblock: [$TEMPLATE_mblock_0_var_115, $TEMPLATE_mblock_1_var_116],
      ublock: [$TEMPLATE_ublock_0_var_117, $TEMPLATE_ublock_1_var_118],
      ublock_order: c,
      df: $TEMPLATE_df_var_119,
      target_device: 0,
      loc: $TEMPLATE_loc_var_120,
      $TEMPLATE_loc_var_120: $TEMPLATE_loc_var_695,
    }
  e2e_ff_0_ff1.bias_0:
    {
      input: ff_0_ff1.bias,
      type: queue,
      entries: $TEMPLATE_entries_var_122,
      grid_size: [$TEMPLATE_grid_size_0_var_123, $TEMPLATE_grid_size_1_var_124],
      t: $TEMPLATE_t_var_125,
      mblock: [$TEMPLATE_mblock_0_var_126, $TEMPLATE_mblock_1_var_127],
      ublock: [$TEMPLATE_ublock_0_var_128, $TEMPLATE_ublock_1_var_129],
      ublock_order: r,
      df: $TEMPLATE_df_var_130,
      target_device: 0,
      loc: $TEMPLATE_loc_var_131,
      $TEMPLATE_loc_var_131: $TEMPLATE_loc_var_696,
    }
  # optimizer_parameter
  input_opt_ff.bert.encoder.layer.0.intermediate.dense.weight_0.lr:
    {
      input: HOST,
      type: ram,
      entries: $TEMPLATE_entries_var_133,
      grid_size: [$TEMPLATE_grid_size_0_var_134, $TEMPLATE_grid_size_1_var_135],
      t: $TEMPLATE_t_var_136,
      mblock: [$TEMPLATE_mblock_0_var_137, $TEMPLATE_mblock_1_var_138],
      ublock: [$TEMPLATE_ublock_0_var_139, $TEMPLATE_ublock_1_var_140],
      ublock_order: r,
      df: $TEMPLATE_df_var_141,
      target_device: 0,
      loc: $TEMPLATE_loc_var_142,
      $TEMPLATE_loc_var_142: $TEMPLATE_loc_var_697,
    }
  input_opt_ff.bert.encoder.layer.0.intermediate.dense.bias_0.lr:
    {
      input: HOST,
      type: ram,
      entries: $TEMPLATE_entries_var_144,
      grid_size: [$TEMPLATE_grid_size_0_var_145, $TEMPLATE_grid_size_1_var_146],
      t: $TEMPLATE_t_var_147,
      mblock: [$TEMPLATE_mblock_0_var_148, $TEMPLATE_mblock_1_var_149],
      ublock: [$TEMPLATE_ublock_0_var_150, $TEMPLATE_ublock_1_var_151],
      ublock_order: r,
      df: $TEMPLATE_df_var_152,
      target_device: 0,
      loc: $TEMPLATE_loc_var_153,
      $TEMPLATE_loc_var_153: $TEMPLATE_loc_var_698,
    }
  input_opt_ff.bert.encoder.layer.0.output.dense.weight_0.lr:
    {
      input: HOST,
      type: ram,
      entries: $TEMPLATE_entries_var_155,
      grid_size: [$TEMPLATE_grid_size_0_var_156, $TEMPLATE_grid_size_1_var_157],
      t: $TEMPLATE_t_var_158,
      mblock: [$TEMPLATE_mblock_0_var_159, $TEMPLATE_mblock_1_var_160],
      ublock: [$TEMPLATE_ublock_0_var_161, $TEMPLATE_ublock_1_var_162],
      ublock_order: r,
      df: $TEMPLATE_df_var_163,
      target_device: 0,
      loc: $TEMPLATE_loc_var_164,
      $TEMPLATE_loc_var_164: $TEMPLATE_loc_var_699,
    }
  input_opt_ff.bert.encoder.layer.0.output.dense.bias_0.lr:
    {
      input: HOST,
      type: ram,
      entries: $TEMPLATE_entries_var_166,
      grid_size: [$TEMPLATE_grid_size_0_var_167, $TEMPLATE_grid_size_1_var_168],
      t: $TEMPLATE_t_var_169,
      mblock: [$TEMPLATE_mblock_0_var_170, $TEMPLATE_mblock_1_var_171],
      ublock: [$TEMPLATE_ublock_0_var_172, $TEMPLATE_ublock_1_var_173],
      ublock_order: r,
      df: $TEMPLATE_df_var_174,
      target_device: 0,
      loc: $TEMPLATE_loc_var_175,
      $TEMPLATE_loc_var_175: $TEMPLATE_loc_var_700,
    }
  # loss
  loss_ff.output_ff_0_ff2.bias:
    {
      input: HOST,
      type: queue,
      entries: $TEMPLATE_entries_var_177,
      grid_size: [$TEMPLATE_grid_size_0_var_178, $TEMPLATE_grid_size_1_var_179],
      t: $TEMPLATE_t_var_180,
      mblock: [$TEMPLATE_mblock_0_var_181, $TEMPLATE_mblock_1_var_182],
      ublock: [$TEMPLATE_ublock_0_var_183, $TEMPLATE_ublock_1_var_184],
      ublock_order: r,
      df: $TEMPLATE_df_var_185,
      target_device: 0,
      loc: $TEMPLATE_loc_var_186,
      $TEMPLATE_loc_var_186: $TEMPLATE_loc_var_701,
    }
  # grad_accumulator
  grad_acc_ff.bert.encoder.layer.0.output.dense.bias:
    {
      input: bw_in1_ff_0_ff2.bias_brcst_reduce_sum_0,
      type: ram,
      entries: $TEMPLATE_entries_var_188,
      grid_size: [$TEMPLATE_grid_size_0_var_189, $TEMPLATE_grid_size_1_var_190],
      t: $TEMPLATE_t_var_191,
      mblock: [$TEMPLATE_mblock_0_var_192, $TEMPLATE_mblock_1_var_193],
      ublock: [$TEMPLATE_ublock_0_var_194, $TEMPLATE_ublock_1_var_195],
      ublock_order: r,
      df: $TEMPLATE_df_var_196,
      target_device: 0,
      loc: $TEMPLATE_loc_var_197,
      $TEMPLATE_loc_var_197: $TEMPLATE_loc_var_702,
    }
  grad_acc_ff.bert.encoder.layer.0.output.dense.weight:
    {
      input: bw_in1_ff_0_ff2_matmul_1,
      type: ram,
      entries: $TEMPLATE_entries_var_199,
      grid_size: [$TEMPLATE_grid_size_0_var_200, $TEMPLATE_grid_size_1_var_201],
      t: $TEMPLATE_t_var_202,
      mblock: [$TEMPLATE_mblock_0_var_203, $TEMPLATE_mblock_1_var_204],
      ublock: [$TEMPLATE_ublock_0_var_205, $TEMPLATE_ublock_1_var_206],
      ublock_order: r,
      df: $TEMPLATE_df_var_207,
      target_device: 0,
      loc: $TEMPLATE_loc_var_208,
      $TEMPLATE_loc_var_208: $TEMPLATE_loc_var_703,
    }
  grad_acc_ff.bert.encoder.layer.0.intermediate.dense.bias:
    {
      input: bw_in1_ff_0_ff1.bias_brcst_reduce_sum_0,
      type: ram,
      entries: $TEMPLATE_entries_var_210,
      grid_size: [$TEMPLATE_grid_size_0_var_211, $TEMPLATE_grid_size_1_var_212],
      t: $TEMPLATE_t_var_213,
      mblock: [$TEMPLATE_mblock_0_var_214, $TEMPLATE_mblock_1_var_215],
      ublock: [$TEMPLATE_ublock_0_var_216, $TEMPLATE_ublock_1_var_217],
      ublock_order: r,
      df: $TEMPLATE_df_var_218,
      target_device: 0,
      loc: $TEMPLATE_loc_var_219,
      $TEMPLATE_loc_var_219: $TEMPLATE_loc_var_704,
    }
  grad_acc_ff.bert.encoder.layer.0.intermediate.dense.weight:
    {
      input: bw_in1_ff_0_ff1_matmul_1,
      type: ram,
      entries: $TEMPLATE_entries_var_221,
      grid_size: [$TEMPLATE_grid_size_0_var_222, $TEMPLATE_grid_size_1_var_223],
      t: $TEMPLATE_t_var_224,
      mblock: [$TEMPLATE_mblock_0_var_225, $TEMPLATE_mblock_1_var_226],
      ublock: [$TEMPLATE_ublock_0_var_227, $TEMPLATE_ublock_1_var_228],
      ublock_order: r,
      df: $TEMPLATE_df_var_229,
      target_device: 0,
      loc: $TEMPLATE_loc_var_230,
      $TEMPLATE_loc_var_230: $TEMPLATE_loc_var_705,
    }

graphs:
  # forward
  fwd_0:
    target_device: 0
    input_count: $TEMPLATE_input_count_var_232
    ff_0_ff1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_233, $TEMPLATE_grid_loc_1_var_234],
        grid_size: [$TEMPLATE_grid_size_0_var_235, $TEMPLATE_grid_size_1_var_236],
        inputs: [encoder_input, ff.bert.encoder.layer.0.intermediate.dense.weight],
        t: $TEMPLATE_t_var_237,
        mblock: [$TEMPLATE_mblock_0_var_238, $TEMPLATE_mblock_1_var_239],
        ublock: [$TEMPLATE_ublock_0_var_240, $TEMPLATE_ublock_1_var_241],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_706, $TEMPLATE_input_buf_min_size_tiles_1_var_707],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_242,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_243, $TEMPLATE_in_df_1_var_244],
        out_df: $TEMPLATE_out_df_var_245,
        intermed_df: $TEMPLATE_intermed_df_var_246,
        acc_df: $TEMPLATE_acc_df_var_247,
        math_fidelity: HiFi3,
        attributes: { m_k: $TEMPLATE_m_k_var_248, u_kt: $TEMPLATE_u_kt_var_249 },
      }
    ff.bert.encoder.layer.0.intermediate.dense.bias_s_brcst_m2_1_0.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_250, $TEMPLATE_grid_loc_1_var_251],
        grid_size: [$TEMPLATE_grid_size_0_var_252, $TEMPLATE_grid_size_1_var_253],
        inputs:
          [
            lc.input_tensor.ff.bert.encoder.layer.0.intermediate.dense.bias_s_brcst_m2_1_0.0,
            ff.bert.encoder.layer.0.intermediate.dense.bias,
          ],
        t: $TEMPLATE_t_var_254,
        mblock: [$TEMPLATE_mblock_0_var_255, $TEMPLATE_mblock_1_var_256],
        ublock: [$TEMPLATE_ublock_0_var_257, $TEMPLATE_ublock_1_var_258],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_708, $TEMPLATE_input_buf_min_size_tiles_1_var_709],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_259,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_260, $TEMPLATE_in_df_1_var_261],
        out_df: $TEMPLATE_out_df_var_262,
        intermed_df: $TEMPLATE_intermed_df_var_263,
        acc_df: $TEMPLATE_acc_df_var_264,
        math_fidelity: HiFi3,
        attributes: { m_k: $TEMPLATE_m_k_var_265, u_kt: $TEMPLATE_u_kt_var_266 },
        input_0_tms: [broadcast: { z: $TEMPLATE_z_var_267 }],
      }
    ff_0_ff1.bias:
      {
        type: add,
        grid_loc: [$TEMPLATE_grid_loc_0_var_268, $TEMPLATE_grid_loc_1_var_269],
        grid_size: [$TEMPLATE_grid_size_0_var_270, $TEMPLATE_grid_size_1_var_271],
        inputs:
          [
            ff_0_ff1,
            ff.bert.encoder.layer.0.intermediate.dense.bias_s_brcst_m2_1_0.lc1,
          ],
        t: $TEMPLATE_t_var_272,
        mblock: [$TEMPLATE_mblock_0_var_273, $TEMPLATE_mblock_1_var_274],
        ublock: [$TEMPLATE_ublock_0_var_275, $TEMPLATE_ublock_1_var_276],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_710, $TEMPLATE_input_buf_min_size_tiles_1_var_711],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_277,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_278, $TEMPLATE_in_df_1_var_279],
        out_df: $TEMPLATE_out_df_var_280,
        intermed_df: $TEMPLATE_intermed_df_var_281,
        acc_df: $TEMPLATE_acc_df_var_282,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { r: $TEMPLATE_r_var_283 }],
      }
    ff0_gelu:
      {
        type: gelu,
        grid_loc: [$TEMPLATE_grid_loc_0_var_284, $TEMPLATE_grid_loc_1_var_285],
        grid_size: [$TEMPLATE_grid_size_0_var_286, $TEMPLATE_grid_size_1_var_287],
        inputs: [ff_0_ff1.bias],
        t: $TEMPLATE_t_var_288,
        mblock: [$TEMPLATE_mblock_0_var_289, $TEMPLATE_mblock_1_var_290],
        ublock: [$TEMPLATE_ublock_0_var_291, $TEMPLATE_ublock_1_var_292],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_712],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_293,
        ublock_order: c,
        in_df: [$TEMPLATE_in_df_0_var_294],
        out_df: $TEMPLATE_out_df_var_295,
        intermed_df: $TEMPLATE_intermed_df_var_296,
        acc_df: $TEMPLATE_acc_df_var_297,
        math_fidelity: HiFi3,
      }
    ff_0_ff2:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_298, $TEMPLATE_grid_loc_1_var_299],
        grid_size: [$TEMPLATE_grid_size_0_var_300, $TEMPLATE_grid_size_1_var_301],
        inputs: [ff0_gelu, ff.bert.encoder.layer.0.output.dense.weight],
        t: $TEMPLATE_t_var_302,
        mblock: [$TEMPLATE_mblock_0_var_303, $TEMPLATE_mblock_1_var_304],
        ublock: [$TEMPLATE_ublock_0_var_305, $TEMPLATE_ublock_1_var_306],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_713, $TEMPLATE_input_buf_min_size_tiles_1_var_714],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_307,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_308, $TEMPLATE_in_df_1_var_309],
        out_df: $TEMPLATE_out_df_var_310,
        intermed_df: $TEMPLATE_intermed_df_var_311,
        acc_df: $TEMPLATE_acc_df_var_312,
        math_fidelity: HiFi3,
        attributes: { m_k: $TEMPLATE_m_k_var_313, u_kt: $TEMPLATE_u_kt_var_314 },
      }
    ff.bert.encoder.layer.0.output.dense.bias_s_brcst_m2_1_0.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_315, $TEMPLATE_grid_loc_1_var_316],
        grid_size: [$TEMPLATE_grid_size_0_var_317, $TEMPLATE_grid_size_1_var_318],
        inputs:
          [
            lc.input_tensor.ff.bert.encoder.layer.0.output.dense.bias_s_brcst_m2_1_0.0,
            ff.bert.encoder.layer.0.output.dense.bias,
          ],
        t: $TEMPLATE_t_var_319,
        mblock: [$TEMPLATE_mblock_0_var_320, $TEMPLATE_mblock_1_var_321],
        ublock: [$TEMPLATE_ublock_0_var_322, $TEMPLATE_ublock_1_var_323],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_715, $TEMPLATE_input_buf_min_size_tiles_1_var_716],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_324,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_325, $TEMPLATE_in_df_1_var_326],
        out_df: $TEMPLATE_out_df_var_327,
        intermed_df: $TEMPLATE_intermed_df_var_328,
        acc_df: $TEMPLATE_acc_df_var_329,
        math_fidelity: HiFi3,
        attributes: { m_k: $TEMPLATE_m_k_var_330, u_kt: $TEMPLATE_u_kt_var_331 },
        input_0_tms: [broadcast: { z: $TEMPLATE_z_var_332 }],
      }
    ff_0_ff2.bias:
      {
        type: add,
        grid_loc: [$TEMPLATE_grid_loc_0_var_333, $TEMPLATE_grid_loc_1_var_334],
        grid_size: [$TEMPLATE_grid_size_0_var_335, $TEMPLATE_grid_size_1_var_336],
        inputs:
          [
            ff_0_ff2,
            ff.bert.encoder.layer.0.output.dense.bias_s_brcst_m2_1_0.lc1,
          ],
        untilize_output: $TEMPLATE_untilize_output_var_337,
        t: $TEMPLATE_t_var_338,
        mblock: [$TEMPLATE_mblock_0_var_339, $TEMPLATE_mblock_1_var_340],
        ublock: [$TEMPLATE_ublock_0_var_341, $TEMPLATE_ublock_1_var_342],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_717, $TEMPLATE_input_buf_min_size_tiles_1_var_718],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_343,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_344, $TEMPLATE_in_df_1_var_345],
        out_df: $TEMPLATE_out_df_var_346,
        intermed_df: $TEMPLATE_intermed_df_var_347,
        acc_df: $TEMPLATE_acc_df_var_348,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { r: $TEMPLATE_r_var_349 }],
      }
  # backward
  bwd_1:
    target_device: 0
    input_count: $TEMPLATE_input_count_var_350
    bw_in1_ff_0_ff2.bias_reduce_sum_0.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_351, $TEMPLATE_grid_loc_1_var_352],
        grid_size: [$TEMPLATE_grid_size_0_var_353, $TEMPLATE_grid_size_1_var_354],
        inputs:
          [
            lc.input_tensor.bw_in1_ff_0_ff2.bias_reduce_sum_0.0,
            loss_ff.output_ff_0_ff2.bias,
          ],
        t: $TEMPLATE_t_var_355,
        mblock: [$TEMPLATE_mblock_0_var_356, $TEMPLATE_mblock_1_var_357],
        ublock: [$TEMPLATE_ublock_0_var_358, $TEMPLATE_ublock_1_var_359],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_719, $TEMPLATE_input_buf_min_size_tiles_1_var_720],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_360,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_361, $TEMPLATE_in_df_1_var_362],
        out_df: $TEMPLATE_out_df_var_363,
        intermed_df: $TEMPLATE_intermed_df_var_364,
        acc_df: $TEMPLATE_acc_df_var_365,
        math_fidelity: HiFi3,
        input_0_tms: [broadcast: { c: $TEMPLATE_c_var_366 }, broadcast: { z: $TEMPLATE_z_var_367 }],
        attributes: { m_k: $TEMPLATE_m_k_var_368, u_kt: $TEMPLATE_u_kt_var_369 },
      }
    bw_in1_ff_0_ff2.bias_brcst_reduce_sum_0:
      {
        type: nop,
        grid_loc: [$TEMPLATE_grid_loc_0_var_370, $TEMPLATE_grid_loc_1_var_371],
        grid_size: [$TEMPLATE_grid_size_0_var_372, $TEMPLATE_grid_size_1_var_373],
        inputs: [bw_in1_ff_0_ff2.bias_reduce_sum_0.lc1],
        gradient_op: true,
        t: $TEMPLATE_t_var_374,
        mblock: [$TEMPLATE_mblock_0_var_375, $TEMPLATE_mblock_1_var_376],
        ublock: [$TEMPLATE_ublock_0_var_377, $TEMPLATE_ublock_1_var_378],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_721],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_379,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_380],
        out_df: $TEMPLATE_out_df_var_381,
        intermed_df: $TEMPLATE_intermed_df_var_382,
        acc_df: $TEMPLATE_acc_df_var_383,
        math_fidelity: HiFi3,
      }
    bw_in0_ff_0_ff2_matmul_1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_384, $TEMPLATE_grid_loc_1_var_385],
        grid_size: [$TEMPLATE_grid_size_0_var_386, $TEMPLATE_grid_size_1_var_387],
        inputs:
          [
            loss_ff.output_ff_0_ff2.bias,
            ff.bert.encoder.layer.0.output.dense.weight,
          ],
        t: $TEMPLATE_t_var_388,
        mblock: [$TEMPLATE_mblock_0_var_389, $TEMPLATE_mblock_1_var_390],
        ublock: [$TEMPLATE_ublock_0_var_391, $TEMPLATE_ublock_1_var_392],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_722, $TEMPLATE_input_buf_min_size_tiles_1_var_723],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_393,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_394, $TEMPLATE_in_df_1_var_395],
        out_df: $TEMPLATE_out_df_var_396,
        intermed_df: $TEMPLATE_intermed_df_var_397,
        acc_df: $TEMPLATE_acc_df_var_398,
        math_fidelity: HiFi3,
        input_1_tms: [transpose],
        attributes: { m_k: $TEMPLATE_m_k_var_399, u_kt: $TEMPLATE_u_kt_var_400 },
      }
    bw_in1_ff_0_ff2_matmul_1_transpose_nop_0:
      {
        type: nop,
        grid_loc: [$TEMPLATE_grid_loc_0_var_401, $TEMPLATE_grid_loc_1_var_402],
        grid_size: [$TEMPLATE_grid_size_0_var_403, $TEMPLATE_grid_size_1_var_404],
        inputs: [e2e_ff0_gelu_0],
        t: $TEMPLATE_t_var_405,
        mblock: [$TEMPLATE_mblock_0_var_406, $TEMPLATE_mblock_1_var_407],
        ublock: [$TEMPLATE_ublock_0_var_408, $TEMPLATE_ublock_1_var_409],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_724],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_410,
        ublock_order: c,
        in_df: [$TEMPLATE_in_df_0_var_411],
        out_df: $TEMPLATE_out_df_var_412,
        intermed_df: $TEMPLATE_intermed_df_var_413,
        acc_df: $TEMPLATE_acc_df_var_414,
        math_fidelity: HiFi3,
        input_0_tms: [transpose],
      }
    bw_in1_ff_0_ff2_matmul_1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_415, $TEMPLATE_grid_loc_1_var_416],
        grid_size: [$TEMPLATE_grid_size_0_var_417, $TEMPLATE_grid_size_1_var_418],
        inputs:
          [
            bw_in1_ff_0_ff2_matmul_1_transpose_nop_0,
            loss_ff.output_ff_0_ff2.bias,
          ],
        gradient_op: true,
        t: $TEMPLATE_t_var_419,
        mblock: [$TEMPLATE_mblock_0_var_420, $TEMPLATE_mblock_1_var_421],
        ublock: [$TEMPLATE_ublock_0_var_422, $TEMPLATE_ublock_1_var_423],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_725, $TEMPLATE_input_buf_min_size_tiles_1_var_726],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_424,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_425, $TEMPLATE_in_df_1_var_426],
        out_df: $TEMPLATE_out_df_var_427,
        intermed_df: $TEMPLATE_intermed_df_var_428,
        acc_df: $TEMPLATE_acc_df_var_429,
        math_fidelity: HiFi3,
        attributes: { m_k: $TEMPLATE_m_k_var_430, u_kt: $TEMPLATE_u_kt_var_431 },
      }
    bw_in0_ff0_gelu_gelu_derivative_0:
      {
        type: gelu_derivative,
        grid_loc: [$TEMPLATE_grid_loc_0_var_432, $TEMPLATE_grid_loc_1_var_433],
        grid_size: [$TEMPLATE_grid_size_0_var_434, $TEMPLATE_grid_size_1_var_435],
        inputs: [e2e_ff_0_ff1.bias_0],
        t: $TEMPLATE_t_var_436,
        mblock: [$TEMPLATE_mblock_0_var_437, $TEMPLATE_mblock_1_var_438],
        ublock: [$TEMPLATE_ublock_0_var_439, $TEMPLATE_ublock_1_var_440],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_727],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_441,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_442],
        out_df: $TEMPLATE_out_df_var_443,
        intermed_df: $TEMPLATE_intermed_df_var_444,
        acc_df: $TEMPLATE_acc_df_var_445,
        math_fidelity: HiFi3,
      }
    bw_in0_ff0_gelu_multiply_1:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_446, $TEMPLATE_grid_loc_1_var_447],
        grid_size: [$TEMPLATE_grid_size_0_var_448, $TEMPLATE_grid_size_1_var_449],
        inputs: [bw_in0_ff0_gelu_gelu_derivative_0, bw_in0_ff_0_ff2_matmul_1],
        t: $TEMPLATE_t_var_450,
        mblock: [$TEMPLATE_mblock_0_var_451, $TEMPLATE_mblock_1_var_452],
        ublock: [$TEMPLATE_ublock_0_var_453, $TEMPLATE_ublock_1_var_454],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_728, $TEMPLATE_input_buf_min_size_tiles_1_var_729],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_455,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_456, $TEMPLATE_in_df_1_var_457],
        out_df: $TEMPLATE_out_df_var_458,
        intermed_df: $TEMPLATE_intermed_df_var_459,
        acc_df: $TEMPLATE_acc_df_var_460,
        math_fidelity: HiFi3,
      }
    bw_in1_ff_0_ff1.bias_reduce_sum_0.lc1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_461, $TEMPLATE_grid_loc_1_var_462],
        grid_size: [$TEMPLATE_grid_size_0_var_463, $TEMPLATE_grid_size_1_var_464],
        inputs:
          [
            lc.input_tensor.bw_in1_ff_0_ff1.bias_reduce_sum_0.0,
            bw_in0_ff0_gelu_multiply_1,
          ],
        t: $TEMPLATE_t_var_465,
        mblock: [$TEMPLATE_mblock_0_var_466, $TEMPLATE_mblock_1_var_467],
        ublock: [$TEMPLATE_ublock_0_var_468, $TEMPLATE_ublock_1_var_469],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_730, $TEMPLATE_input_buf_min_size_tiles_1_var_731],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_470,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_471, $TEMPLATE_in_df_1_var_472],
        out_df: $TEMPLATE_out_df_var_473,
        intermed_df: $TEMPLATE_intermed_df_var_474,
        acc_df: $TEMPLATE_acc_df_var_475,
        math_fidelity: HiFi3,
        input_0_tms: [broadcast: { c: $TEMPLATE_c_var_476 }, broadcast: { z: $TEMPLATE_z_var_477 }],
        attributes: { m_k: $TEMPLATE_m_k_var_478, u_kt: $TEMPLATE_u_kt_var_479 },
      }
    bw_in1_ff_0_ff1.bias_brcst_reduce_sum_0:
      {
        type: nop,
        grid_loc: [$TEMPLATE_grid_loc_0_var_480, $TEMPLATE_grid_loc_1_var_481],
        grid_size: [$TEMPLATE_grid_size_0_var_482, $TEMPLATE_grid_size_1_var_483],
        inputs: [bw_in1_ff_0_ff1.bias_reduce_sum_0.lc1],
        gradient_op: true,
        t: $TEMPLATE_t_var_484,
        mblock: [$TEMPLATE_mblock_0_var_485, $TEMPLATE_mblock_1_var_486],
        ublock: [$TEMPLATE_ublock_0_var_487, $TEMPLATE_ublock_1_var_488],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_732],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_489,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_490],
        out_df: $TEMPLATE_out_df_var_491,
        intermed_df: $TEMPLATE_intermed_df_var_492,
        acc_df: $TEMPLATE_acc_df_var_493,
        math_fidelity: HiFi3,
      }
    bw_in1_ff_0_ff1_matmul_1_transpose_nop_0:
      {
        type: nop,
        grid_loc: [$TEMPLATE_grid_loc_0_var_494, $TEMPLATE_grid_loc_1_var_495],
        grid_size: [$TEMPLATE_grid_size_0_var_496, $TEMPLATE_grid_size_1_var_497],
        inputs: [encoder_input],
        t: $TEMPLATE_t_var_498,
        mblock: [$TEMPLATE_mblock_0_var_499, $TEMPLATE_mblock_1_var_500],
        ublock: [$TEMPLATE_ublock_0_var_501, $TEMPLATE_ublock_1_var_502],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_733],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_503,
        ublock_order: c,
        in_df: [$TEMPLATE_in_df_0_var_504],
        out_df: $TEMPLATE_out_df_var_505,
        intermed_df: $TEMPLATE_intermed_df_var_506,
        acc_df: $TEMPLATE_acc_df_var_507,
        math_fidelity: HiFi3,
        input_0_tms: [transpose],
      }
    bw_in1_ff_0_ff1_matmul_1:
      {
        type: matmul,
        grid_loc: [$TEMPLATE_grid_loc_0_var_508, $TEMPLATE_grid_loc_1_var_509],
        grid_size: [$TEMPLATE_grid_size_0_var_510, $TEMPLATE_grid_size_1_var_511],
        inputs:
          [
            bw_in1_ff_0_ff1_matmul_1_transpose_nop_0,
            bw_in0_ff0_gelu_multiply_1,
          ],
        gradient_op: true,
        t: $TEMPLATE_t_var_512,
        mblock: [$TEMPLATE_mblock_0_var_513, $TEMPLATE_mblock_1_var_514],
        ublock: [$TEMPLATE_ublock_0_var_515, $TEMPLATE_ublock_1_var_516],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_734, $TEMPLATE_input_buf_min_size_tiles_1_var_735],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_517,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_518, $TEMPLATE_in_df_1_var_519],
        out_df: $TEMPLATE_out_df_var_520,
        intermed_df: $TEMPLATE_intermed_df_var_521,
        acc_df: $TEMPLATE_acc_df_var_522,
        math_fidelity: HiFi3,
        attributes: { m_k: $TEMPLATE_m_k_var_523, u_kt: $TEMPLATE_u_kt_var_524 },
      }
  # optimizer
  opt_2:
    target_device: 0
    input_count: $TEMPLATE_input_count_var_525
    opt_in1_ff.bert.encoder.layer.0.intermediate.dense.weight_multiply_1:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_526, $TEMPLATE_grid_loc_1_var_527],
        grid_size: [$TEMPLATE_grid_size_0_var_528, $TEMPLATE_grid_size_1_var_529],
        inputs:
          [
            grad_acc_ff.bert.encoder.layer.0.intermediate.dense.weight,
            input_opt_ff.bert.encoder.layer.0.intermediate.dense.weight_0.lr,
          ],
        t: $TEMPLATE_t_var_530,
        mblock: [$TEMPLATE_mblock_0_var_531, $TEMPLATE_mblock_1_var_532],
        ublock: [$TEMPLATE_ublock_0_var_533, $TEMPLATE_ublock_1_var_534],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_736, $TEMPLATE_input_buf_min_size_tiles_1_var_737],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_535,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_536, $TEMPLATE_in_df_1_var_537],
        out_df: $TEMPLATE_out_df_var_538,
        intermed_df: $TEMPLATE_intermed_df_var_539,
        acc_df: $TEMPLATE_acc_df_var_540,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { c: $TEMPLATE_c_var_541 }, broadcast: { r: $TEMPLATE_r_var_542 }],
      }
    opt_in1_ff.bert.encoder.layer.0.intermediate.dense.weight_subtract_2:
      {
        type: subtract,
        grid_loc: [$TEMPLATE_grid_loc_0_var_543, $TEMPLATE_grid_loc_1_var_544],
        grid_size: [$TEMPLATE_grid_size_0_var_545, $TEMPLATE_grid_size_1_var_546],
        inputs:
          [
            ff.bert.encoder.layer.0.intermediate.dense.weight,
            opt_in1_ff.bert.encoder.layer.0.intermediate.dense.weight_multiply_1,
          ],
        t: $TEMPLATE_t_var_547,
        mblock: [$TEMPLATE_mblock_0_var_548, $TEMPLATE_mblock_1_var_549],
        ublock: [$TEMPLATE_ublock_0_var_550, $TEMPLATE_ublock_1_var_551],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_738, $TEMPLATE_input_buf_min_size_tiles_1_var_739],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_552,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_553, $TEMPLATE_in_df_1_var_554],
        out_df: $TEMPLATE_out_df_var_555,
        intermed_df: $TEMPLATE_intermed_df_var_556,
        acc_df: $TEMPLATE_acc_df_var_557,
        math_fidelity: HiFi3,
      }
    opt_in1_ff.bert.encoder.layer.0.intermediate.dense.bias_multiply_1:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_558, $TEMPLATE_grid_loc_1_var_559],
        grid_size: [$TEMPLATE_grid_size_0_var_560, $TEMPLATE_grid_size_1_var_561],
        inputs:
          [
            grad_acc_ff.bert.encoder.layer.0.intermediate.dense.bias,
            input_opt_ff.bert.encoder.layer.0.intermediate.dense.bias_0.lr,
          ],
        t: $TEMPLATE_t_var_562,
        mblock: [$TEMPLATE_mblock_0_var_563, $TEMPLATE_mblock_1_var_564],
        ublock: [$TEMPLATE_ublock_0_var_565, $TEMPLATE_ublock_1_var_566],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_740, $TEMPLATE_input_buf_min_size_tiles_1_var_741],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_567,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_568, $TEMPLATE_in_df_1_var_569],
        out_df: $TEMPLATE_out_df_var_570,
        intermed_df: $TEMPLATE_intermed_df_var_571,
        acc_df: $TEMPLATE_acc_df_var_572,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { c: $TEMPLATE_c_var_573 }],
      }
    opt_in1_ff.bert.encoder.layer.0.intermediate.dense.bias_subtract_2:
      {
        type: subtract,
        grid_loc: [$TEMPLATE_grid_loc_0_var_574, $TEMPLATE_grid_loc_1_var_575],
        grid_size: [$TEMPLATE_grid_size_0_var_576, $TEMPLATE_grid_size_1_var_577],
        inputs:
          [
            ff.bert.encoder.layer.0.intermediate.dense.bias,
            opt_in1_ff.bert.encoder.layer.0.intermediate.dense.bias_multiply_1,
          ],
        t: $TEMPLATE_t_var_578,
        mblock: [$TEMPLATE_mblock_0_var_579, $TEMPLATE_mblock_1_var_580],
        ublock: [$TEMPLATE_ublock_0_var_581, $TEMPLATE_ublock_1_var_582],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_742, $TEMPLATE_input_buf_min_size_tiles_1_var_743],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_583,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_584, $TEMPLATE_in_df_1_var_585],
        out_df: $TEMPLATE_out_df_var_586,
        intermed_df: $TEMPLATE_intermed_df_var_587,
        acc_df: $TEMPLATE_acc_df_var_588,
        math_fidelity: HiFi3,
      }
    opt_in0_ff.bert.encoder.layer.0.output.dense.weight_multiply_1:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_589, $TEMPLATE_grid_loc_1_var_590],
        grid_size: [$TEMPLATE_grid_size_0_var_591, $TEMPLATE_grid_size_1_var_592],
        inputs:
          [
            grad_acc_ff.bert.encoder.layer.0.output.dense.weight,
            input_opt_ff.bert.encoder.layer.0.output.dense.weight_0.lr,
          ],
        t: $TEMPLATE_t_var_593,
        mblock: [$TEMPLATE_mblock_0_var_594, $TEMPLATE_mblock_1_var_595],
        ublock: [$TEMPLATE_ublock_0_var_596, $TEMPLATE_ublock_1_var_597],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_744, $TEMPLATE_input_buf_min_size_tiles_1_var_745],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_598,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_599, $TEMPLATE_in_df_1_var_600],
        out_df: $TEMPLATE_out_df_var_601,
        intermed_df: $TEMPLATE_intermed_df_var_602,
        acc_df: $TEMPLATE_acc_df_var_603,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { c: $TEMPLATE_c_var_604 }, broadcast: { r: $TEMPLATE_r_var_605 }],
      }
    opt_in0_ff.bert.encoder.layer.0.output.dense.weight_subtract_2:
      {
        type: subtract,
        grid_loc: [$TEMPLATE_grid_loc_0_var_606, $TEMPLATE_grid_loc_1_var_607],
        grid_size: [$TEMPLATE_grid_size_0_var_608, $TEMPLATE_grid_size_1_var_609],
        inputs:
          [
            ff.bert.encoder.layer.0.output.dense.weight,
            opt_in0_ff.bert.encoder.layer.0.output.dense.weight_multiply_1,
          ],
        t: $TEMPLATE_t_var_610,
        mblock: [$TEMPLATE_mblock_0_var_611, $TEMPLATE_mblock_1_var_612],
        ublock: [$TEMPLATE_ublock_0_var_613, $TEMPLATE_ublock_1_var_614],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_746, $TEMPLATE_input_buf_min_size_tiles_1_var_747],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_615,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_616, $TEMPLATE_in_df_1_var_617],
        out_df: $TEMPLATE_out_df_var_618,
        intermed_df: $TEMPLATE_intermed_df_var_619,
        acc_df: $TEMPLATE_acc_df_var_620,
        math_fidelity: HiFi3,
      }
    opt_in1_ff.bert.encoder.layer.0.output.dense.bias_multiply_1:
      {
        type: multiply,
        grid_loc: [$TEMPLATE_grid_loc_0_var_621, $TEMPLATE_grid_loc_1_var_622],
        grid_size: [$TEMPLATE_grid_size_0_var_623, $TEMPLATE_grid_size_1_var_624],
        inputs:
          [
            grad_acc_ff.bert.encoder.layer.0.output.dense.bias,
            input_opt_ff.bert.encoder.layer.0.output.dense.bias_0.lr,
          ],
        t: $TEMPLATE_t_var_625,
        mblock: [$TEMPLATE_mblock_0_var_626, $TEMPLATE_mblock_1_var_627],
        ublock: [$TEMPLATE_ublock_0_var_628, $TEMPLATE_ublock_1_var_629],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_748, $TEMPLATE_input_buf_min_size_tiles_1_var_749],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_630,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_631, $TEMPLATE_in_df_1_var_632],
        out_df: $TEMPLATE_out_df_var_633,
        intermed_df: $TEMPLATE_intermed_df_var_634,
        acc_df: $TEMPLATE_acc_df_var_635,
        math_fidelity: HiFi3,
        input_1_tms: [broadcast: { c: $TEMPLATE_c_var_636 }],
      }
    opt_in1_ff.bert.encoder.layer.0.output.dense.bias_subtract_2:
      {
        type: subtract,
        grid_loc: [$TEMPLATE_grid_loc_0_var_637, $TEMPLATE_grid_loc_1_var_638],
        grid_size: [$TEMPLATE_grid_size_0_var_639, $TEMPLATE_grid_size_1_var_640],
        inputs:
          [
            ff.bert.encoder.layer.0.output.dense.bias,
            opt_in1_ff.bert.encoder.layer.0.output.dense.bias_multiply_1,
          ],
        t: $TEMPLATE_t_var_641,
        mblock: [$TEMPLATE_mblock_0_var_642, $TEMPLATE_mblock_1_var_643],
        ublock: [$TEMPLATE_ublock_0_var_644, $TEMPLATE_ublock_1_var_645],
        input_buf_min_size_tiles: [$TEMPLATE_input_buf_min_size_tiles_0_var_750, $TEMPLATE_input_buf_min_size_tiles_1_var_751],
        buf_size_mb: $TEMPLATE_buf_size_mb_var_646,
        ublock_order: r,
        in_df: [$TEMPLATE_in_df_0_var_647, $TEMPLATE_in_df_1_var_648],
        out_df: $TEMPLATE_out_df_var_649,
        intermed_df: $TEMPLATE_intermed_df_var_650,
        acc_df: $TEMPLATE_acc_df_var_651,
        math_fidelity: HiFi3,
      }

programs:
  # forward
  - run_fwd:
      - param: [$p_microbatch_count, $p_microbatch_size]
      - staticvar: { $gptr_q0: 0, $lptr_q0: 0, $gptr_q0_shadow: 0 }
      - varinst: [$gptr_q0, set, $gptr_q0_shadow]
      - var: { $c_zero: 0, $c_wrap: 2 }
      - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]
      - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count]
      - loop: $p_microbatch_count
      - execute:
          {
            graph_name: fwd_0,
            queue_settings:
              {
                encoder_input:
                  {
                    prologue: $TEMPLATE_prologue_var_652,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $lptr_q0,
                    rd_ptr_global: $gptr_q0,
                  },
                ff.bert.encoder.layer.0.intermediate.dense.weight:
                  {
                    prologue: $TEMPLATE_prologue_var_653,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                lc.input_tensor.ff.bert.encoder.layer.0.intermediate.dense.bias_s_brcst_m2_1_0.0:
                  {
                    prologue: $TEMPLATE_prologue_var_654,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                ff.bert.encoder.layer.0.intermediate.dense.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_655,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                ff.bert.encoder.layer.0.output.dense.weight:
                  {
                    prologue: $TEMPLATE_prologue_var_656,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                lc.input_tensor.ff.bert.encoder.layer.0.output.dense.bias_s_brcst_m2_1_0.0:
                  {
                    prologue: $TEMPLATE_prologue_var_657,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                ff.bert.encoder.layer.0.output.dense.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_658,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
              },
          }
      - varinst: [$gptr_q0_shadow, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$lptr_q0, incwrap, $p_microbatch_size, $c_wrap]
      - endloop
  # backward
  - run_bwd:
      - param: [$p_zero_grad, $p_microbatch_count, $p_microbatch_size]
      - staticvar: { $lptr_q0: 0, $gptr_q0: 0, $gptr_q2: 0, $lptr_q2: 0, $gptr_q1: 0, $lptr_q1: 0 }
      - var: { $c_zero: 0, $c_wrap: 2 }
      - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]
      - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count]
      - varinst: [$v_zero_grad, set, $p_zero_grad]
      - loop: $p_microbatch_count
      - execute:
          {
            graph_name: bwd_1,
            queue_settings:
              {
                encoder_input:
                  {
                    prologue: $TEMPLATE_prologue_var_659,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $lptr_q0,
                    rd_ptr_global: $gptr_q0,
                  },
                loss_ff.output_ff_0_ff2.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_660,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $lptr_q1,
                    rd_ptr_global: $gptr_q1,
                  },
                e2e_ff_0_ff1.bias_0:
                  {
                    prologue: $TEMPLATE_prologue_var_661,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $lptr_q2,
                    rd_ptr_global: $gptr_q2,
                  },
                e2e_ff0_gelu_0:
                  {
                    prologue: $TEMPLATE_prologue_var_662,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $lptr_q2,
                    rd_ptr_global: $gptr_q2,
                  },
                ff.bert.encoder.layer.0.output.dense.weight:
                  {
                    prologue: $TEMPLATE_prologue_var_663,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                lc.input_tensor.bw_in1_ff_0_ff2.bias_reduce_sum_0.0:
                  {
                    prologue: $TEMPLATE_prologue_var_664,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                lc.input_tensor.bw_in1_ff_0_ff1.bias_reduce_sum_0.0:
                  {
                    prologue: $TEMPLATE_prologue_var_665,
                    epilogue: false,
                    zero: false,
                    rd_ptr_local: $c_zero,
                    rd_ptr_global: $c_zero,
                  },
                grad_acc_ff.bert.encoder.layer.0.output.dense.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_666,
                    epilogue: true,
                    zero: $v_zero_grad,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_ff.bert.encoder.layer.0.output.dense.weight:
                  {
                    prologue: $TEMPLATE_prologue_var_667,
                    epilogue: true,
                    zero: $v_zero_grad,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_ff.bert.encoder.layer.0.intermediate.dense.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_668,
                    epilogue: true,
                    zero: $v_zero_grad,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_ff.bert.encoder.layer.0.intermediate.dense.weight:
                  {
                    prologue: $TEMPLATE_prologue_var_669,
                    epilogue: true,
                    zero: $v_zero_grad,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
              },
          }
      - varinst: [$gptr_q0, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$gptr_q1, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$gptr_q2, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$lptr_q0, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$lptr_q1, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$lptr_q2, incwrap, $p_microbatch_size, $c_wrap]
      - varinst: [$v_zero_grad, set, 0]
      - endloop
  # optimizer
  - run_opt:
      - var: { $c_microbatch_size: 1, $c_one: 1, $c_zero: 0 }
      - execute:
          {
            graph_name: opt_2,
            queue_settings:
              {
                ff.bert.encoder.layer.0.intermediate.dense.weight:
                  {
                    prologue: $TEMPLATE_prologue_var_670,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                ff.bert.encoder.layer.0.intermediate.dense.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_671,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                ff.bert.encoder.layer.0.output.dense.weight:
                  {
                    prologue: $TEMPLATE_prologue_var_672,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                ff.bert.encoder.layer.0.output.dense.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_673,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_ff.bert.encoder.layer.0.output.dense.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_674,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_ff.bert.encoder.layer.0.output.dense.weight:
                  {
                    prologue: $TEMPLATE_prologue_var_675,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_ff.bert.encoder.layer.0.intermediate.dense.bias:
                  {
                    prologue: $TEMPLATE_prologue_var_676,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                grad_acc_ff.bert.encoder.layer.0.intermediate.dense.weight:
                  {
                    prologue: $TEMPLATE_prologue_var_677,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                input_opt_ff.bert.encoder.layer.0.intermediate.dense.weight_0.lr:
                  {
                    prologue: $TEMPLATE_prologue_var_678,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                input_opt_ff.bert.encoder.layer.0.intermediate.dense.bias_0.lr:
                  {
                    prologue: $TEMPLATE_prologue_var_679,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                input_opt_ff.bert.encoder.layer.0.output.dense.weight_0.lr:
                  {
                    prologue: $TEMPLATE_prologue_var_680,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
                input_opt_ff.bert.encoder.layer.0.output.dense.bias_0.lr:
                  {
                    prologue: $TEMPLATE_prologue_var_681,
                    epilogue: false,
                    zero: false,
                    rd_ptr_global: $c_zero,
                    wr_ptr_global: $c_zero,
                  },
              },
          }

test-config:
  test-args:
    minibatch_count: $TEMPLATE_minibatch_count_var_682
    microbatch_size: $TEMPLATE_microbatch_size_var_683
    microbatch_count: $TEMPLATE_microbatch_count_var_684
  comparison-config:
    type: AllCloseHw
    atol: 0.1
    rtol: 1.0
    check_pct: 0.85
    check_pcc: 0.90
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -1.0
    uniform_upper_bound: 1.0
    overrides:
      .*\.weight:
        type: Normal
        normal_mean: 0.0
        normal_stddev: 0.1
      .*\.bias:
        type: Constant
        constant_value: 1.0
        set_tile_rows: [1, 1]
      .*\.bias_s_brcst.*:
        type: Constant
        constant_value: 1.0
        set_tile_cols: [1, 1]
      .*bias_reduce_sum_0.0:
        type: Constant
        constant_value: 1.0
      loss_ff.output_ff_0_ff2.bias:
        type: Uniform
        uniform_lower_bound: -0.1
        uniform_upper_bound: 0.1
      input_opt_ff.bert.encoder.layer.*\.lr:
        type: Constant
        constant_value: 0.1
