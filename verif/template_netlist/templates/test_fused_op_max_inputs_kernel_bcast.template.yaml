# test_config_id=$TEMPLATE_test_config_id
devices:
  arch: $TEMPLATE_arch_name

queues:
  input0_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input0_dram_entries
    grid_size: [$TEMPLATE_input0_dram_grid_size_r, $TEMPLATE_input0_dram_grid_size_c]
    t: $TEMPLATE_input0_dram_t
    mblock: [$TEMPLATE_input0_dram_mb_r, $TEMPLATE_input0_dram_mb_c]
    ublock: [$TEMPLATE_input0_dram_ub_r, $TEMPLATE_input0_dram_ub_c]
    df: $TEMPLATE_input0_dram_df
    ublock_order: $TEMPLATE_input0_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input0_dram_loc
    $TEMPLATE_input0_dram_loc: $TEMPLATE_input0_dram_buffers

  input1_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input1_dram_entries
    grid_size: [$TEMPLATE_input1_dram_grid_size_r, $TEMPLATE_input1_dram_grid_size_c]
    t: $TEMPLATE_input1_dram_t
    mblock: [$TEMPLATE_input1_dram_mb_r, $TEMPLATE_input1_dram_mb_c]
    ublock: [$TEMPLATE_input1_dram_ub_r, $TEMPLATE_input1_dram_ub_c]
    df: $TEMPLATE_input1_dram_df
    ublock_order: $TEMPLATE_input1_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input1_dram_loc
    $TEMPLATE_input1_dram_loc: $TEMPLATE_input1_dram_buffers

  input2_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input2_dram_entries
    grid_size: [$TEMPLATE_input2_dram_grid_size_r, $TEMPLATE_input2_dram_grid_size_c]
    t: $TEMPLATE_input2_dram_t
    mblock: [$TEMPLATE_input2_dram_mb_r, $TEMPLATE_input2_dram_mb_c]
    ublock: [$TEMPLATE_input2_dram_ub_r, $TEMPLATE_input2_dram_ub_c]
    df: $TEMPLATE_input2_dram_df
    ublock_order: $TEMPLATE_input2_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input2_dram_loc
    $TEMPLATE_input2_dram_loc: $TEMPLATE_input2_dram_buffers

  input3_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input3_dram_entries
    grid_size: [$TEMPLATE_input3_dram_grid_size_r, $TEMPLATE_input3_dram_grid_size_c]
    t: $TEMPLATE_input3_dram_t
    mblock: [$TEMPLATE_input3_dram_mb_r, $TEMPLATE_input3_dram_mb_c]
    ublock: [$TEMPLATE_input3_dram_ub_r, $TEMPLATE_input3_dram_ub_c]
    df: $TEMPLATE_input3_dram_df
    ublock_order: $TEMPLATE_input3_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input3_dram_loc
    $TEMPLATE_input3_dram_loc: $TEMPLATE_input3_dram_buffers

  input4_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input4_dram_entries
    grid_size: [$TEMPLATE_input4_dram_grid_size_r, $TEMPLATE_input4_dram_grid_size_c]
    t: $TEMPLATE_input4_dram_t
    mblock: [$TEMPLATE_input4_dram_mb_r, $TEMPLATE_input4_dram_mb_c]
    ublock: [$TEMPLATE_input4_dram_ub_r, $TEMPLATE_input4_dram_ub_c]
    df: $TEMPLATE_input4_dram_df
    ublock_order: $TEMPLATE_input4_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input4_dram_loc
    $TEMPLATE_input4_dram_loc: $TEMPLATE_input4_dram_buffers

  input5_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input5_dram_entries
    grid_size: [$TEMPLATE_input5_dram_grid_size_r, $TEMPLATE_input5_dram_grid_size_c]
    t: $TEMPLATE_input5_dram_t
    mblock: [$TEMPLATE_input5_dram_mb_r, $TEMPLATE_input5_dram_mb_c]
    ublock: [$TEMPLATE_input5_dram_ub_r, $TEMPLATE_input5_dram_ub_c]
    df: $TEMPLATE_input5_dram_df
    ublock_order: $TEMPLATE_input5_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input5_dram_loc
    $TEMPLATE_input5_dram_loc: $TEMPLATE_input5_dram_buffers

  input6_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input6_dram_entries
    grid_size: [$TEMPLATE_input6_dram_grid_size_r, $TEMPLATE_input6_dram_grid_size_c]
    t: $TEMPLATE_input6_dram_t
    mblock: [$TEMPLATE_input6_dram_mb_r, $TEMPLATE_input6_dram_mb_c]
    ublock: [$TEMPLATE_input6_dram_ub_r, $TEMPLATE_input6_dram_ub_c]
    df: $TEMPLATE_input6_dram_df
    ublock_order: $TEMPLATE_input6_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input6_dram_loc
    $TEMPLATE_input6_dram_loc: $TEMPLATE_input6_dram_buffers

  input7_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input7_dram_entries
    grid_size: [$TEMPLATE_input7_dram_grid_size_r, $TEMPLATE_input7_dram_grid_size_c]
    t: $TEMPLATE_input7_dram_t
    mblock: [$TEMPLATE_input7_dram_mb_r, $TEMPLATE_input7_dram_mb_c]
    ublock: [$TEMPLATE_input7_dram_ub_r, $TEMPLATE_input7_dram_ub_c]
    df: $TEMPLATE_input7_dram_df
    ublock_order: $TEMPLATE_input7_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input7_dram_loc
    $TEMPLATE_input7_dram_loc: $TEMPLATE_input7_dram_buffers

  input8_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input8_dram_entries
    grid_size: [$TEMPLATE_input8_dram_grid_size_r, $TEMPLATE_input8_dram_grid_size_c]
    t: $TEMPLATE_input8_dram_t
    mblock: [$TEMPLATE_input8_dram_mb_r, $TEMPLATE_input8_dram_mb_c]
    ublock: [$TEMPLATE_input8_dram_ub_r, $TEMPLATE_input8_dram_ub_c]
    df: $TEMPLATE_input8_dram_df
    ublock_order: $TEMPLATE_input8_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input8_dram_loc
    $TEMPLATE_input8_dram_loc: $TEMPLATE_input8_dram_buffers

  input9_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input9_dram_entries
    grid_size: [$TEMPLATE_input9_dram_grid_size_r, $TEMPLATE_input9_dram_grid_size_c]
    t: $TEMPLATE_input9_dram_t
    mblock: [$TEMPLATE_input9_dram_mb_r, $TEMPLATE_input9_dram_mb_c]
    ublock: [$TEMPLATE_input9_dram_ub_r, $TEMPLATE_input9_dram_ub_c]
    df: $TEMPLATE_input9_dram_df
    ublock_order: $TEMPLATE_input9_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input9_dram_loc
    $TEMPLATE_input9_dram_loc: $TEMPLATE_input9_dram_buffers

  input10_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input10_dram_entries
    grid_size: [$TEMPLATE_input10_dram_grid_size_r, $TEMPLATE_input10_dram_grid_size_c]
    t: $TEMPLATE_input10_dram_t
    mblock: [$TEMPLATE_input10_dram_mb_r, $TEMPLATE_input10_dram_mb_c]
    ublock: [$TEMPLATE_input10_dram_ub_r, $TEMPLATE_input10_dram_ub_c]
    df: $TEMPLATE_input10_dram_df
    ublock_order: $TEMPLATE_input10_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input10_dram_loc
    $TEMPLATE_input10_dram_loc: $TEMPLATE_input10_dram_buffers

  input11_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input11_dram_entries
    grid_size: [$TEMPLATE_input11_dram_grid_size_r, $TEMPLATE_input11_dram_grid_size_c]
    t: $TEMPLATE_input11_dram_t
    mblock: [$TEMPLATE_input11_dram_mb_r, $TEMPLATE_input11_dram_mb_c]
    ublock: [$TEMPLATE_input11_dram_ub_r, $TEMPLATE_input11_dram_ub_c]
    df: $TEMPLATE_input11_dram_df
    ublock_order: $TEMPLATE_input11_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input11_dram_loc
    $TEMPLATE_input11_dram_loc: $TEMPLATE_input11_dram_buffers

  input12_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input12_dram_entries
    grid_size: [$TEMPLATE_input12_dram_grid_size_r, $TEMPLATE_input12_dram_grid_size_c]
    t: $TEMPLATE_input12_dram_t
    mblock: [$TEMPLATE_input12_dram_mb_r, $TEMPLATE_input12_dram_mb_c]
    ublock: [$TEMPLATE_input12_dram_ub_r, $TEMPLATE_input12_dram_ub_c]
    df: $TEMPLATE_input12_dram_df
    ublock_order: $TEMPLATE_input12_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input12_dram_loc
    $TEMPLATE_input12_dram_loc: $TEMPLATE_input12_dram_buffers

  input13_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input13_dram_entries
    grid_size: [$TEMPLATE_input13_dram_grid_size_r, $TEMPLATE_input13_dram_grid_size_c]
    t: $TEMPLATE_input13_dram_t
    mblock: [$TEMPLATE_input13_dram_mb_r, $TEMPLATE_input13_dram_mb_c]
    ublock: [$TEMPLATE_input13_dram_ub_r, $TEMPLATE_input13_dram_ub_c]
    df: $TEMPLATE_input13_dram_df
    ublock_order: $TEMPLATE_input13_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input13_dram_loc
    $TEMPLATE_input13_dram_loc: $TEMPLATE_input13_dram_buffers

  input14_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input14_dram_entries
    grid_size: [$TEMPLATE_input14_dram_grid_size_r, $TEMPLATE_input14_dram_grid_size_c]
    t: $TEMPLATE_input14_dram_t
    mblock: [$TEMPLATE_input14_dram_mb_r, $TEMPLATE_input14_dram_mb_c]
    ublock: [$TEMPLATE_input14_dram_ub_r, $TEMPLATE_input14_dram_ub_c]
    df: $TEMPLATE_input14_dram_df
    ublock_order: $TEMPLATE_input14_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input14_dram_loc
    $TEMPLATE_input14_dram_loc: $TEMPLATE_input14_dram_buffers

  input15_dram:
    type: queue
    input: HOST
    entries: $TEMPLATE_input15_dram_entries
    grid_size: [$TEMPLATE_input15_dram_grid_size_r, $TEMPLATE_input15_dram_grid_size_c]
    t: $TEMPLATE_input15_dram_t
    mblock: [$TEMPLATE_input15_dram_mb_r, $TEMPLATE_input15_dram_mb_c]
    ublock: [$TEMPLATE_input15_dram_ub_r, $TEMPLATE_input15_dram_ub_c]
    df: $TEMPLATE_input15_dram_df
    ublock_order: $TEMPLATE_input15_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_input15_dram_loc
    $TEMPLATE_input15_dram_loc: $TEMPLATE_input15_dram_buffers

  output_dram:
    type: queue
    input: op0
    entries: $TEMPLATE_output_dram_entries
    grid_size: [$TEMPLATE_output_dram_grid_size_r, $TEMPLATE_output_dram_grid_size_c]
    t: $TEMPLATE_output_dram_t
    mblock: [$TEMPLATE_output_dram_mb_r, $TEMPLATE_output_dram_mb_c]
    ublock: [$TEMPLATE_output_dram_ub_r, $TEMPLATE_output_dram_ub_c]
    df: $TEMPLATE_output_dram_df
    ublock_order: $TEMPLATE_output_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_output_dram_loc
    $TEMPLATE_output_dram_loc: $TEMPLATE_output_dram_buffers

graphs:
  test_fused_op:
    target_device: 0
    input_count: $TEMPLATE_microbatch_size

    feeder5:
      type: datacopy
      grid_loc: [$TEMPLATE_feeder5_loc_r, $TEMPLATE_feeder5_loc_c]
      grid_size: [$TEMPLATE_feeder5_grid_size_r, $TEMPLATE_feeder5_grid_size_c]
      inputs: [input5_dram]
      in_df: [$TEMPLATE_feeder5_in0_df]
      acc_df: $TEMPLATE_feeder5_acc_df
      out_df: $TEMPLATE_feeder5_out_df
      intermed_df: $TEMPLATE_feeder5_intermed_df
      ublock_order: $TEMPLATE_feeder5_ublock_order
      buf_size_mb: $TEMPLATE_feeder5_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_feeder5_t
      mblock: [$TEMPLATE_feeder5_mb_r, $TEMPLATE_feeder5_mb_c]
      ublock: [$TEMPLATE_feeder5_ub_r, $TEMPLATE_feeder5_ub_c]

    feeder6:
      type: datacopy
      grid_loc: [$TEMPLATE_feeder6_loc_r, $TEMPLATE_feeder6_loc_c]
      grid_size: [$TEMPLATE_feeder6_grid_size_r, $TEMPLATE_feeder6_grid_size_c]
      inputs: [input6_dram]
      in_df: [$TEMPLATE_feeder6_in0_df]
      acc_df: $TEMPLATE_feeder6_acc_df
      out_df: $TEMPLATE_feeder6_out_df
      intermed_df: $TEMPLATE_feeder6_intermed_df
      ublock_order: $TEMPLATE_feeder6_ublock_order
      buf_size_mb: $TEMPLATE_feeder6_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_feeder6_t
      mblock: [$TEMPLATE_feeder6_mb_r, $TEMPLATE_feeder6_mb_c]
      ublock: [$TEMPLATE_feeder6_ub_r, $TEMPLATE_feeder6_ub_c]

    feeder7:
      type: datacopy
      grid_loc: [$TEMPLATE_feeder7_loc_r, $TEMPLATE_feeder7_loc_c]
      grid_size: [$TEMPLATE_feeder7_grid_size_r, $TEMPLATE_feeder7_grid_size_c]
      inputs: [input7_dram]
      in_df: [$TEMPLATE_feeder7_in0_df]
      acc_df: $TEMPLATE_feeder7_acc_df
      out_df: $TEMPLATE_feeder7_out_df
      intermed_df: $TEMPLATE_feeder7_intermed_df
      ublock_order: $TEMPLATE_feeder7_ublock_order
      buf_size_mb: $TEMPLATE_feeder7_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_feeder7_t
      mblock: [$TEMPLATE_feeder7_mb_r, $TEMPLATE_feeder7_mb_c]
      ublock: [$TEMPLATE_feeder7_ub_r, $TEMPLATE_feeder7_ub_c]

    feeder8:
      type: datacopy
      grid_loc: [$TEMPLATE_feeder8_loc_r, $TEMPLATE_feeder8_loc_c]
      grid_size: [$TEMPLATE_feeder8_grid_size_r, $TEMPLATE_feeder8_grid_size_c]
      inputs: [input8_dram]
      in_df: [$TEMPLATE_feeder8_in0_df]
      acc_df: $TEMPLATE_feeder8_acc_df
      out_df: $TEMPLATE_feeder8_out_df
      intermed_df: $TEMPLATE_feeder8_intermed_df
      ublock_order: $TEMPLATE_feeder8_ublock_order
      buf_size_mb: $TEMPLATE_feeder8_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_feeder8_t
      mblock: [$TEMPLATE_feeder8_mb_r, $TEMPLATE_feeder8_mb_c]
      ublock: [$TEMPLATE_feeder8_ub_r, $TEMPLATE_feeder8_ub_c]

    feeder9:
      type: datacopy
      grid_loc: [$TEMPLATE_feeder9_loc_r, $TEMPLATE_feeder9_loc_c]
      grid_size: [$TEMPLATE_feeder9_grid_size_r, $TEMPLATE_feeder9_grid_size_c]
      inputs: [input9_dram]
      in_df: [$TEMPLATE_feeder9_in0_df]
      acc_df: $TEMPLATE_feeder9_acc_df
      out_df: $TEMPLATE_feeder9_out_df
      intermed_df: $TEMPLATE_feeder9_intermed_df
      ublock_order: $TEMPLATE_feeder9_ublock_order
      buf_size_mb: $TEMPLATE_feeder9_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_feeder9_t
      mblock: [$TEMPLATE_feeder9_mb_r, $TEMPLATE_feeder9_mb_c]
      ublock: [$TEMPLATE_feeder9_ub_r, $TEMPLATE_feeder9_ub_c]

    feeder13:
      type: datacopy
      grid_loc: [$TEMPLATE_feeder13_loc_r, $TEMPLATE_feeder13_loc_c]
      grid_size: [$TEMPLATE_feeder13_grid_size_r, $TEMPLATE_feeder13_grid_size_c]
      inputs: [input13_dram]
      in_df: [$TEMPLATE_feeder13_in0_df]
      acc_df: $TEMPLATE_feeder13_acc_df
      out_df: $TEMPLATE_feeder13_out_df
      intermed_df: $TEMPLATE_feeder13_intermed_df
      ublock_order: $TEMPLATE_feeder13_ublock_order
      buf_size_mb: $TEMPLATE_feeder13_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_feeder13_t
      mblock: [$TEMPLATE_feeder13_mb_r, $TEMPLATE_feeder13_mb_c]
      ublock: [$TEMPLATE_feeder13_ub_r, $TEMPLATE_feeder13_ub_c]

    feeder14:
      type: datacopy
      grid_loc: [$TEMPLATE_feeder14_loc_r, $TEMPLATE_feeder14_loc_c]
      grid_size: [$TEMPLATE_feeder14_grid_size_r, $TEMPLATE_feeder14_grid_size_c]
      inputs: [input14_dram]
      in_df: [$TEMPLATE_feeder14_in0_df]
      acc_df: $TEMPLATE_feeder14_acc_df
      out_df: $TEMPLATE_feeder14_out_df
      intermed_df: $TEMPLATE_feeder14_intermed_df
      ublock_order: $TEMPLATE_feeder14_ublock_order
      buf_size_mb: $TEMPLATE_feeder14_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_feeder14_t
      mblock: [$TEMPLATE_feeder14_mb_r, $TEMPLATE_feeder14_mb_c]
      ublock: [$TEMPLATE_feeder14_ub_r, $TEMPLATE_feeder14_ub_c]

    feeder15:
      type: datacopy
      grid_loc: [$TEMPLATE_feeder15_loc_r, $TEMPLATE_feeder15_loc_c]
      grid_size: [$TEMPLATE_feeder15_grid_size_r, $TEMPLATE_feeder15_grid_size_c]
      inputs: [input15_dram]
      in_df: [$TEMPLATE_feeder15_in0_df]
      acc_df: $TEMPLATE_feeder15_acc_df
      out_df: $TEMPLATE_feeder15_out_df
      intermed_df: $TEMPLATE_feeder15_intermed_df
      ublock_order: $TEMPLATE_feeder15_ublock_order
      buf_size_mb: $TEMPLATE_feeder15_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_feeder15_t
      mblock: [$TEMPLATE_feeder15_mb_r, $TEMPLATE_feeder15_mb_c]
      ublock: [$TEMPLATE_feeder15_ub_r, $TEMPLATE_feeder15_ub_c]

    op0:
      type: fused_op
      attributes: {
        fused_op_id: 0, # $TEMPLATE_kernel_bcast_attribute_partial
      }
      grid_loc: [$TEMPLATE_op0_loc_r, $TEMPLATE_op0_loc_c]
      grid_size: [$TEMPLATE_op0_grid_size_r, $TEMPLATE_op0_grid_size_c]
      inputs: [
        input0_dram,
        input1_dram,
        input2_dram,
        input3_dram,
        input4_dram,
        feeder5,
        feeder6,
        feeder7,
        feeder8,
        feeder9,
        input10_dram,
        input11_dram,
        input12_dram,
        feeder13,
        feeder14,
        feeder15
      ]
      in_df: [
        $TEMPLATE_op0_in0_df,
        $TEMPLATE_op0_in1_df,
        $TEMPLATE_op0_in2_df,
        $TEMPLATE_op0_in3_df,
        $TEMPLATE_op0_in4_df,
        $TEMPLATE_op0_in5_df,
        $TEMPLATE_op0_in6_df,
        $TEMPLATE_op0_in7_df,
        $TEMPLATE_op0_in8_df,
        $TEMPLATE_op0_in9_df,
        $TEMPLATE_op0_in10_df,
        $TEMPLATE_op0_in11_df,
        $TEMPLATE_op0_in12_df,
        $TEMPLATE_op0_in13_df,
        $TEMPLATE_op0_in14_df,
        $TEMPLATE_op0_in15s_df
      ]
      acc_df: $TEMPLATE_op0_acc_df
      out_df: $TEMPLATE_op0_out_df
      intermed_df: $TEMPLATE_op0_inrermed_df
      ublock_order: $TEMPLATE_op0_ublock_order
      buf_size_mb: $TEMPLATE_op0_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      untilize_output: $TEMPLATE_op0_untilize_output
      t: $TEMPLATE_op0_t
      mblock: [$TEMPLATE_op0_mb_r, $TEMPLATE_op0_mb_c]
      ublock: [$TEMPLATE_op0_ub_r, $TEMPLATE_op0_ub_c]
      input_0_tms: $TEMPLATE_input_0_tms
      input_1_tms: $TEMPLATE_input_1_tms
      input_2_tms: $TEMPLATE_input_2_tms
      input_3_tms: $TEMPLATE_input_3_tms
      input_4_tms: $TEMPLATE_input_4_tms
      input_5_tms: $TEMPLATE_input_5_tms
      input_6_tms: $TEMPLATE_input_6_tms
      input_7_tms: $TEMPLATE_input_7_tms
      input_8_tms: $TEMPLATE_input_8_tms
      input_9_tms: $TEMPLATE_input_9_tms
      input_10_tms: $TEMPLATE_input_10_tms
      input_11_tms: $TEMPLATE_input_11_tms
      input_12_tms: $TEMPLATE_input_12_tms
      input_13_tms: $TEMPLATE_input_13_tms
      input_14_tms: $TEMPLATE_input_14_tms
      input_15_tms: $TEMPLATE_input_15_tms

programs:
  - test_fused_op_program:
    - param: [$p_microbatch_count, $p_microbatch_size]
    - staticvar: [$lptr, $gptr]
    - var: {$c_zero: 0, $c_wrap: 2}                         # c_wrap = 2 - finally need to be equal to 2*entries == 2*microbatch_size*microbatch_count
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]  # c_wrap = 2*microbatch_size
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count] # c_wrap = 2*microbatch_size*microbatch_count
    - loop: $p_microbatch_count #loop over number of microbatches that make a minibatch
    -   execute: {
          graph_name: test_fused_op,
          queue_settings: {
               input0_dram: {prologue: $TEMPLATE_input0_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input1_dram: {prologue: $TEMPLATE_input1_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input2_dram: {prologue: $TEMPLATE_input2_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input3_dram: {prologue: $TEMPLATE_input3_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input4_dram: {prologue: $TEMPLATE_input4_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input5_dram: {prologue: $TEMPLATE_input5_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input6_dram: {prologue: $TEMPLATE_input6_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input7_dram: {prologue: $TEMPLATE_input7_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input8_dram: {prologue: $TEMPLATE_input8_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input9_dram: {prologue: $TEMPLATE_input9_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input10_dram: {prologue: $TEMPLATE_input10_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input11_dram: {prologue: $TEMPLATE_input11_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input12_dram: {prologue: $TEMPLATE_input12_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input13_dram: {prologue: $TEMPLATE_input13_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input14_dram: {prologue: $TEMPLATE_input14_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
               input15_dram: {prologue: $TEMPLATE_input15_dram_prologue, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}
          }
        }
    -   varinst: [$lptr, incwrap, $p_microbatch_size, $c_wrap]
    -   varinst: [$gptr, incwrap, $p_microbatch_size, $c_wrap]
    - endloop

fused_ops:
  0:
    inputs: 16
    intermediates: 8
    schedules:
      -
        - subop0: {type: add, inputs: [input0, input1], mblock: [$TEMPLATE_subop0_mb_r, $TEMPLATE_subop0_mb_c], ublock: [$TEMPLATE_subop0_ub_r, $TEMPLATE_subop0_ub_c], output: intermed0}
        - subop1: {type: add, inputs: [intermed0, input2], pop: [intermed0], mblock: [$TEMPLATE_subop1_mb_r, $TEMPLATE_subop1_mb_c], ublock: [$TEMPLATE_subop1_ub_r, $TEMPLATE_subop1_ub_c], output: intermed1}
        - subop2: {type: add, inputs: [input3, input4], mblock: [$TEMPLATE_subop2_mb_r, $TEMPLATE_subop2_mb_c], ublock: [$TEMPLATE_subop2_ub_r, $TEMPLATE_subop2_ub_c], output: intermed2}
        - subop4: {type: add, inputs: [intermed1, intermed2], pop: [intermed1, intermed2], mblock: [$TEMPLATE_subop3_mb_r, $TEMPLATE_subop3_mb_c], ublock: [$TEMPLATE_subop3_ub_r, $TEMPLATE_subop3_ub_c], output: intermed3}
        - subop5: {type: add, inputs: [input5, input6], mblock: [$TEMPLATE_subop5_mb_r, $TEMPLATE_subop5_mb_c], ublock: [$TEMPLATE_subop5_ub_r, $TEMPLATE_subop5_ub_c], output: intermed4}
        - subop6: {type: add, inputs: [intermed4, input7], pop: [intermed4], mblock: [$TEMPLATE_subop6_mb_r, $TEMPLATE_subop6_mb_c], ublock: [$TEMPLATE_subop6_ub_r, $TEMPLATE_subop6_ub_c], output: intermed5}
        - subop7: {type: add, inputs: [input8, input9], mblock: [$TEMPLATE_subop7_mb_r, $TEMPLATE_subop7_mb_c], ublock: [$TEMPLATE_subop7_ub_r, $TEMPLATE_subop7_ub_c], output: intermed6}
        - subop8: {type: add, inputs: [intermed5, intermed6], pop: [intermed5, intermed6], mblock: [$TEMPLATE_subop8_mb_r, $TEMPLATE_subop8_mb_c], ublock: [$TEMPLATE_subop8_ub_r, $TEMPLATE_subop8_ub_c], output: intermed7}
        - subop9: {type: datacopy, inputs: [input10], mblock: [$TEMPLATE_subop9_mb_r, $TEMPLATE_subop9_mb_c], ublock: [$TEMPLATE_subop9_ub_r, $TEMPLATE_subop9_ub_c], output: dest}
        - subop10: {type: add, inputs: [dest, input11], mblock: [$TEMPLATE_subop10_mb_r, $TEMPLATE_subop10_mb_c], ublock: [$TEMPLATE_subop10_ub_r, $TEMPLATE_subop10_ub_c], output: dest}
        - subop11: {type: add, inputs: [dest, input12], mblock: [$TEMPLATE_subop11_mb_r, $TEMPLATE_subop11_mb_c], ublock: [$TEMPLATE_subop11_ub_r, $TEMPLATE_subop11_ub_c], output: dest}
        - subop12: {type: add, inputs: [dest, input13], mblock: [$TEMPLATE_subop12_mb_r, $TEMPLATE_subop12_mb_c], ublock: [$TEMPLATE_subop12_ub_r, $TEMPLATE_subop12_ub_c], output: dest}
        - subop13: {type: add, inputs: [dest, input14], mblock: [$TEMPLATE_subop13_mb_r, $TEMPLATE_subop13_mb_c], ublock: [$TEMPLATE_subop13_ub_r, $TEMPLATE_subop13_ub_c], output: dest}
        - subop14: {type: add, inputs: [dest, input15], mblock: [$TEMPLATE_subop14_mb_r, $TEMPLATE_subop14_mb_c], ublock: [$TEMPLATE_subop14_ub_r, $TEMPLATE_subop14_ub_c], output: dest}
        - subop_res_1: {type: add, inputs: [dest, intermed3], pop: [intermed3], mblock: [$TEMPLATE_subop_res_1_mb_r, $TEMPLATE_subop_res_1_mb_c], ublock: [$TEMPLATE_subop_res_1_ub_r, $TEMPLATE_subop_res_1_ub_c], output: dest}
        - subop_res_2: {type: add, inputs: [dest, intermed7], pop: [intermed7], mblock: [$TEMPLATE_subop_res_2_mb_r, $TEMPLATE_subop_res_2_mb_c], ublock: [$TEMPLATE_subop_res_2_ub_r, $TEMPLATE_subop_res_2_ub_c], output: output}


test-config:
  test-args:
    microbatch_count: $TEMPLATE_microbatch_count # entries / input_count
    microbatch_size: $TEMPLATE_microbatch_size # input_count
    minibatch_count: $TEMPLATE_minibatch_count # host loop iterations
  test-generation-debug:
    kernel_broadcast_index: $TEMPLATE_kernel_bcast_idx # kernel broadcast index for this netlist