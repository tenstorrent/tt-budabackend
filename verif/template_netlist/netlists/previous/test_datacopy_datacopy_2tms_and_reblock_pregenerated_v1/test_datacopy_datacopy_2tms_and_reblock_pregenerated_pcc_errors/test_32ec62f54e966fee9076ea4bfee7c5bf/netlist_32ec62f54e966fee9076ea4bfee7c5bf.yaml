devices:
  arch: grayskull

queues:
  dram_input0:
    type: queue
    input: HOST
    entries: 1
    grid_size: [7, 1]
    t: 24
    mblock: [1, 1]
    ublock: [6, 1]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[2, 0x10000000], [2, 0x10049220], [2, 0x10092440], [2, 0x100db660], [2, 0x10124880], [2, 0x1016daa0], [2, 0x101b6cc0]]

  dram_output:
    type: queue
    input: op0
    entries: 1
    grid_size: [6, 3]
    t: 8
    mblock: [7, 2]
    ublock: [1, 1]
    df: Float16
    ublock_order: c
    target_device: 0
    loc: dram
    dram: [[0, 0x10000020], [0, 0x10038e40], [0, 0x10071c60], [0, 0x100aaa80], [0, 0x100e38a0], [0, 0x1011c6c0], [0, 0x101554e0], [0, 0x1018e300], [0, 0x101c7120], [0, 0x101fff40], [0, 0x10238d60], [0, 0x10271b80], [0, 0x102aa9a0], [0, 0x102e37c0], [0, 0x1031c5e0], [0, 0x10355400], [0, 0x1038e220], [0, 0x103c7040]]

graphs:
  test_multi_tm_datacopy_datacopy:
    target_device: 0
    input_count: 1
    feeder0:
      type: datacopy
      grid_loc: [3, 0]
      grid_size: [7, 1]
      inputs: [dram_input0]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: c
      buf_size_mb: 2
      math_fidelity: HiFi4
      untilize_output: false
      t: 24
      mblock: [1, 1]
      ublock: [6, 1]
    op0:
      type: datacopy
      grid_loc: [0, 6]
      grid_size: [6, 3]
      inputs: [feeder0]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: c
      buf_size_mb: 4
      math_fidelity: HiFi4
      untilize_output: false
      t: 8
      mblock: [7, 2]
      ublock: [1, 1]
      input_0_tms: [broadcast: {c: 2}, hstack: 3]

programs:
  - test_multi_tm_datacopy_matmul_program:
    - param: [$p_microbatch_count, $p_microbatch_size]
    - staticvar: [$lptr, $gptr]
    - var: {$c_zero: 0, $c_wrap: 2}                         # c_wrap = 2 - finally need to be equal to 2*entries == 2*microbatch_size*microbatch_count
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]  # c_wrap = 2*microbatch_size
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count] # c_wrap = 2*microbatch_size*microbatch_count
    - loop: $p_microbatch_count #loop over number of microbatches that make a minibatch
    -   execute: {
          graph_name: test_multi_tm_datacopy_datacopy,
          queue_settings: {
            dram_input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
          }
        }
    -   varinst: [$lptr, incwrap, $p_microbatch_size, $c_wrap]
    -   varinst: [$gptr, incwrap, $p_microbatch_size, $c_wrap]
    - endloop

test-config:
  test-args:
    microbatch_count: 1 # entries / input_count
    microbatch_size: 1 # input_count
    minibatch_count: 1 # host loop iterations