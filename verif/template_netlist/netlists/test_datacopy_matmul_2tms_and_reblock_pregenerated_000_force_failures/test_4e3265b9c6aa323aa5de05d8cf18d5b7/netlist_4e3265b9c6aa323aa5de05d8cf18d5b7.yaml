# test_config_id=52
devices:
  arch: grayskull

queues:
  dram_input0:
    type: queue
    input: HOST
    entries: 10
    grid_size: [7, 1]
    t: 2
    mblock: [1, 2]
    ublock: [4, 2]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[3, 0x100000c0], [3, 0x100a28e0], [3, 0x10145100], [3, 0x101e7920], [3, 0x1028a140], [3, 0x1032c960], [3, 0x103cf180]]

  dram_input1:
    type: queue
    input: HOST
    entries: 10
    grid_size: [1, 3]
    t: 12
    mblock: [7, 1]
    ublock: [6, 1]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[1, 0x10000060], [1, 0x109ff680], [1, 0x113feca0]]

  dram_output:
    type: queue
    input: op0
    entries: 10
    grid_size: [2, 3]
    t: 4
    mblock: [1, 1]
    ublock: [7, 1]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[2, 0x100000a0], [2, 0x1008e3c0], [2, 0x1011c6e0], [2, 0x101aaa00], [2, 0x10238d20], [2, 0x102c7040]]

graphs:
  test_multi_tm_datacopy_matmul:
    target_device: 0
    input_count: 2
    feeder0:
      type: datacopy
      grid_loc: [3, 3]
      grid_size: [7, 1]
      inputs: [dram_input0]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi4
      untilize_output: false
      t: 2
      mblock: [1, 2]
      ublock: [4, 2]
    feeder1:
      type: datacopy
      grid_loc: [9, 9]
      grid_size: [1, 3]
      inputs: [dram_input1]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 6
      math_fidelity: HiFi4
      untilize_output: false
      t: 12
      mblock: [7, 1]
      ublock: [6, 1]
    op0:
      type: matmul
      grid_loc: [1, 0]
      grid_size: [2, 3]
      inputs: [feeder0, feeder1]
      in_df: [Float16, Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 4
      math_fidelity: HiFi4
      attributes: {m_k: 3780, u_kt: 1}
      untilize_output: false
      t: 4
      mblock: [1, 1]
      ublock: [7, 1]
      input_0_tms: [broadcast: {c: 945}, vslice: 2]
      input_1_tms: [vstack: 3, broadcast: {r: 30}]

programs:
  - test_multi_tm_datacopy_matmul_program:
    - param: [$p_microbatch_count, $p_microbatch_size]
    - staticvar: [$lptr, $gptr]
    - var: {$c_zero: 0, $c_wrap: 2}                         # c_wrap = 2 - finally need to be equal to 2*entries == 2*microbatch_size*microbatch_count
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]  # c_wrap = 2*microbatch_size
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count] # c_wrap = 2*microbatch_size*microbatch_count
    - loop: $p_microbatch_count #loop over number of microbatches that make a minibatch
    -   execute: {
          graph_name: test_multi_tm_datacopy_matmul,
          queue_settings: {
            dram_input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
            dram_input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}
          }
        }
    -   varinst: [$lptr, incwrap, $p_microbatch_size, $c_wrap]
    -   varinst: [$gptr, incwrap, $p_microbatch_size, $c_wrap]
    - endloop

test-config:
  test-args:
    microbatch_count: 5 # entries / input_count
    microbatch_size: 2 # input_count
    minibatch_count: 1 # host loop iterations# Generation Command: SEED=321 ARCH_NAME=grayskull verif/template_netlist/run_generate_ci_tests.sh test_modules.test_datacopy_matmul_multiple_tms_and_reblock verif/graph_tests/netlists/z3/test_datacopy_matmul_2tms_and_reblock_20220929_225115 107 1