

devices:
  arch: wormhole_b0

queues:
  input_0: {input: HOST, type: queue, entries: 2, grid_size: [1, 1], t: 32, mblock: [1, 1], ublock: [1, 2], tile_dim: [32, 32], 
     ublock_order: r, df: Float16_b, loc: dram, target_device: 0, dram: [[0, 0x30d0000]]}
     
  input_1: {input: HOST, type: queue, entries: 2, grid_size: [1, 1], t: 32, mblock: [1, 1], ublock: [1, 1], tile_dim: [32, 32], 
     ublock_order: c, df: Float16_b, loc: dram, target_device: 0, dram: [[1, 0x30d0000]]}

  input_2: {input: HOST, type: queue, entries: 2, grid_size: [1, 1], t: 32, mblock: [1, 1], ublock: [1, 1], tile_dim: [32, 32], 
     ublock_order: r, df: Float16_b, loc: dram, target_device: 0, dram: [[2, 0x30d0000]]}

  input_3: {input: HOST, type: queue, entries: 2, grid_size: [1, 1], t: 32, mblock: [1, 1], ublock: [1, 2], tile_dim: [32, 32],
     ublock_order: r, df: Float16_b, loc: dram, target_device: 0, dram: [[3, 0x67a0000]]}

  input_4: {input: HOST, type: queue, entries: 2, grid_size: [1, 1], t: 32, mblock: [1, 1], ublock: [1, 1], tile_dim: [32, 32],
     ublock_order: r, df: Float16_b, loc: dram, target_device: 0, dram: [[4, 0x67a0000]]}

  input_5: {input: HOST, type: queue, entries: 2, grid_size: [1, 1], t: 32, mblock: [1, 1], ublock: [1, 1], tile_dim: [32, 32],
     ublock_order: r, df: Float16_b, loc: dram, target_device: 0, dram: [[5, 0x30d0000]]}

  output: {input: _fused_op_66, type: queue, entries: 2, grid_size: [1, 1], t: 32, mblock: [1, 1], ublock: [1, 2], tile_dim: [32, 32], ublock_order: r, df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x4000000]]}



graphs:
  g0:
    target_device: 0
    input_count: 1

    matmul_526: {type: datacopy, grid_loc: [0, 0], grid_size: [1, 1], inputs: [input_0], t: 32, mblock: [1, 1], ublock: [1, 2], tile_dim: [32, 32], buf_size_mb: 2, 
          input_buf_min_size_tiles: [0, 68], ublock_order: r, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float32, acc_df: Float32, math_fidelity: HiFi3}

    _fused_op_65: {type: datacopy, grid_loc: [0, 1], grid_size: [1, 1], inputs: [input_1], t: 32, mblock: [1, 1], ublock: [1, 1], tile_dim: [32, 32], buf_size_mb: 2, 
          input_buf_min_size_tiles: [8, 0], ublock_order: c, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}

    _fused_op_64: {type: datacopy, grid_loc: [0, 2], grid_size: [1, 1], inputs: [input_2], t: 32, mblock: [1, 1], ublock: [1, 1], tile_dim: [32, 32], buf_size_mb: 2, 
          input_buf_min_size_tiles: [12, 0], ublock_order: r, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}

    _fused_op_62: {type: datacopy, grid_loc: [0, 3], grid_size: [1, 1], inputs: [input_3],
          t: 32, mblock: [1, 1], ublock: [1, 2], tile_dim: [32, 32], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b], out_df: Float16_b, 
          intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}

    _fused_op_61: {type: datacopy, grid_loc: [0, 4], grid_size: [1, 1], inputs: [input_4], t: 32, mblock: [1, 1], ublock: [1, 1], tile_dim: [32, 32], buf_size_mb: 2, 
          input_buf_min_size_tiles: [12, 0], ublock_order: r, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}

    reduce_sum_530.lc1: {type: datacopy, grid_loc: [0, 5], grid_size: [1, 1], inputs: [input_5], t: 32, mblock: [1, 1], ublock: [1, 1], tile_dim: [32, 32], buf_size_mb: 2, 
          ublock_order: r, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float32, acc_df: Float32, math_fidelity: HiFi3}



    _fused_op_66: {type: fused_op, grid_loc: [1, 3], grid_size: [1, 1], inputs: [matmul_526, _fused_op_64, _fused_op_62, _fused_op_61, reduce_sum_530.lc1, _fused_op_64, _fused_op_65],
         t: 32, mblock: [1, 1], ublock: [1, 2], tile_dim: [32, 32], buf_size_mb: 2, input_buf_min_size_tiles: [0, 0, 0, 4, 0, 0, 4], ublock_order: r, in_df: [Float16_b, Float16_b, Float16_b, Float16_b, Float16_b, Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 2}],
         attributes: {approximate_mode: false, fused_op_id: 12}}


programs:
- run_fwd_0:
  - var: {$c_microbatch_size: 1, $c_one: 1, $c_zero: 0, $c_outer_loop_count: 1}
  - staticvar: {$lptr: 0, $gptr: 0}
  - loop: $c_outer_loop_count
  -     execute: {graph_name: g0, queue_settings: {
              input_0: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
              input_1: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
              input_2: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
              input_3: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
              input_4: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
              input_5: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr, rd_ptr_global: $gptr}
    }}
  -     varinst: [$lptr, incwrap, $c_microbatch_size, 4]
  -     varinst: [$gptr, incwrap, $c_microbatch_size, 4]
  - endloop


fused_ops:
  12: 
    inputs: 7
    intermediates: 2
    schedules: 
      -
        - multiply_74.0: { type: multiply, inputs: [input0, input1], input_1_tms: [tile_broadcast: c], mblock: [1, 1], ublock: [1, 2], output: dest}
        - add_75.0: { type: add, inputs: [input2, dest], mblock: [1, 1], ublock: [1, 2], output: intermed0}
        - multiply_77.0: { type: multiply, inputs: [input3, input4], mblock: [1, 1], ublock: [1, 1], output: intermed1}
        - multiply_79.0: { type: multiply, inputs: [input5, input6], mblock: [1, 1], ublock: [1, 1], output: dest}
        - add_80.0: { type: add, inputs: [intermed1, dest], pop: [intermed1], mblock: [1, 1], ublock: [1, 1], output: dest}
        - reciprocal_81.0: { type: reciprocal, inputs: [dest], mblock: [1, 1], ublock: [1, 1], output: intermed1}
        - multiply_82.0: { type: multiply, inputs: [intermed0, intermed1], input_1_tms: [broadcast: {c: 2}, tile_broadcast: c], pop: [intermed0, intermed1], mblock: [1, 1], ublock: [1, 2], output: output}