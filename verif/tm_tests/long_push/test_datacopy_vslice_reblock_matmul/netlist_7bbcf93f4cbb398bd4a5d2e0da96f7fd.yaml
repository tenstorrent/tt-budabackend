devices:
  arch: grayskull

queues:
  dram_input0:
    type: queue
    input: HOST
    entries: 6
    grid_size: [1, 10]
    t: 4
    mblock: [3, 1]
    ublock: [1, 1]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[0, 0x10209fc0], [0, 0x11c5b5a0], [0, 0x149c1860], [0, 0x18d88d80], [0, 0x1bd4e820], [0, 0x22f522c0], [0, 0x345de4e0], [0, 0x3ae64f00], [0, 0x3b856540], [0, 0x3faac0e0]]

  dram_input1:
    type: queue
    input: HOST
    entries: 2
    grid_size: [5, 6]
    t: 4
    mblock: [1, 1]
    ublock: [2, 2]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[3, 0x1079b2c0], [3, 0x10a523e0], [3, 0x14802cc0], [3, 0x17001520], [3, 0x195abb00], [3, 0x198ef800], [3, 0x19a3c700], [3, 0x1a145ec0], [3, 0x1a635b80], [3, 0x1b728400], [3, 0x1d00e560], [3, 0x201950e0], [3, 0x20d13020], [3, 0x21ab3d80], [3, 0x2277e300], [3, 0x2482cf40], [3, 0x266c8ec0], [3, 0x28e05d80], [3, 0x2a2dbf00], [3, 0x2d2f2f60], [3, 0x317f3160], [3, 0x321924e0], [3, 0x35808380], [3, 0x36605a80], [3, 0x37b5e900], [3, 0x38f04320], [3, 0x39f50ca0], [3, 0x3b7558c0], [3, 0x3b90be80], [3, 0x3f8948e0]]

  dram_output:
    type: queue
    input: op0
    entries: 6
    grid_size: [1, 2]
    t: 4
    mblock: [3, 2]
    ublock: [1, 3]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[1, 0x10071cc0], [1, 0x262255a0]]

graphs:
  test_tm:
    target_device: 0
    input_count: 2
    feeder0: 
      type: datacopy
      grid_loc: [0, 2]
      grid_size: [1, 10]
      inputs: [dram_input0] 
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16  
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 1
      math_fidelity: HiFi4
      untilize_output: false
      t: 4
      mblock: [3, 1]
      ublock: [1, 1]
      input_0_tms:
    feeder1: 
      type: datacopy
      grid_loc: [3, 1]
      grid_size: [5, 6]
      inputs: [dram_input1] 
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16  
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 1
      math_fidelity: HiFi4
      untilize_output: false
      t: 4
      mblock: [1, 1]
      ublock: [2, 2]
      input_0_tms:
    op0: 
      type: matmul
      grid_loc: [1, 0]
      grid_size: [1, 2]
      inputs: [feeder0, feeder1] 
      in_df: [Float16, Float16] 
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 1
      math_fidelity: HiFi4
      attributes: {m_k: 10, u_kt: 1}
      untilize_output: false
      t: 4
      mblock: [3, 2]
      ublock: [1, 3]
      input_0_tms: [vslice: 1]
      input_1_tms: [vslice: 1]
      
programs:
  - program0:
      #- var: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - var : [$c_loop_count]
      - staticvar : {$lptr0 : 0, $gptr0 : 0, $lptr1 : 0, $gptr1: 0}
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - loop: $c_loop_count
      - execute: {graph_name: test_tm, queue_settings: {
          dram_input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr0, rd_ptr_global: $gptr0},
          dram_input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr1, rd_ptr_global: $gptr1}}}
      #- varinst: [$lptr, add, $lptr, $c_input_count] # add two variables
      #- varinst: [$gptr, add, $gptr, $c_input_count] # add two variables
      - varinst: [$lptr0, incwrap, 2, 12]
      - varinst: [$gptr0, incwrap, 2, 12]
      - varinst: [$lptr1, incwrap, 2, 4]
      - varinst: [$gptr1, incwrap, 2, 4]
      - endloop: 



