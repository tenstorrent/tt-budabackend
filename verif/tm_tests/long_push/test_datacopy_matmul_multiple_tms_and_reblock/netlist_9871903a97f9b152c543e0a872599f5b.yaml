# test_config_id=0
devices:
  arch: grayskull

queues:
  dram_input0:
    type: queue
    input: HOST
    entries: 2
    grid_size: [1, 2]
    t: 128
    mblock: [1, 5]
    ublock: [3, 1]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[1, 0x10000000], [1, 0x1079e020]]

  dram_input1:
    type: queue
    input: HOST
    entries: 2
    grid_size: [10, 5]
    t: 4
    mblock: [4, 1]
    ublock: [4, 2]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[3, 0x10000000], [3, 0x10082020], [3, 0x10104040], [3, 0x10186060], [3, 0x10208080], [3, 0x1028a0a0], [3, 0x1030c0c0], [3, 0x1038e0e0], [3, 0x10410100], [3, 0x10492120], [3, 0x10514140], [3, 0x10596160], [3, 0x10618180], [3, 0x1069a1a0], [3, 0x1071c1c0], [3, 0x1079e1e0], [3, 0x10820200], [3, 0x108a2220], [3, 0x10924240], [3, 0x109a6260], [3, 0x10a28280], [3, 0x10aaa2a0], [3, 0x10b2c2c0], [3, 0x10bae2e0], [3, 0x10c30300], [3, 0x10cb2320], [3, 0x10d34340], [3, 0x10db6360], [3, 0x10e38380], [3, 0x10eba3a0], [3, 0x10f3c3c0], [3, 0x10fbe3e0], [3, 0x11040400], [3, 0x110c2420], [3, 0x11144440], [3, 0x111c6460], [3, 0x11248480], [3, 0x112ca4a0], [3, 0x1134c4c0], [3, 0x113ce4e0], [3, 0x11450500], [3, 0x114d2520], [3, 0x11554540], [3, 0x115d6560], [3, 0x11658580], [3, 0x116da5a0], [3, 0x1175c5c0], [3, 0x117de5e0], [3, 0x11860600], [3, 0x118e2620]]

  dram_output:
    type: queue
    input: op0
    entries: 2
    grid_size: [1, 5]
    t: 16
    mblock: [2, 2]
    ublock: [3, 1]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[2, 0x10000000], [2, 0x100c3020], [2, 0x10186040], [2, 0x10249060], [2, 0x1030c080]]

graphs:
  test_multi_tm_datacopy_matmul:
    target_device: 0
    input_count: 1
    feeder0:
      type: datacopy
      grid_loc: [9, 0]
      grid_size: [1, 2]
      inputs: [dram_input0]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: c
      buf_size_mb: 16
      math_fidelity: HiFi4
      untilize_output: false
      t: 128
      mblock: [1, 5]
      ublock: [3, 1]
    feeder1:
      type: datacopy
      grid_loc: [0, 5]
      grid_size: [10, 5]
      inputs: [dram_input1]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 4
      math_fidelity: HiFi4
      untilize_output: false
      t: 4
      mblock: [4, 1]
      ublock: [4, 2]
    op0:
      type: matmul
      grid_loc: [8, 0]
      grid_size: [1, 5]
      inputs: [feeder0, feeder1]
      in_df: [Float16, Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 1
      math_fidelity: HiFi4
      attributes: {m_k: 8, u_kt: 5}
      untilize_output: false
      t: 16
      mblock: [2, 2]
      ublock: [3, 1]
      input_0_tms: [hstack: 4, vstack: 2]
      input_1_tms: [vslice: 8, vstack: 2]

programs:
  - test_multi_tm_datacopy_matmul_program:
    - param: [$p_microbatch_count, $p_microbatch_size]
    - staticvar: [$lptr, $gptr]
    - var: {$c_zero: 0, $c_wrap: 2}                         # c_wrap = 2 - finally need to be equal to 2*entries == 2*microbatch_size*microbatch_count
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]  # c_wrap = 2*microbatch_size
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count] # c_wrap = 2*microbatch_size*microbatch_count
    - loop: $p_microbatch_count #loop over number of microbatches that make a minibatch
    -   execute: {
          graph_name: test_multi_tm_datacopy_matmul,
          queue_settings: {
            dram_input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
            dram_input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}
          }
        }
    -   varinst: [$lptr, incwrap, $p_microbatch_size, $c_wrap]
    -   varinst: [$gptr, incwrap, $p_microbatch_size, $c_wrap]
    - endloop

test-config:
  test-args:
    microbatch_count: 2 # entries / input_count
    microbatch_size: 1 # input_count
    minibatch_count: 1 # host loop iterations