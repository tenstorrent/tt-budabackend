devices:
  arch: grayskull

queues:
  dram_input:
    type: queue
    input: HOST
    entries: 4
    grid_size: [2, 2]
    t: 1
    mblock: [6, 4]
    ublock: [1, 6]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[6, 0x10000020], [6, 0x10124840], [6, 0x10249060], [6, 0x1036d880]]

  dram_output:
    type: queue
    input: datacopy0
    entries: 4
    grid_size: [4, 8]
    t: 36
    mblock: [1, 1]
    ublock: [3, 2]
    df: Float16
    ublock_order: r
    target_device: 0
    loc: dram
    dram: [[0, 0x10000040], [0, 0x101b6c60], [0, 0x1036d880], [0, 0x105244a0], [0, 0x106db0c0], [0, 0x10891ce0], [0, 0x10a48900], [0, 0x10bff520], [0, 0x10db6140], [0, 0x10f6cd60], [0, 0x11123980], [0, 0x112da5a0], [0, 0x114911c0], [0, 0x11647de0], [0, 0x117fea00], [0, 0x119b5620], [0, 0x11b6c240], [0, 0x11d22e60], [0, 0x11ed9a80], [0, 0x120906a0], [0, 0x122472c0], [0, 0x123fdee0], [0, 0x125b4b00], [0, 0x1276b720], [0, 0x12922340], [0, 0x12ad8f60], [0, 0x12c8fb80], [0, 0x12e467a0], [0, 0x12ffd3c0], [0, 0x131b3fe0], [0, 0x1336ac00], [0, 0x13521820]]

graphs:
  test_multi_tm_dram_op:
    target_device: 0
    input_count: 4
    datacopy0: 
      type: datacopy 
      grid_loc: [4, 0] 
      grid_size: [4, 8]
      inputs: [dram_input] 
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16  
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 4
      math_fidelity: HiFi3 
      untilize_output: false 
      t: 36
      mblock: [1, 1]
      ublock: [3, 2]
      input_0_tms: [broadcast: {z: 12}, hslice: 3]
      
programs:
  - multi_tm_test_program:
    - param: [$p_microbatch_count, $p_microbatch_size]
    - staticvar: [$lptr, $gptr]
    - var: {$c_zero: 0, $c_wrap: 2}                         # c_wrap = 2 - finally need to be equal to 2*entries == 2*microbatch_size*microbatch_count
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]  # c_wrap = 2*microbatch_size
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count] # c_wrap = 2*microbatch_size*microbatch_count
    - loop: $p_microbatch_count #loop over number of microbatches that make a minibatch
    -   execute: {
          graph_name: test_multi_tm_dram_op,
          queue_settings: {
               dram_input: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}
          }
        }
    -   varinst: [$lptr, incwrap, $p_microbatch_size, $c_wrap]
    -   varinst: [$gptr, incwrap, $p_microbatch_size, $c_wrap]
    - endloop

test-config:
  test-args:
    microbatch_count: 1 # entries / input_count
    microbatch_size: 4 # input_count
    minibatch_count: 1 # host loop iterations