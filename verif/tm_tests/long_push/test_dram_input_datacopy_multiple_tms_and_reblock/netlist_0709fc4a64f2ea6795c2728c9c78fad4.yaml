devices:
  arch: grayskull

queues:
  dram_input:
    type: queue
    input: HOST
    entries: 1
    grid_size: [3, 1]
    t: 80
    mblock: [5, 1]
    ublock: [1, 1]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[5, 0x10000020], [5, 0x100cb240], [5, 0x10196460]]

  dram_output:
    type: queue
    input: datacopy0
    entries: 1
    grid_size: [10, 2]
    t: 40
    mblock: [1, 1]
    ublock: [3, 2]
    df: Float16
    ublock_order: r
    target_device: 0
    loc: dram
    dram: [[3, 0x10000040], [3, 0x10079e60], [3, 0x100f3c80], [3, 0x1016daa0], [3, 0x101e78c0], [3, 0x102616e0], [3, 0x102db500], [3, 0x10355320], [3, 0x103cf140], [3, 0x10448f60], [3, 0x104c2d80], [3, 0x1053cba0], [3, 0x105b69c0], [3, 0x106307e0], [3, 0x106aa600], [3, 0x10724420], [3, 0x1079e240], [3, 0x10818060], [3, 0x10891e80], [3, 0x1090bca0]]

graphs:
  test_multi_tm_dram_op:
    target_device: 0
    input_count: 1
    datacopy0: 
      type: datacopy 
      grid_loc: [0, 2] 
      grid_size: [10, 2]
      inputs: [dram_input] 
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16  
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 1
      math_fidelity: HiFi3 
      untilize_output: false 
      t: 40
      mblock: [1, 1]
      ublock: [3, 2]
      input_0_tms: [broadcast: {c: 4}, vstack: 2]
      
programs:
  - multi_tm_test_program:
    - param: [$p_microbatch_count, $p_microbatch_size]
    - staticvar: [$lptr, $gptr]
    - var: {$c_zero: 0, $c_wrap: 2}                         # c_wrap = 2 - finally need to be equal to 2*entries == 2*microbatch_size*microbatch_count
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]  # c_wrap = 2*microbatch_size
    - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count] # c_wrap = 2*microbatch_size*microbatch_count
    - loop: $p_microbatch_count #loop over number of microbatches that make a minibatch
    -   execute: {
          graph_name: test_multi_tm_dram_op,
          queue_settings: {
               dram_input: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}
          }
        }
    -   varinst: [$lptr, incwrap, $p_microbatch_size, $c_wrap]
    -   varinst: [$gptr, incwrap, $p_microbatch_size, $c_wrap]
    - endloop

test-config:
  test-args:
    microbatch_count: 1 # entries / input_count
    microbatch_size: 1 # input_count
    minibatch_count: 1 # host loop iterations