devices:
  arch: grayskull

queues:
  dram_input0:
    type: queue
    input: HOST
    entries: 28
    grid_size: [4, 1]
    t: 4
    mblock: [4, 14]
    ublock: [1, 1]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[1, 0x11d841a0], [1, 0x260f6380], [1, 0x2bba9340], [1, 0x3db3e040]]

  dram_input1:
    type: queue
    input: HOST
    entries: 4
    grid_size: [4, 1]
    t: 4
    mblock: [3, 7]
    ublock: [1, 2]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[4, 0x1104c860], [4, 0x2129c9e0], [4, 0x2f343f00], [4, 0x3efede80]]

  dram_output:
    type: queue
    input: op0
    entries: 8
    grid_size: [2, 2]
    t: 4
    mblock: [4, 2]
    ublock: [2, 3]
    df: Float16
    target_device: 0
    loc: dram
    dram: [[6, 0x100ad320], [6, 0x1c168ce0], [6, 0x2b1a0480], [6, 0x3456b9a0]]

graphs:
  test_tm:
    target_device: 0
    input_count: 4
    feeder0: 
      type: datacopy
      grid_loc: [1, 3]
      grid_size: [4, 1]
      inputs: [dram_input0] 
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16  
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 1
      math_fidelity: HiFi4
      untilize_output: false
      t: 4
      mblock: [4, 14]
      ublock: [1, 1]
      input_0_tms:
    feeder1: 
      type: datacopy
      grid_loc: [1, 8]
      grid_size: [4, 1]
      inputs: [dram_input1] 
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16  
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 1
      math_fidelity: HiFi4
      untilize_output: false
      t: 4
      mblock: [3, 7]
      ublock: [1, 2]
      input_0_tms:
    op0: 
      type: matmul
      grid_loc: [8, 1]
      grid_size: [2, 2]
      inputs: [feeder0, feeder1] 
      in_df: [Float16, Float16] 
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 4
      math_fidelity: HiFi4
      attributes: {m_k: 7, u_kt: 2}
      untilize_output: false
      t: 4
      mblock: [4, 2]
      ublock: [2, 3]
      input_0_tms: []
      input_1_tms: [transpose]
      
programs:
  - program0:
      #- var: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - var : [$c_loop_count]
      - staticvar : {$lptr0 : 0, $gptr0 : 0, $lptr1 : 0, $gptr1: 0}
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - loop: $c_loop_count
      - execute: {graph_name: test_tm, queue_settings: {
          dram_input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr0, rd_ptr_global: $gptr0},
          dram_input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr1, rd_ptr_global: $gptr1}}}
      #- varinst: [$lptr, add, $lptr, $c_input_count] # add two variables
      #- varinst: [$gptr, add, $gptr, $c_input_count] # add two variables
      - varinst: [$lptr0, incwrap, 4, 56]
      - varinst: [$gptr0, incwrap, 4, 56]
      - varinst: [$lptr1, incwrap, 4, 8]
      - varinst: [$gptr1, incwrap, 4, 8]
      - endloop: 



