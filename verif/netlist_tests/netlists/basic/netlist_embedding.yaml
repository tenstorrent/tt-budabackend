devices:
  arch: [grayskull, wormhole, wormhole_b0]

queues:
  q0    : {type: queue, input: HOST   , entries: 1, grid_size: [1, 1], t: 2, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, layout: flat, loc: dram, dram: [[0, 0x11000000]]}
  q1    : {type: queue, input: HOST   , entries: 1, grid_size: [1, 1], t: 2, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x11000000]]}
  output: {type: queue, input: embedding0 , entries: 1, grid_size: [1, 1], t: 2, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x12000000]]}

graphs:
  test_unary:
    target_device: 0
    input_count: 1
    embedding0: {
      type: embedding, 
      grid_loc: [0, 0], 
      grid_size: [1, 1], 
      inputs: [q0, q1], 
      in_df: [Float16, Float16], 
      acc_df: Float16, 
      out_df: Float16,  
      intermed_df: Float16, 
      ublock_order: r, 
      buf_size_mb: 2, 
      math_fidelity: HiFi3, 
      untilize_output: false, 
      t: 2, 
      mblock: [1, 1], 
      ublock: [1, 1],
      attributes: {
        num_indices: 10
      }
    }

programs:
  - program0:
      - staticvar: {$q_rdptr0: 0}
      - var: {$c_num_loops: 1, $c_incr: 1}
      - loop: $c_num_loops
      - execute: {graph_name: test_unary, queue_settings: {
          q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $q_rdptr0, rd_ptr_global: $q_rdptr0},
          q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $q_rdptr0, rd_ptr_global: $q_rdptr0}}}
      - varinst: [$q_rdptr0, incwrap, $c_incr, 2]
      - endloop 


test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.50
    check_pcc: 0.92
    verbosity: Concise
  stimulus-config:
#     type: Normal
#     normal_mean: 0.0
#     normal_stddev: 0.1
    type: Uniform
    uniform_lower_bound: -0.3
    uniform_upper_bound: 0.3
  io-config:
    inputs: [q0, q1]
    outputs: [output]