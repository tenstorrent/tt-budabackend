# Implements dual-view dram where the read-view has num_entries > 1. Requires global_wrptr_autoinc on write-view and global_rdptr_autoinc on reader.

devices:
    arch: [grayskull, wormhole, wormhole_b0]

test-config:
  stimulus-config:
    type: Normal
    normal_mean: 0.5
    normal_stddev: 0.1
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.0
    check_pcc: 0.98
    verbosity: Concise

queues:
  q0     : {type: queue,  input: HOST, entries: 128, grid_size: [1, 1], t: 3, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x10000000]]}
  writer : {type: ram,    input: unary0, entries: 128, grid_size: [1, 1], t: 3, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x12000000]]}
  reader : {type: ram,    input: HOST, alias: writer, entries: 128, grid_size: [1, 1], t: 3, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x12000000]]}
  output : {type: queue,  input: unary1, entries: 128, grid_size: [1, 1], t: 3, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x20000000]]}

graphs:
  reader_writer_graph:
    target_device: 0
    input_count: 2
    unary0: {type: datacopy, grid_loc: [0, 0], grid_size: [1, 1], inputs: [q0],     in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 3, mblock: [1, 1], ublock: [1, 1]}
    unary1: {type: datacopy, grid_loc: [1, 1], grid_size: [1, 1], inputs: [reader], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 3, mblock: [1, 1], ublock: [1, 1]}


programs:

  - write_read_cache:
      - param: [$p_cache_write, $p_cache_read, $p_inner_loop_count, $p_outer_loop_count, $p_inner_loop_wr_incr, $p_outer_loop_wr_incr, $p_inner_loop_rd_incr, $p_outer_loop_rd_incr]
      - staticvar: {$input_side_lrdptr: 0, $input_side_grdptr: 0}
      - var: {$v_cache_write: 0, $c_zero: 0, $c_one: 1, $c_microbatch_size: 2, $c_write_stride: 2, $c_read_stride: 2, $v_cache_read: 0}
      - varinst: [$v_cache_write, set, $p_cache_write]
      - varinst: [$v_cache_read, set, $p_cache_read]
      - loop: $p_outer_loop_count
      -   loop: $p_inner_loop_count
      -     execute: {graph_name: reader_writer_graph, queue_settings: {
              q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $input_side_lrdptr, rd_ptr_global: $input_side_grdptr},
              writer: {prologue: false, epilogue: false, zero: false, wr_ptr_global: $v_cache_write, rd_ptr_global: $c_zero, global_wrptr_autoinc: $c_write_stride},
              reader: {prologue: false, epilogue: false, zero: false, read_only: true, wr_ptr_global: $c_zero, rd_ptr_global: $v_cache_read, global_rdptr_autoinc: $c_read_stride}}}
      -     varinst: [$v_cache_write, incwrap, $p_inner_loop_wr_incr, 128]
      -     varinst: [$v_cache_read,  incwrap, $p_inner_loop_rd_incr, 128]
      -     varinst: [$input_side_lrdptr, incwrap, $c_microbatch_size, 256]
      -     varinst: [$input_side_grdptr, incwrap, $c_microbatch_size, 256]
      -   endloop
      -   varinst: [$v_cache_write, incwrap, $p_outer_loop_wr_incr, 128]
      -   varinst: [$v_cache_read,  incwrap, $p_outer_loop_rd_incr, 128]
      - endloop
