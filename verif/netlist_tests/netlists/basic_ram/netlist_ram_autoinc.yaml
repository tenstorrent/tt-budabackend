devices:
  arch: [grayskull, wormhole, wormhole_b0]

queues:
  q0        : {type: queue, input: HOST , entries: 2, grid_size: [2, 2], t: 4, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x11000000], [0, 0x11100000], [0, 0x11200000], [0, 0x11300000]]}
  r0        : {type: ram, input: unary0 , entries: 2, grid_size: [2, 2], t: 4, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x12000000], [0, 0x12100000], [0, 0x12200000], [0, 0x12300000]]}

graphs:
  test_graph:
    target_device: 0
    input_count: 2
    unary0: {type: sqrt, grid_loc: [0, 0], grid_size: [2, 2], inputs: [q0], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 4, mblock: [2, 2], ublock: [2, 2]}

programs:
  - program0:
      - var: [$q_rdptr0, $q_rdptr1, $c_num_loops, $c_incr, $c_zero]
      - varinst: [$c_num_loops, set, 1] # LOAD an 8 into $c_num_loops
      - varinst: [$c_incr, set, 1] # LOAD a  1 into $c_incr p
      - varinst: [$c_zero, set, 0] # LOAD a  1 into $c_incr p
      - loop: $c_num_loops
      - execute: {graph_name: test_graph, queue_settings: { 
          q0: {prologue: false, epilogue: false, zero: false, rd_ptr_global: $q_rdptr0, rd_ptr_local: $q_rdptr0},
          r0: {prologue: false, epilogue: false, zero: false, global_wrptr_autoinc: 1, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero}}}
      - varinst: [$q_rdptr0, incwrap, 2, 4]
      - endloop 

