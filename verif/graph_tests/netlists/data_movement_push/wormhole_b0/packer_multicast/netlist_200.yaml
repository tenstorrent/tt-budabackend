# test_config_id=3
devices:
  arch: wormhole_b0

queues:
  input0_dram:
    type: queue
    input: HOST
    entries: 1
    grid_size: [4, 1]
    t: 1
    mblock: [44, 56]
    ublock: [1, 3]
    df: Float16
    ublock_order: r
    target_device: 0
    loc: dram
    dram: [[1, 0x10000000], [1, 0x10ea9c20], [1, 0x11d53840], [1, 0x12bfd460]]

  input1_dram:
    type: queue
    input: HOST
    entries: 1
    grid_size: [1, 8]
    t: 44
    mblock: [21, 2]
    ublock: [2, 1]
    df: Float16
    ublock_order: r
    target_device: 0
    loc: dram
    dram: [[5, 0x10000000], [5, 0x10754e20], [5, 0x10ea9c40], [5, 0x115fea60], [5, 0x11d53880], [5, 0x124a86a0], [5, 0x12bfd4c0], [5, 0x133522e0]]

  output_dram:
    type: queue
    input: target_op0
    entries: 1
    grid_size: [1, 4]
    t: 44
    mblock: [16, 2]
    ublock: [1, 2]
    df: Float16
    ublock_order: r
    target_device: 0
    loc: dram
    dram: [[0, 0x10000000], [0, 0x10596020], [0, 0x10b2c040], [0, 0x110c2060]]

graphs:
  test_op:
    target_device: 0
    input_count: 1
    feeder0:
      type: datacopy
      grid_loc: [4, 7]
      grid_size: [4, 1]
      inputs: [input0_dram]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi4
      t: 44
      mblock: [4, 14]
      ublock: [1, 3]
      input_0_tms: [hslice: 4, vslice: 11]
    feeder1:
      type: datacopy
      grid_loc: [2, 0]
      grid_size: [2, 8]
      inputs: [input1_dram]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi4
      t: 44
      mblock: [21, 1]
      ublock: [1, 2]
    target_op0:
      type: matmul
      grid_loc: [0, 0]
      grid_size: [1, 4]
      inputs: [feeder0, feeder1]
      in_df: [Float16, Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 1
      math_fidelity: HiFi4
      attributes: {m_k: 21, u_kt: 2}
      t: 44
      mblock: [16, 2]
      ublock: [1, 2]
      untilize_output: false

programs:
  - program0:
    - var: [$c_microbatch_count, $c_zero]
    - staticvar: { $gptr_q0: 0, $lptr_q0: 0 }
    - varinst: [$c_microbatch_count, set, 1]
    - varinst: [$c_zero, set, 0]
    - loop: $c_microbatch_count #loop over number of microbatches that make a minibatch
    -   execute: {
          graph_name: test_op,
          queue_settings: {
               input0_dram: {
                prologue: false,
                epilogue: false,
                zero: false,
                rd_ptr_local: $lptr_q0,
                rd_ptr_global: $gptr_q0,
              },
              input1_dram: {
                prologue: false,
                epilogue: false,
                zero: false,
                rd_ptr_local: $lptr_q0,
                rd_ptr_global: $gptr_q0,
              }
          }
        }
    - endloop

test-config:
  test-args:
    microbatch_count: 1 # entries / input_count
    microbatch_size: 1 # input_count
    minibatch_count: 1 # host loop iterations