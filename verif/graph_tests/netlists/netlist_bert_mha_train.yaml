
devices:
  arch: grayskull

queues:

  # input
  input_0_mha_0_value:                                                                    {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x300051c0]]}
  input_1_mha_0_as_mask:                                                                  {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x3002c4c0]]}

  # output
  mha.output_mha_0_output.bias:                                                           {input: mha_0_output.bias, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: host, host: [0x0]}
  output_grad_input_0_mha_0_value:                                                        {input: bw_in0_input_0_mha_0_value_combine_add_1, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: host, host: [0x8020]}

  # parameter
  mha.bert.encoder.layer.0.attention.output.dense.bias:                                   {input: opt_in1_mha.bert.encoder.layer.0.attention.output.dense.bias_subtract_2, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30000840]]}
  mha.bert.encoder.layer.0.attention.self.value.bias:                                     {input: opt_in1_mha.bert.encoder.layer.0.attention.self.value.bias_subtract_2, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30003120]]}
  mha.bert.encoder.layer.0.attention.self.value.weight:                                   {input: opt_in0_mha.bert.encoder.layer.0.attention.self.value.weight_subtract_2, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x3000d3e0]]}
  mha.reciprocal_of_sqrt_of_head_size_0:                                                  {input: HOST, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30015e40]]}
  mha.bert.encoder.layer.0.attention.self.key.bias:                                       {input: opt_in1_mha.bert.encoder.layer.0.attention.self.key.bias_subtract_2, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30017700]]}
  mha.bert.encoder.layer.0.attention.self.key.weight:                                     {input: opt_in0_mha.bert.encoder.layer.0.attention.self.key.weight_subtract_2, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x300197a0]]}
  mha.bert.encoder.layer.0.attention.self.query.bias:                                     {input: opt_in1_mha.bert.encoder.layer.0.attention.self.query.bias_subtract_2, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30022200]]}
  mha.bert.encoder.layer.0.attention.self.query.weight:                                   {input: opt_in0_mha.bert.encoder.layer.0.attention.self.query.weight_subtract_2, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x300242a0]]}
  mha.bert.encoder.layer.0.attention.output.dense.weight:                                 {input: opt_in0_mha.bert.encoder.layer.0.attention.output.dense.weight_subtract_2, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30030e40]]}

  # constant
  lc.input_tensor.mha.bert.encoder.layer.0.attention.output.dense.bias_s_brcst_m2_1_0.0:  {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  lc.input_tensor.mha.bert.encoder.layer.0.attention.self.value.bias_s_brcst_m2_1_0.0:    {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x300028e0]]}
  lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_0_1.0:                 {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30015600]]}
  lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_0_2.0:                 {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30016680]]}
  lc.input_tensor.mha.bert.encoder.layer.0.attention.self.key.bias_s_brcst_m2_1_0.0:      {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30016ec0]]}
  lc.input_tensor.mha.bert.encoder.layer.0.attention.self.query.bias_s_brcst_m2_1_0.0:    {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x300219c0]]}
  lc.input_tensor.mha_0_as_softmax_sum.0:                                                 {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x3002e560]]}
  lc.input_tensor.mha_0_as_softmax_recip_s_brcst_m1_1_0.0:                                {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30030600]]}
  lc.input_tensor.bw_in1_mha_0_output.bias_reduce_sum_0.0:                                {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30041280]]}
  lc.input_tensor.mha_0_as_softmax_recip_s_brcst_m1_2_0.0:                                {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30041ac0]]}
  lc.input_tensor.bw_in1_mha_0_as_softmax_mult_reduce_sum_1.0:                            {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30042300]]}
  input_constant_mha_0_as_softmax_recip_1:                                                {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x300443a0]]}
  lc.input_tensor.bw_in0_mha_0_as_softmax_sum_nop_0_s_brcst_m1_0_0.0:                     {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30044be0]]}
  lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_1_1.0:                 {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30045420]]}
  lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_1_2.0:                 {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30045c60]]}
  lc.input_tensor.bw_in1_mha_0_query.bias_reduce_sum_0.0:                                 {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x300464a0]]}
  lc.input_tensor.bw_in1_mha_0_key.bias_reduce_sum_0.0:                                   {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30046ce0]]}
  lc.input_tensor.bw_in1_mha_0_value.bias_reduce_sum_0.0:                                 {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30047520]]}

  # epoch_to_epoch
  e2e_mha_0_ac_0:                                                                         {input: mha_0_ac, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [1, 1], ublock: [4, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[1, 0x3002aae0]]}
  e2e_mha_0_value.bias_0:                                                                 {input: mha_0_value.bias, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [4, 4], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[4, 0x30010440]]}
  e2e_mha_0_as_softmax_mult_0:                                                            {input: mha_0_as_softmax_mult, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [4, 4], ublock: [1, 1], df: Float16_b, ublock_order: c, target_device: 0, loc: dram, dram: [[0, 0x3005c3a0]]}
  e2e_mha_0_as_softmax_recip_0:                                                           {input: mha_0_as_softmax_recip, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [1, 1], ublock: [4, 1], df: Float16_b, ublock_order: c, target_device: 0, loc: dram, dram: [[3, 0x30000000]]}
  e2e_mha_0_as_softmax_exp_1:                                                             {input: mha_0_as_softmax_exp, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [2, 4], ublock: [2, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[2, 0x300020a0]]}
  e2e_mha_0_as_softmax_recip_2:                                                           {input: mha_0_as_softmax_recip, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [1, 1], ublock: [4, 1], df: Float16_b, ublock_order: c, target_device: 0, loc: dram, dram: [[5, 0x3000c360]]}
  e2e_mha_0_as_softmax_recip_1:                                                           {input: mha_0_as_softmax_recip, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [1, 1], ublock: [4, 1], df: Float16_b, ublock_order: c, target_device: 0, loc: dram, dram: [[4, 0x30018660]]}
  e2e_mha_0_as_softmax_exp_0:                                                             {input: mha_0_as_softmax_exp, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [2, 4], ublock: [2, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[1, 0x3000a2c0]]}
  e2e_mha_0_key.bias_0:                                                                   {input: mha_0_key.bias, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [4, 4], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[5, 0x30004140]]}
  e2e_mha_0_query.bias_0:                                                                 {input: mha_0_query.bias, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [4, 4], ublock: [1, 1], df: Float16_b, ublock_order: c, target_device: 0, loc: dram, dram: [[0, 0x30054180]]}

  # optimizer_parameter
  input_opt_mha.bert.encoder.layer.0.attention.output.dense.bias_0.lr:                    {input: HOST, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x3004ff80]]}
  input_opt_mha.bert.encoder.layer.0.attention.output.dense.weight_0.lr:                  {input: HOST, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x300507c0]]}
  input_opt_mha.bert.encoder.layer.0.attention.self.value.bias_0.lr:                      {input: HOST, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30051000]]}
  input_opt_mha.bert.encoder.layer.0.attention.self.value.weight_0.lr:                    {input: HOST, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30051840]]}
  input_opt_mha.bert.encoder.layer.0.attention.self.key.bias_0.lr:                        {input: HOST, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30052080]]}
  input_opt_mha.bert.encoder.layer.0.attention.self.key.weight_0.lr:                      {input: HOST, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x300528c0]]}
  input_opt_mha.bert.encoder.layer.0.attention.self.query.bias_0.lr:                      {input: HOST, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30053100]]}
  input_opt_mha.bert.encoder.layer.0.attention.self.query.weight_0.lr:                    {input: HOST, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30053940]]}

  # loss
  loss_mha.output_mha_0_output.bias:                                                      {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30039060]]}

  # grad_accumulator
  grad_acc_mha.bert.encoder.layer.0.attention.self.query.weight:                          {input: bw_in1_mha_0_query_matmul_1, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[4, 0x30000000]]}
  grad_acc_mha.bert.encoder.layer.0.attention.self.query.bias:                            {input: bw_in1_mha_0_query.bias_reduce_sum_0.lc1, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[5, 0x30000000]]}
  grad_acc_mha.bert.encoder.layer.0.attention.self.key.weight:                            {input: bw_in1_mha_0_key_matmul_1, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[1, 0x30000000]]}
  grad_acc_mha.bert.encoder.layer.0.attention.self.key.bias:                              {input: bw_in1_mha_0_key.bias_reduce_sum_0.lc1, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[2, 0x30000000]]}
  grad_acc_mha.bert.encoder.layer.0.attention.self.value.weight:                          {input: bw_in1_mha_0_value_matmul_1, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[4, 0x30008220]]}
  grad_acc_mha.bert.encoder.layer.0.attention.self.value.bias:                            {input: bw_in1_mha_0_value.bias_reduce_sum_0.lc1, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[5, 0x300020a0]]}
  grad_acc_mha.bert.encoder.layer.0.attention.output.dense.weight:                        {input: bw_in1_mha_0_output_matmul_1, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 1], ublock: [2, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30047d60]]}
  grad_acc_mha.bert.encoder.layer.0.attention.output.dense.bias:                          {input: bw_in1_mha_0_output.bias_reduce_sum_0.lc1, type: ram, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 4], df: Float16_b, target_device: 0, loc: dram, dram: [[1, 0x30008220]]}

graphs:
  fwd_0:
    target_device: 0
    input_count: 1
    mha.bert.encoder.layer.0.attention.output.dense.bias_s_brcst_m2_1_0.lc1: {type: matmul, grid_loc: [0, 0], grid_size: [1, 1], inputs: [lc.input_tensor.mha.bert.encoder.layer.0.attention.output.dense.bias_s_brcst_m2_1_0.0, mha.bert.encoder.layer.0.attention.output.dense.bias],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         attributes: {m_k: 1, u_kt: 1}}
    mha.bert.encoder.layer.0.attention.self.value.bias_s_brcst_m2_1_0.lc1: {type: matmul, grid_loc: [0, 1], grid_size: [1, 1], inputs: [lc.input_tensor.mha.bert.encoder.layer.0.attention.self.value.bias_s_brcst_m2_1_0.0, mha.bert.encoder.layer.0.attention.self.value.bias],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         attributes: {m_k: 1, u_kt: 1}}
    mha_0_value: {type: matmul, grid_loc: [0, 2], grid_size: [1, 1], inputs: [input_0_mha_0_value, mha.bert.encoder.layer.0.attention.self.value.weight],
         t: 1, mblock: [4, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         attributes: {m_k: 1, u_kt: 4}}
    mha_0_value.bias: {type: add, grid_loc: [0, 3], grid_size: [1, 1], inputs: [mha_0_value, mha.bert.encoder.layer.0.attention.self.value.bias_s_brcst_m2_1_0.lc1],
         t: 1, mblock: [4, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {r: 4}]}
    mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_0_1.lc1: {type: matmul, grid_loc: [0, 4], grid_size: [1, 1], inputs: [lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_0_1.0, mha.reciprocal_of_sqrt_of_head_size_0],
         t: 4, mblock: [1, 1], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}], input_0_tms: [broadcast: {z: 4}],
         attributes: {m_k: 1, u_kt: 1}}
    mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_0_2.lc1: {type: matmul, grid_loc: [0, 5], grid_size: [1, 1], inputs: [mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_0_1.lc1, lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_0_2.0],
         t: 4, mblock: [1, 1], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}],
         attributes: {m_k: 1, u_kt: 1}}
    mha.bert.encoder.layer.0.attention.self.key.bias_s_brcst_m2_1_0.lc1: {type: matmul, grid_loc: [0, 6], grid_size: [1, 1], inputs: [lc.input_tensor.mha.bert.encoder.layer.0.attention.self.key.bias_s_brcst_m2_1_0.0, mha.bert.encoder.layer.0.attention.self.key.bias],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         attributes: {m_k: 1, u_kt: 1}}
    mha_0_key: {type: matmul, grid_loc: [0, 7], grid_size: [1, 1], inputs: [input_0_mha_0_value, mha.bert.encoder.layer.0.attention.self.key.weight],
         t: 1, mblock: [4, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         attributes: {m_k: 1, u_kt: 4}}
    mha_0_key.bias: {type: add, grid_loc: [0, 8], grid_size: [1, 1], inputs: [mha_0_key, mha.bert.encoder.layer.0.attention.self.key.bias_s_brcst_m2_1_0.lc1],
         t: 1, mblock: [4, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {r: 4}]}
    mha.bert.encoder.layer.0.attention.self.query.bias_s_brcst_m2_1_0.lc1: {type: matmul, grid_loc: [0, 9], grid_size: [1, 1], inputs: [lc.input_tensor.mha.bert.encoder.layer.0.attention.self.query.bias_s_brcst_m2_1_0.0, mha.bert.encoder.layer.0.attention.self.query.bias],
         t: 1, mblock: [1, 2], ublock: [1, 2], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         attributes: {m_k: 1, u_kt: 1}}
    mha_0_query: {type: matmul, grid_loc: [0, 10], grid_size: [1, 1], inputs: [input_0_mha_0_value, mha.bert.encoder.layer.0.attention.self.query.weight],
         t: 1, mblock: [4, 2], ublock: [1, 2], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         attributes: {m_k: 1, u_kt: 4}}
    mha_0_query.bias: {type: add, grid_loc: [0, 11], grid_size: [1, 1], inputs: [mha_0_query, mha.bert.encoder.layer.0.attention.self.query.bias_s_brcst_m2_1_0.lc1],
         t: 1, mblock: [4, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {r: 4}]}
    mha_0_as: {type: matmul, grid_loc: [1, 0], grid_size: [1, 1], inputs: [mha_0_query.bias, mha_0_key.bias],
         t: 4, mblock: [4, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [hslice: 4, transpose], input_0_tms: [hslice: 4],
         attributes: {m_k: 1, u_kt: 1}}
    mha_0_as_div: {type: multiply, grid_loc: [1, 1], grid_size: [1, 1], inputs: [mha_0_as, mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_0_2.lc1],
         t: 4, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}, broadcast: {r: 4}]}
    mha_0_as_mask: {type: add, grid_loc: [1, 2], grid_size: [1, 1], inputs: [mha_0_as_div, input_1_mha_0_as_mask],
         t: 4, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}, broadcast: {r: 4}]}
    mha_0_as_softmax_exp: {type: exp, grid_loc: [1, 3], grid_size: [1, 1], inputs: [mha_0_as_mask],
         t: 4, mblock: [2, 4], ublock: [2, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    mha_0_as_softmax_sum.lc1: {type: matmul, grid_loc: [1, 4], grid_size: [1, 1], inputs: [mha_0_as_softmax_exp, lc.input_tensor.mha_0_as_softmax_sum.0],
         t: 4, mblock: [1, 1], ublock: [4, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {r: 4}, broadcast: {z: 4}],
         attributes: {m_k: 4, u_kt: 1}}
    mha_0_as_softmax_recip: {type: reciprocal, grid_loc: [1, 5], grid_size: [1, 1], inputs: [mha_0_as_softmax_sum.lc1],
         t: 4, mblock: [1, 1], ublock: [4, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    mha_0_as_softmax_recip_s_brcst_m1_1_0.lc1: {type: matmul, grid_loc: [1, 6], grid_size: [1, 1], inputs: [mha_0_as_softmax_recip, lc.input_tensor.mha_0_as_softmax_recip_s_brcst_m1_1_0.0],
         t: 4, mblock: [2, 1], ublock: [2, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}],
         attributes: {m_k: 1, u_kt: 1}}
    mha_0_as_softmax_mult: {type: multiply, grid_loc: [1, 7], grid_size: [1, 1], inputs: [mha_0_as_softmax_exp, mha_0_as_softmax_recip_s_brcst_m1_1_0.lc1],
         t: 4, mblock: [4, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}]}
    mha_0_ac: {type: matmul, grid_loc: [1, 8], grid_size: [1, 1], inputs: [mha_0_as_softmax_mult, mha_0_value.bias],
         t: 4, mblock: [1, 1], ublock: [4, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [hslice: 4],
         attributes: {m_k: 4, u_kt: 1}}
    mha_0_output: {type: matmul, grid_loc: [1, 9], grid_size: [1, 1], inputs: [mha_0_ac, mha.bert.encoder.layer.0.attention.output.dense.weight],
         t: 1, mblock: [4, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_0_tms: [hstack: 4],
         attributes: {m_k: 4, u_kt: 1}}
    mha_0_output.bias: {type: add, grid_loc: [1, 10], grid_size: [1, 1], inputs: [mha_0_output, mha.bert.encoder.layer.0.attention.output.dense.bias_s_brcst_m2_1_0.lc1], untilize_output: true,
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {r: 4}]}

  bwd_1:
    target_device: 0
    input_count: 1
    bw_in1_mha_0_output.bias_reduce_sum_0.lc1: {type: matmul, grid_loc: [0, 0], grid_size: [1, 1], inputs: [lc.input_tensor.bw_in1_mha_0_output.bias_reduce_sum_0.0, loss_mha.output_mha_0_output.bias], gradient_op: true,
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_0_tms: [broadcast: {c: 4}],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in0_mha_0_output_matmul_1: {type: matmul, grid_loc: [1, 2], grid_size: [1, 1], inputs: [loss_mha.output_mha_0_output.bias, mha.bert.encoder.layer.0.attention.output.dense.weight],
         t: 1, mblock: [4, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [transpose],
         attributes: {m_k: 1, u_kt: 4}}
    bw_in1_mha_0_output_matmul_1_transpose_nop: {type: nop, grid_loc: [1, 1], grid_size: [1, 1], inputs: [e2e_mha_0_ac_0],
         t: 1, mblock: [1, 2], ublock: [4, 2], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_0_tms: [hstack: 4, transpose]}
    bw_in1_mha_0_output_matmul_1: {type: matmul, grid_loc: [0, 1], grid_size: [1, 1], inputs: [bw_in1_mha_0_output_matmul_1_transpose_nop, loss_mha.output_mha_0_output.bias], gradient_op: true,
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         attributes: {m_k: 2, u_kt: 2}}
    bw_in0_mha_0_ac_matmul_1: {type: matmul, grid_loc: [0, 2], grid_size: [1, 1], inputs: [bw_in0_mha_0_output_matmul_1, e2e_mha_0_value.bias_0],
         t: 4, mblock: [2, 4], ublock: [2, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [hslice: 4, transpose], input_0_tms: [hslice: 4],
         attributes: {m_k: 1, u_kt: 1}}
    bw_in1_mha_0_ac_matmul_1_transpose_nop: {type: nop, grid_loc: [6, 0], grid_size: [1, 1], inputs: [e2e_mha_0_as_softmax_mult_0],
         t: 4, mblock: [4, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_0_tms: [transpose]}
    bw_in1_mha_0_ac_matmul_1: {type: matmul, grid_loc: [5, 0], grid_size: [1, 1], inputs: [bw_in1_mha_0_ac_matmul_1_transpose_nop, bw_in0_mha_0_output_matmul_1],
         t: 4, mblock: [2, 1], ublock: [2, 1], buf_size_mb: 8, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [hslice: 4],
         attributes: {m_k: 4, u_kt: 1}}
    mha_0_as_softmax_recip_s_brcst_m1_2_0.lc1: {type: matmul, grid_loc: [0, 3], grid_size: [1, 1], inputs: [e2e_mha_0_as_softmax_recip_0, lc.input_tensor.mha_0_as_softmax_recip_s_brcst_m1_2_0.0],
         t: 4, mblock: [2, 1], ublock: [2, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}],
         attributes: {m_k: 1, u_kt: 1}}
    bw_in0_mha_0_as_softmax_mult_multiply_0: {type: multiply, grid_loc: [1, 3], grid_size: [1, 1], inputs: [bw_in0_mha_0_ac_matmul_1, mha_0_as_softmax_recip_s_brcst_m1_2_0.lc1],
         t: 4, mblock: [2, 4], ublock: [2, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}]}
    bw_in1_mha_0_as_softmax_mult_multiply_0: {type: multiply, grid_loc: [2, 3], grid_size: [1, 1], inputs: [bw_in0_mha_0_ac_matmul_1, e2e_mha_0_as_softmax_exp_1],
         t: 4, mblock: [1, 2], ublock: [4, 2], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    bw_in1_mha_0_as_softmax_mult_reduce_sum_1.lc1: {type: matmul, grid_loc: [3, 3], grid_size: [1, 1], inputs: [bw_in1_mha_0_as_softmax_mult_multiply_0, lc.input_tensor.bw_in1_mha_0_as_softmax_mult_reduce_sum_1.0],
         t: 4, mblock: [1, 1], ublock: [4, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {r: 4}, broadcast: {z: 4}],
         attributes: {m_k: 2, u_kt: 2}}
    bw_in0_mha_0_as_softmax_recip_multiply_0: {type: multiply, grid_loc: [0, 4], grid_size: [1, 1], inputs: [e2e_mha_0_as_softmax_recip_1, e2e_mha_0_as_softmax_recip_2],
         t: 4, mblock: [1, 1], ublock: [4, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    bw_in0_mha_0_as_softmax_recip_multiply_2: {type: multiply, grid_loc: [1, 4], grid_size: [1, 1], inputs: [bw_in0_mha_0_as_softmax_recip_multiply_0, input_constant_mha_0_as_softmax_recip_1],
         t: 4, mblock: [1, 1], ublock: [4, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}, broadcast: {r: 4}]}
    bw_in0_mha_0_as_softmax_recip_multiply_3: {type: multiply, grid_loc: [0, 5], grid_size: [1, 1], inputs: [bw_in0_mha_0_as_softmax_recip_multiply_2, bw_in1_mha_0_as_softmax_mult_reduce_sum_1.lc1],
         t: 4, mblock: [1, 1], ublock: [4, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    bw_in0_mha_0_as_softmax_sum_nop_0_s_brcst_m1_0_0.lc1: {type: matmul, grid_loc: [0, 6], grid_size: [1, 1], inputs: [bw_in0_mha_0_as_softmax_recip_multiply_3, lc.input_tensor.bw_in0_mha_0_as_softmax_sum_nop_0_s_brcst_m1_0_0.0],
         t: 4, mblock: [2, 1], ublock: [2, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}],
         attributes: {m_k: 1, u_kt: 1}}
    bw_in0_mha_0_as_softmax_exp_combine_add_0: {type: add, grid_loc: [1, 6], grid_size: [1, 1], inputs: [bw_in0_mha_0_as_softmax_mult_multiply_0, bw_in0_mha_0_as_softmax_sum_nop_0_s_brcst_m1_0_0.lc1],
         t: 4, mblock: [2, 4], ublock: [2, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}]}
    bw_in0_mha_0_as_softmax_exp_multiply_0: {type: multiply, grid_loc: [0, 7], grid_size: [1, 1], inputs: [e2e_mha_0_as_softmax_exp_0, bw_in0_mha_0_as_softmax_exp_combine_add_0],
         t: 4, mblock: [4, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_1_1.lc1: {type: matmul, grid_loc: [0, 8], grid_size: [1, 1], inputs: [lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_1_1.0, mha.reciprocal_of_sqrt_of_head_size_0],
         t: 4, mblock: [1, 1], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}], input_0_tms: [broadcast: {z: 4}],
         attributes: {m_k: 1, u_kt: 1}}
    mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_1_2.lc1: {type: matmul, grid_loc: [1, 8], grid_size: [1, 1], inputs: [mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_1_1.lc1, lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_1_2.0],
         t: 4, mblock: [1, 1], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}],
         attributes: {m_k: 1, u_kt: 1}}
    bw_in0_mha_0_as_div_multiply_0: {type: multiply, grid_loc: [2, 8], grid_size: [1, 1], inputs: [bw_in0_mha_0_as_softmax_exp_multiply_0, mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_1_2.lc1],
         t: 4, mblock: [4, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}, broadcast: {r: 4}]}
    bw_in0_mha_0_as_matmul_1: {type: matmul, grid_loc: [0, 9], grid_size: [1, 1], inputs: [bw_in0_mha_0_as_div_multiply_0, e2e_mha_0_key.bias_0],
         t: 4, mblock: [2, 1], ublock: [2, 1], buf_size_mb: 8, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [hslice: 4],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in1_mha_0_as_matmul_1_transpose_nop: {type: nop, grid_loc: [1, 11], grid_size: [1, 1], inputs: [e2e_mha_0_query.bias_0],
         t: 4, mblock: [1, 4], ublock: [1, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_0_tms: [hslice: 4, transpose]}
    bw_in1_mha_0_as_matmul_1: {type: matmul, grid_loc: [0, 11], grid_size: [1, 1], inputs: [bw_in1_mha_0_as_matmul_1_transpose_nop, bw_in0_mha_0_as_div_multiply_0],
         t: 4, mblock: [1, 2], ublock: [1, 2], buf_size_mb: 8, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         attributes: {m_k: 4, u_kt: 1}}
    bw_in1_mha_0_query.bias_reduce_sum_0.lc1: {type: matmul, grid_loc: [1, 9], grid_size: [1, 1], inputs: [lc.input_tensor.bw_in1_mha_0_query.bias_reduce_sum_0.0, bw_in0_mha_0_as_matmul_1], gradient_op: true,
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [hstack: 4], input_0_tms: [broadcast: {c: 4}],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in0_mha_0_query_matmul_1: {type: matmul, grid_loc: [0, 10], grid_size: [1, 1], inputs: [bw_in0_mha_0_as_matmul_1, mha.bert.encoder.layer.0.attention.self.query.weight],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [transpose], input_0_tms: [hstack: 4],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in1_mha_0_query_matmul_1_transpose_nop: {type: nop, grid_loc: [2, 10], grid_size: [1, 1], inputs: [input_0_mha_0_value],
         t: 1, mblock: [2, 4], ublock: [2, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_0_tms: [transpose]}
    bw_in1_mha_0_query_matmul_1: {type: matmul, grid_loc: [1, 10], grid_size: [1, 1], inputs: [bw_in1_mha_0_query_matmul_1_transpose_nop, bw_in0_mha_0_as_matmul_1], gradient_op: true,
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [hstack: 4],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in1_mha_0_key.bias_reduce_sum_0.lc1: {type: matmul, grid_loc: [2, 11], grid_size: [1, 1], inputs: [lc.input_tensor.bw_in1_mha_0_key.bias_reduce_sum_0.0, bw_in1_mha_0_as_matmul_1], gradient_op: true,
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [transpose, hstack: 4], input_0_tms: [broadcast: {c: 4}],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in0_mha_0_key_matmul_1_transpose_nop: {type: nop, grid_loc: [2, 0], grid_size: [1, 1], inputs: [bw_in1_mha_0_as_matmul_1],
         t: 4, mblock: [1, 1], ublock: [4, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_0_tms: [transpose]}
    bw_in0_mha_0_key_matmul_1: {type: matmul, grid_loc: [1, 0], grid_size: [1, 1], inputs: [bw_in0_mha_0_key_matmul_1_transpose_nop, mha.bert.encoder.layer.0.attention.self.key.weight],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [transpose], input_0_tms: [hstack: 4],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in1_mha_0_key_matmul_1_transpose_nop: {type: nop, grid_loc: [4, 0], grid_size: [1, 1], inputs: [input_0_mha_0_value],
         t: 1, mblock: [4, 2], ublock: [1, 2], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_0_tms: [transpose]}
    bw_in1_mha_0_key_matmul_1: {type: matmul, grid_loc: [3, 0], grid_size: [1, 1], inputs: [bw_in1_mha_0_key_matmul_1_transpose_nop, bw_in1_mha_0_as_matmul_1], gradient_op: true,
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [transpose, hstack: 4],
         attributes: {m_k: 2, u_kt: 2}}
    bw_in1_mha_0_value.bias_reduce_sum_0.lc1: {type: matmul, grid_loc: [7, 0], grid_size: [1, 1], inputs: [lc.input_tensor.bw_in1_mha_0_value.bias_reduce_sum_0.0, bw_in1_mha_0_ac_matmul_1], gradient_op: true,
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [hstack: 4], input_0_tms: [broadcast: {c: 4}],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in0_mha_0_value_matmul_1: {type: matmul, grid_loc: [5, 1], grid_size: [1, 1], inputs: [bw_in1_mha_0_ac_matmul_1, mha.bert.encoder.layer.0.attention.self.value.weight],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [transpose], input_0_tms: [hstack: 4],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in1_mha_0_value_matmul_1_transpose_nop: {type: nop, grid_loc: [9, 1], grid_size: [1, 1], inputs: [input_0_mha_0_value],
         t: 1, mblock: [2, 4], ublock: [2, 1], buf_size_mb: 2, ublock_order: c, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_0_tms: [transpose]}
    bw_in1_mha_0_value_matmul_1: {type: matmul, grid_loc: [8, 1], grid_size: [1, 1], inputs: [bw_in1_mha_0_value_matmul_1_transpose_nop, bw_in1_mha_0_ac_matmul_1], gradient_op: true,
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [hstack: 4],
         attributes: {m_k: 4, u_kt: 1}}
    bw_in0_input_0_mha_0_value_combine_add_0: {type: add, grid_loc: [6, 1], grid_size: [1, 1], inputs: [bw_in0_mha_0_query_matmul_1, bw_in0_mha_0_key_matmul_1],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    bw_in0_input_0_mha_0_value_combine_add_1: {type: add, grid_loc: [7, 1], grid_size: [1, 1], inputs: [bw_in0_input_0_mha_0_value_combine_add_0, bw_in0_mha_0_value_matmul_1], untilize_output: true,
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}

  opt_2:
    target_device: 0
    input_count: 1
    opt_in1_mha.bert.encoder.layer.0.attention.output.dense.bias_multiply_1: {type: multiply, grid_loc: [0, 0], grid_size: [1, 1], inputs: [grad_acc_mha.bert.encoder.layer.0.attention.output.dense.bias, input_opt_mha.bert.encoder.layer.0.attention.output.dense.bias_0.lr],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}]}
    opt_in1_mha.bert.encoder.layer.0.attention.output.dense.bias_subtract_2: {type: subtract, grid_loc: [0, 1], grid_size: [1, 1], inputs: [mha.bert.encoder.layer.0.attention.output.dense.bias, opt_in1_mha.bert.encoder.layer.0.attention.output.dense.bias_multiply_1],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    opt_in0_mha.bert.encoder.layer.0.attention.output.dense.weight_multiply_1: {type: multiply, grid_loc: [1, 2], grid_size: [1, 1], inputs: [grad_acc_mha.bert.encoder.layer.0.attention.output.dense.weight, input_opt_mha.bert.encoder.layer.0.attention.output.dense.weight_0.lr],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}, broadcast: {r: 4}]}
    opt_in0_mha.bert.encoder.layer.0.attention.output.dense.weight_subtract_2: {type: subtract, grid_loc: [1, 3], grid_size: [1, 1], inputs: [mha.bert.encoder.layer.0.attention.output.dense.weight, opt_in0_mha.bert.encoder.layer.0.attention.output.dense.weight_multiply_1],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    opt_in1_mha.bert.encoder.layer.0.attention.self.value.bias_multiply_1: {type: multiply, grid_loc: [0, 2], grid_size: [1, 1], inputs: [grad_acc_mha.bert.encoder.layer.0.attention.self.value.bias, input_opt_mha.bert.encoder.layer.0.attention.self.value.bias_0.lr],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}]}
    opt_in1_mha.bert.encoder.layer.0.attention.self.value.bias_subtract_2: {type: subtract, grid_loc: [0, 3], grid_size: [1, 1], inputs: [mha.bert.encoder.layer.0.attention.self.value.bias, opt_in1_mha.bert.encoder.layer.0.attention.self.value.bias_multiply_1],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    opt_in0_mha.bert.encoder.layer.0.attention.self.value.weight_multiply_1: {type: multiply, grid_loc: [0, 4], grid_size: [1, 1], inputs: [grad_acc_mha.bert.encoder.layer.0.attention.self.value.weight, input_opt_mha.bert.encoder.layer.0.attention.self.value.weight_0.lr],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}, broadcast: {r: 4}]}
    opt_in0_mha.bert.encoder.layer.0.attention.self.value.weight_subtract_2: {type: subtract, grid_loc: [0, 5], grid_size: [1, 1], inputs: [mha.bert.encoder.layer.0.attention.self.value.weight, opt_in0_mha.bert.encoder.layer.0.attention.self.value.weight_multiply_1],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    opt_in1_mha.bert.encoder.layer.0.attention.self.key.bias_multiply_1: {type: multiply, grid_loc: [0, 6], grid_size: [1, 1], inputs: [grad_acc_mha.bert.encoder.layer.0.attention.self.key.bias, input_opt_mha.bert.encoder.layer.0.attention.self.key.bias_0.lr],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}]}
    opt_in1_mha.bert.encoder.layer.0.attention.self.key.bias_subtract_2: {type: subtract, grid_loc: [0, 7], grid_size: [1, 1], inputs: [mha.bert.encoder.layer.0.attention.self.key.bias, opt_in1_mha.bert.encoder.layer.0.attention.self.key.bias_multiply_1],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    opt_in0_mha.bert.encoder.layer.0.attention.self.key.weight_multiply_1: {type: multiply, grid_loc: [0, 8], grid_size: [1, 1], inputs: [grad_acc_mha.bert.encoder.layer.0.attention.self.key.weight, input_opt_mha.bert.encoder.layer.0.attention.self.key.weight_0.lr],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}, broadcast: {r: 4}]}
    opt_in0_mha.bert.encoder.layer.0.attention.self.key.weight_subtract_2: {type: subtract, grid_loc: [0, 9], grid_size: [1, 1], inputs: [mha.bert.encoder.layer.0.attention.self.key.weight, opt_in0_mha.bert.encoder.layer.0.attention.self.key.weight_multiply_1],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    opt_in1_mha.bert.encoder.layer.0.attention.self.query.bias_multiply_1: {type: multiply, grid_loc: [0, 10], grid_size: [1, 1], inputs: [grad_acc_mha.bert.encoder.layer.0.attention.self.query.bias, input_opt_mha.bert.encoder.layer.0.attention.self.query.bias_0.lr],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}]}
    opt_in1_mha.bert.encoder.layer.0.attention.self.query.bias_subtract_2: {type: subtract, grid_loc: [0, 11], grid_size: [1, 1], inputs: [mha.bert.encoder.layer.0.attention.self.query.bias, opt_in1_mha.bert.encoder.layer.0.attention.self.query.bias_multiply_1],
         t: 1, mblock: [1, 1], ublock: [1, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}
    opt_in0_mha.bert.encoder.layer.0.attention.self.query.weight_multiply_1: {type: multiply, grid_loc: [1, 0], grid_size: [1, 1], inputs: [grad_acc_mha.bert.encoder.layer.0.attention.self.query.weight, input_opt_mha.bert.encoder.layer.0.attention.self.query.weight_0.lr],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {c: 4}, broadcast: {r: 4}]}
    opt_in0_mha.bert.encoder.layer.0.attention.self.query.weight_subtract_2: {type: subtract, grid_loc: [1, 1], grid_size: [1, 1], inputs: [mha.bert.encoder.layer.0.attention.self.query.weight, opt_in0_mha.bert.encoder.layer.0.attention.self.query.weight_multiply_1],
         t: 1, mblock: [2, 1], ublock: [2, 4], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}


programs:
  - run_fwd:
    - param: [$p_loop_count]
    - var: {$c_microbatch_size: 1, $c_one: 1, $c_zero: 0}
    - staticvar: {$gptr_q0: 0, $lptr_q0: 0, $gptr_q0_shadow: 0, $gptr_q1: 0, $lptr_q1: 0}
    - varinst: [$gptr_q0, set, $gptr_q0_shadow]
    - loop: $p_loop_count
    -   execute: {graph_name: fwd_0, queue_settings: {
               lc.input_tensor.mha.bert.encoder.layer.0.attention.output.dense.bias_s_brcst_m2_1_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.output.dense.bias: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               lc.input_tensor.mha.bert.encoder.layer.0.attention.self.value.bias_s_brcst_m2_1_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.self.value.bias: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.self.value.weight: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_0_1.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               mha.reciprocal_of_sqrt_of_head_size_0: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_0_2.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.mha.bert.encoder.layer.0.attention.self.key.bias_s_brcst_m2_1_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.self.key.bias: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.self.key.weight: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               lc.input_tensor.mha.bert.encoder.layer.0.attention.self.query.bias_s_brcst_m2_1_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.self.query.bias: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.self.query.weight: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               lc.input_tensor.mha_0_as_softmax_sum.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.mha_0_as_softmax_recip_s_brcst_m1_1_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.output.dense.weight: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               input_0_mha_0_value: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q0, rd_ptr_global: $gptr_q0},
               input_1_mha_0_as_mask: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q1, rd_ptr_global: $gptr_q1}} }
    -   varinst: [$lptr_q0, incwrap, $c_microbatch_size, 2]
    -   varinst: [$gptr_q1, incwrap, $c_microbatch_size, 2]
    -   varinst: [$lptr_q1, incwrap, $c_microbatch_size, 2]
    -   varinst: [$gptr_q0_shadow, incwrap, $c_microbatch_size, 2]
    - endloop

  - run_bwd:
    - param: [$p_zero_grad, $p_loop_count]
    - var: {$v_zero_grad: 0, $c_microbatch_size: 1, $c_one: 1, $c_zero: 0}
    - staticvar: {$lptr_q0: 0, $gptr_q0: 0, $gptr_q2: 0, $lptr_q2: 0, $gptr_q1: 0, $lptr_q1: 0}
    - varinst: [$v_zero_grad, set, $p_zero_grad]
    - loop: $p_loop_count
    -   execute: {graph_name: bwd_1, queue_settings: {
               mha.bert.encoder.layer.0.attention.self.value.weight: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               mha.reciprocal_of_sqrt_of_head_size_0: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.self.key.weight: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.self.query.weight: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               mha.bert.encoder.layer.0.attention.output.dense.weight: {prologue: true, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               lc.input_tensor.bw_in1_mha_0_output.bias_reduce_sum_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.mha_0_as_softmax_recip_s_brcst_m1_2_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.bw_in1_mha_0_as_softmax_mult_reduce_sum_1.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               input_constant_mha_0_as_softmax_recip_1: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.bw_in0_mha_0_as_softmax_sum_nop_0_s_brcst_m1_0_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m2_1_1.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.mha.reciprocal_of_sqrt_of_head_size_0_s_brcst_m1_1_2.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.bw_in1_mha_0_query.bias_reduce_sum_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.bw_in1_mha_0_key.bias_reduce_sum_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               lc.input_tensor.bw_in1_mha_0_value.bias_reduce_sum_0.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero},
               input_0_mha_0_value: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q0, rd_ptr_global: $gptr_q0},
               loss_mha.output_mha_0_output.bias: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q1, rd_ptr_global: $gptr_q1},
               e2e_mha_0_value.bias_0: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               e2e_mha_0_key.bias_0: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               e2e_mha_0_query.bias_0: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               e2e_mha_0_as_softmax_exp_0: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               e2e_mha_0_as_softmax_exp_1: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               e2e_mha_0_as_softmax_recip_0: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               e2e_mha_0_as_softmax_recip_1: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               e2e_mha_0_as_softmax_recip_2: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               e2e_mha_0_as_softmax_mult_0: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               e2e_mha_0_ac_0: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q2, rd_ptr_global: $gptr_q2},
               grad_acc_mha.bert.encoder.layer.0.attention.self.query.weight: {prologue: true, epilogue: true, zero: $v_zero_grad, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               grad_acc_mha.bert.encoder.layer.0.attention.self.query.bias: {prologue: true, epilogue: true, zero: $v_zero_grad, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               grad_acc_mha.bert.encoder.layer.0.attention.self.key.weight: {prologue: true, epilogue: true, zero: $v_zero_grad, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               grad_acc_mha.bert.encoder.layer.0.attention.self.key.bias: {prologue: true, epilogue: true, zero: $v_zero_grad, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               grad_acc_mha.bert.encoder.layer.0.attention.self.value.weight: {prologue: true, epilogue: true, zero: $v_zero_grad, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               grad_acc_mha.bert.encoder.layer.0.attention.self.value.bias: {prologue: true, epilogue: true, zero: $v_zero_grad, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               grad_acc_mha.bert.encoder.layer.0.attention.output.dense.weight: {prologue: true, epilogue: true, zero: $v_zero_grad, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
               grad_acc_mha.bert.encoder.layer.0.attention.output.dense.bias: {prologue: true, epilogue: true, zero: $v_zero_grad, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero}} }
    -   varinst: [$lptr_q0, incwrap, $c_microbatch_size, 2]
    -   varinst: [$lptr_q2, incwrap, $c_microbatch_size, 2]
    -   varinst: [$gptr_q0, incwrap, $c_microbatch_size, 2]
    -   varinst: [$gptr_q1, incwrap, $c_microbatch_size, 2]
    -   varinst: [$lptr_q1, incwrap, $c_microbatch_size, 2]
    -   varinst: [$gptr_q2, incwrap, $c_microbatch_size, 2]
    -   varinst: [$v_zero_grad, set, 0]
    - endloop

  - run_opt:
    - var: {$c_one: 1, $c_zero: 0}
    - execute: {graph_name: opt_2, queue_settings: {
             mha.bert.encoder.layer.0.attention.output.dense.bias: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             mha.bert.encoder.layer.0.attention.self.value.bias: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             mha.bert.encoder.layer.0.attention.self.value.weight: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             mha.bert.encoder.layer.0.attention.self.key.bias: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             mha.bert.encoder.layer.0.attention.self.key.weight: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             mha.bert.encoder.layer.0.attention.self.query.bias: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             mha.bert.encoder.layer.0.attention.self.query.weight: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             mha.bert.encoder.layer.0.attention.output.dense.weight: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             grad_acc_mha.bert.encoder.layer.0.attention.self.query.weight: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             grad_acc_mha.bert.encoder.layer.0.attention.self.query.bias: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             grad_acc_mha.bert.encoder.layer.0.attention.self.key.weight: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             grad_acc_mha.bert.encoder.layer.0.attention.self.key.bias: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             grad_acc_mha.bert.encoder.layer.0.attention.self.value.weight: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             grad_acc_mha.bert.encoder.layer.0.attention.self.value.bias: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             grad_acc_mha.bert.encoder.layer.0.attention.output.dense.weight: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
             grad_acc_mha.bert.encoder.layer.0.attention.output.dense.bias: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero}} }


test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.90
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: 0.01
    uniform_upper_bound: 0.25
