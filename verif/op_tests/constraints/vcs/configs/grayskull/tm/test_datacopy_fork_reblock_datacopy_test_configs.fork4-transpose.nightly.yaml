#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x3be8a440], [6, 0x3be8d8e0], [3, 0x3be90d80], [7, 0x3be94220], [6, 0x3be976c0], [7, 0x3be9ab60], [6, 0x3be9e000], [2, 0x3bea14a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3c2f2620]]'
  output1_dram_buffers: '[[4, 0x3c5bae40]]'
  output2_dram_buffers: '[[4, 0x3f58e560], [6, 0x3f594e80], [3, 0x3f59b7a0], [7, 0x3f5a20c0]]'
  output3_dram_buffers: '[[4, 0x3f5c33a0], [6, 0x3f5c6840], [3, 0x3f5c9ce0], [7, 0x3f5cd180], [6, 0x3f5d0620], [7, 0x3f5d3ac0], [6, 0x3f5d6f60], [2, 0x3f5da400]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 8
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 8
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 3
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x3e704720], [0, 0x3e706a40], [3, 0x3e708d60], [6, 0x3e70b080], [3, 0x3e70d3a0], [1, 0x3e70f6c0], [2, 0x3e7119e0], [2, 0x3e713d00], [2, 0x3e716020], [1, 0x3e718340], [0, 0x3e71a660], [6, 0x3e71c980], [5, 0x3e71eca0], [3, 0x3e720fc0], [4, 0x3e7232e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3f37e780], [0, 0x3f3896a0], [3, 0x3f3945c0]]'
  output1_dram_buffers: '[[4, 0x3f3d26c0], [0, 0x3f3dd5e0], [3, 0x3f3e8500]]'
  output2_dram_buffers: '[[4, 0x3f41cd60], [0, 0x3f422500], [3, 0x3f427ca0], [6, 0x3f42d440], [3, 0x3f432be0], [1, 0x3f438380]]'
  output3_dram_buffers: '[[4, 0x3faeb940], [0, 0x3faf2260], [3, 0x3faf8b80], [6, 0x3faff4a0], [3, 0x3fb05dc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 10
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 10
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 10
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 5
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 1
  output3_ub_r: 3
  output3_ub_c: 2
  op3_grid_size_c: 5
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: GRAYSKULL
  entries: 80
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 4
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x311f7220], [3, 0x3133c240], [2, 0x31481260], [1, 0x315c6280], [2, 0x3170b2a0], [4, 0x318502c0], [4, 0x319952e0], [6, 0x31ada300], [6, 0x31c1f320], [1, 0x31d64340], [0, 0x31ea9360], [3, 0x31fee380], [2, 0x321333a0], [4, 0x322783c0], [4, 0x323bd3e0], [2, 0x32502400]]'
  target_device: 0
  input_count: 20
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x33333760]]'
  output1_dram_buffers: '[[1, 0x35005700]]'
  output2_dram_buffers: '[[1, 0x3685f240]]'
  output3_dram_buffers: '[[1, 0x3e52e220]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 2
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 4
  op0_mb_r: 1
  op0_mb_c: 16
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 2
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 4
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 2
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 4
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 2
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 4
  op3_mb_r: 2
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 160
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: GRAYSKULL
  entries: 20
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 24
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[6, 0x30b73f60], [1, 0x30e4f380], [0, 0x3112a7a0], [7, 0x31405bc0], [1, 0x316e0fe0], [1, 0x319bc400], [4, 0x31c97820], [0, 0x31f72c40], [5, 0x3224e060], [1, 0x32529480], [0, 0x328048a0], [1, 0x32adfcc0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x32de1d20]]'
  output1_dram_buffers: '[[6, 0x35046b60]]'
  output2_dram_buffers: '[[6, 0x37f19200]]'
  output3_dram_buffers: '[[6, 0x3ab56e40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 6
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 24
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 6
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 24
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 24
  output2_mb_r: 6
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 24
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 6
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 24
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 3
  op1_loc_c: 7
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x3c9f8e20], [6, 0x3ca01a40], [5, 0x3ca0a660], [5, 0x3ca13280], [1, 0x3ca1bea0], [3, 0x3ca24ac0], [2, 0x3ca2d6e0], [5, 0x3ca36300], [4, 0x3ca3ef20], [1, 0x3ca47b40], [1, 0x3ca50760], [2, 0x3ca59380], [3, 0x3ca61fa0], [5, 0x3ca6abc0], [0, 0x3ca737e0], [0, 0x3ca7c400], [4, 0x3ca85020], [0, 0x3ca8dc40], [3, 0x3ca96860], [0, 0x3ca9f480], [7, 0x3caa80a0], [5, 0x3cab0cc0], [0, 0x3cab98e0], [7, 0x3cac2500], [6, 0x3cacb120], [4, 0x3cad3d40], [4, 0x3cadc960], [1, 0x3cae5580], [5, 0x3caee1a0], [2, 0x3caf6dc0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3ccd4020], [6, 0x3cd08840], [5, 0x3cd3d060], [5, 0x3cd71880], [1, 0x3cda60a0]]'
  output1_dram_buffers: '[[4, 0x3ce336a0], [6, 0x3ce67ec0], [5, 0x3ce9c6e0], [5, 0x3ced0f00], [1, 0x3cf05720]]'
  output2_dram_buffers: '[[4, 0x3cf7ffc0], [6, 0x3cf917e0], [5, 0x3cfa3000], [5, 0x3cfb4820], [1, 0x3cfc6040], [3, 0x3cfd7860], [2, 0x3cfe9080], [5, 0x3cffa8a0], [4, 0x3d00c0c0], [1, 0x3d01d8e0], [1, 0x3d02f100], [2, 0x3d040920], [3, 0x3d052140], [5, 0x3d063960], [0, 0x3d075180]]'
  output3_dram_buffers: '[[4, 0x3f06ea60], [6, 0x3f0a3280], [5, 0x3f0d7aa0], [5, 0x3f10c2c0], [1, 0x3f140ae0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 5
  output0_t: 2
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 5
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 3
  output2_grid_size_r: 5
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 5
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 5
  output3_t: 2
  output3_mb_r: 2
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=5
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=5
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=5
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=5
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 37
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x3667ffe0], [7, 0x367aca00], [2, 0x368d9420], [4, 0x36a05e40], [1, 0x36b32860], [3, 0x36c5f280], [4, 0x36d8bca0], [1, 0x36eb86c0], [2, 0x36fe50e0], [4, 0x37111b00], [1, 0x3723e520], [1, 0x3736af40], [7, 0x37497960], [3, 0x375c4380], [3, 0x376f0da0], [5, 0x3781d7c0], [7, 0x3794a1e0], [1, 0x37a76c00], [3, 0x37ba3620], [5, 0x37cd0040], [0, 0x37dfca60], [0, 0x37f29480], [0, 0x38055ea0], [1, 0x381828c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x389cda40]]'
  output1_dram_buffers: '[[2, 0x3a907880]]'
  output2_dram_buffers: '[[2, 0x3c6bf7e0]]'
  output3_dram_buffers: '[[2, 0x3e361c80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 37
  output0_mb_r: 24
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 37
  op0_mb_r: 2
  op0_mb_c: 4
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 37
  output1_mb_r: 24
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 37
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 37
  output2_mb_r: 24
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 37
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 37
  output3_mb_r: 24
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 37
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=6
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 17
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x339eaae0], [0, 0x33a74d00], [1, 0x33afef20], [6, 0x33b89140], [6, 0x33c13360], [4, 0x33c9d580], [5, 0x33d277a0], [2, 0x33db19c0], [0, 0x33e3bbe0], [5, 0x33ec5e00], [7, 0x33f50020], [3, 0x33fda240], [2, 0x34064460], [7, 0x340ee680], [2, 0x341788a0], [1, 0x34202ac0], [1, 0x3428cce0], [3, 0x34316f00], [5, 0x343a1120], [3, 0x3442b340], [0, 0x344b5560], [3, 0x3453f780], [2, 0x345c99a0], [7, 0x34653bc0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x347408a0]]'
  output1_dram_buffers: '[[5, 0x35442b60]]'
  output2_dram_buffers: '[[5, 0x36326780]]'
  output3_dram_buffers: '[[5, 0x3ce905a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 12
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 17
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 17
  output1_mb_r: 12
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 17
  op1_mb_r: 2
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 17
  output2_mb_r: 12
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 17
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 17
  output3_mb_r: 12
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 17
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=7
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 6
  op0_loc_r: 3
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x3857cf20], [0, 0x385e5f40], [6, 0x3864ef60], [7, 0x386b7f80], [5, 0x38720fa0], [4, 0x38789fc0], [7, 0x387f2fe0], [1, 0x3885c000], [6, 0x388c5020], [5, 0x3892e040]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x39c29800], [0, 0x39cfb820], [6, 0x39dcd840], [7, 0x39e9f860], [5, 0x39f71880]]'
  output1_dram_buffers: '[[6, 0x3a255280], [0, 0x3a3272a0], [6, 0x3a3f92c0], [7, 0x3a4cb2e0], [5, 0x3a59d300]]'
  output2_dram_buffers: '[[6, 0x3ab5b140], [0, 0x3ac0a160], [6, 0x3acb9180], [7, 0x3ad681a0], [5, 0x3ae171c0], [4, 0x3aec61e0]]'
  output3_dram_buffers: '[[6, 0x3cbe2520], [0, 0x3cc65940], [6, 0x3cce8d60], [7, 0x3cd6c180], [5, 0x3cdef5a0], [4, 0x3ce729c0], [7, 0x3cef5de0], [1, 0x3cf79200]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 5
  output0_t: 1
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 1
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 5
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 6
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 6
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 3
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 10
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 10
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 1
  output3_mb_r: 5
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 5
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=5
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=8
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[7, 0x3312b580], [6, 0x33182da0], [3, 0x331da5c0], [6, 0x33231de0], [7, 0x33289600], [2, 0x332e0e20], [7, 0x33338640], [6, 0x3338fe60], [3, 0x333e7680], [6, 0x3343eea0], [2, 0x334966c0], [2, 0x334edee0], [5, 0x33545700], [6, 0x3359cf20], [5, 0x335f4740]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 5
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x33d42d20], [6, 0x33e49540], [3, 0x33f4fd60], [6, 0x34056580], [7, 0x3415cda0]]'
  output1_dram_buffers: '[[7, 0x3878e040], [6, 0x38894860], [3, 0x3899b080], [6, 0x38aa18a0], [7, 0x38ba80c0]]'
  output2_dram_buffers: '[[7, 0x3c65a7a0], [6, 0x3c7353c0], [3, 0x3c80ffe0], [6, 0x3c8eac00], [7, 0x3c9c5820], [2, 0x3caa0440]]'
  output3_dram_buffers: '[[7, 0x3f74c9e0], [6, 0x3f78e400], [3, 0x3f7cfe20], [6, 0x3f811840], [7, 0x3f853260], [2, 0x3f894c80], [7, 0x3f8d66a0], [6, 0x3f9180c0], [3, 0x3f959ae0], [6, 0x3f99b500], [2, 0x3f9dcf20], [2, 0x3fa1e940], [5, 0x3fa60360], [6, 0x3faa1d80], [5, 0x3fae37a0], [2, 0x3fb251c0], [4, 0x3fb66be0], [1, 0x3fba8600], [6, 0x3fbea020], [5, 0x3fc2ba40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 5
  output0_t: 2
  output0_mb_r: 6
  output0_mb_c: 5
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 2
  op0_mb_r: 6
  op0_mb_c: 5
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 5
  output1_t: 2
  output1_mb_r: 12
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 2
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 2
  output2_mb_r: 5
  output2_mb_c: 5
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 2
  op2_mb_r: 5
  op2_mb_c: 5
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 5
  output3_grid_size_r: 4
  output3_t: 2
  output3_mb_r: 15
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 5
  op3_grid_size_r: 4
  op3_t: 2
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=5
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=9
- device: GRAYSKULL
  entries: 28
  op0_loc_c: 8
  op0_loc_r: 6
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 17
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x36df3f20], [0, 0x36fd3ac0], [6, 0x371b3660], [6, 0x37393200], [6, 0x37572da0], [1, 0x37752940], [7, 0x379324e0], [5, 0x37b12080]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x37d21b80]]'
  output1_dram_buffers: '[[0, 0x38c7bec0]]'
  output2_dram_buffers: '[[0, 0x3a554160]]'
  output3_dram_buffers: '[[0, 0x3bfb6b20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 17
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 17
  output1_mb_r: 8
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 17
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 17
  output2_mb_r: 8
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 17
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 17
  output3_mb_r: 8
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 17
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=10
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x31d05300], [2, 0x31d0bc20], [7, 0x31d12540], [4, 0x31d18e60], [6, 0x31d1f780], [4, 0x31d260a0], [7, 0x31d2c9c0], [0, 0x31d332e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 3
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3813fe60], [2, 0x38151680], [7, 0x38162ea0]]'
  output1_dram_buffers: '[[1, 0x38c415c0], [2, 0x38c5b9e0]]'
  output2_dram_buffers: '[[1, 0x38dbac40], [2, 0x38dc7e60], [7, 0x38dd5080], [4, 0x38de22a0]]'
  output3_dram_buffers: '[[1, 0x3ab7a820], [2, 0x3ab94c40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 2
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 8
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 4
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 1
  output2_ub_r: 3
  output2_ub_c: 2
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 3
  output3_mb_c: 2
  output3_ub_r: 2
  output3_ub_c: 2
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=11
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 5
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 13
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x379142e0], [5, 0x37c61300], [2, 0x37fae320]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3b22d9c0]]'
  output1_dram_buffers: '[[1, 0x3de2e340]]'
  output2_dram_buffers: '[[1, 0x3e9e4bc0]]'
  output3_dram_buffers: '[[1, 0x3f482900]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 3
  output0_mb_c: 26
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 13
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 3
  output1_mb_c: 26
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 13
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 3
  output2_mb_c: 26
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 13
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 3
  output3_mb_c: 26
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 13
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=12
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x3d1aa8a0], [5, 0x3d1df0c0], [4, 0x3d2138e0], [7, 0x3d248100], [6, 0x3d27c920], [6, 0x3d2b1140], [7, 0x3d2e5960], [7, 0x3d31a180], [1, 0x3d34e9a0], [2, 0x3d3831c0], [7, 0x3d3b79e0], [5, 0x3d3ec200], [4, 0x3d420a20], [7, 0x3d455240], [7, 0x3d489a60], [0, 0x3d4be280], [7, 0x3d4f2aa0], [1, 0x3d5272c0], [1, 0x3d55bae0], [5, 0x3d590300], [0, 0x3d5c4b20], [0, 0x3d5f9340], [6, 0x3d62db60], [4, 0x3d662380], [1, 0x3d696ba0], [5, 0x3d6cb3c0], [6, 0x3d6ffbe0], [2, 0x3d734400], [2, 0x3d768c20], [1, 0x3d79d440], [3, 0x3d7d1c60], [7, 0x3d806480]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3dc5ad80], [5, 0x3dce6da0], [4, 0x3dd72dc0], [7, 0x3ddfede0], [6, 0x3de8ae00], [6, 0x3df16e20], [7, 0x3dfa2e40], [7, 0x3e02ee60], [1, 0x3e0bae80], [2, 0x3e146ea0], [7, 0x3e1d2ec0], [5, 0x3e25eee0]]'
  output1_dram_buffers: '[[1, 0x3e417580], [5, 0x3e4e95a0], [4, 0x3e5bb5c0], [7, 0x3e68d5e0], [6, 0x3e75f600], [6, 0x3e831620], [7, 0x3e903640], [7, 0x3e9d5660]]'
  output2_dram_buffers: '[[1, 0x3eb1aac0], [5, 0x3eb83ae0], [4, 0x3ebecb00], [7, 0x3ec55b20], [6, 0x3ecbeb40], [6, 0x3ed27b60], [7, 0x3ed90b80], [7, 0x3edf9ba0], [1, 0x3ee62bc0], [2, 0x3eecbbe0], [7, 0x3ef34c00], [5, 0x3ef9dc20], [4, 0x3f006c40], [7, 0x3f06fc60], [7, 0x3f0d8c80], [0, 0x3f141ca0]]'
  output3_dram_buffers: '[[1, 0x3f3a9c20], [5, 0x3f47bc40], [4, 0x3f54dc60], [7, 0x3f61fc80], [6, 0x3f6f1ca0], [6, 0x3f7c3cc0], [7, 0x3f895ce0], [7, 0x3f967d00]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 3
  output0_t: 2
  output0_mb_r: 4
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 2
  op0_grid_size_c: 4
  op0_grid_size_r: 3
  op0_t: 2
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 4
  output1_ub_r: 3
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 4
  op1_ub_r: 3
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 8
  output2_t: 2
  output2_mb_r: 3
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 4
  op2_grid_size_c: 2
  op2_grid_size_r: 8
  op2_t: 2
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 8
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 8
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=13
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 1
  op0_loc_r: 5
  op1_loc_c: 2
  op1_loc_r: 1
  op2_loc_c: 4
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 44
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x300e8c60], [7, 0x30949c80], [2, 0x311aaca0], [0, 0x31a0bcc0], [5, 0x3226cce0], [7, 0x32acdd00]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x33340f60]]'
  output1_dram_buffers: '[[0, 0x365adbe0]]'
  output2_dram_buffers: '[[0, 0x3982b840]]'
  output3_dram_buffers: '[[0, 0x3cd94f60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 44
  output0_mb_r: 6
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 44
  op0_mb_r: 2
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 44
  output1_mb_r: 6
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 44
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 44
  output2_mb_r: 6
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 6
  op2_grid_size_r: 1
  op2_t: 44
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 6
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 44
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 23
  input_mb_r: 10
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x302e14c0], [6, 0x318c78e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3317cb80]]'
  output1_dram_buffers: '[[2, 0x35d7cca0]]'
  output2_dram_buffers: '[[2, 0x3a1bc300]]'
  output3_dram_buffers: '[[2, 0x3d152960]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 23
  output0_mb_r: 24
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 23
  op0_mb_r: 12
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 23
  output1_mb_r: 24
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 23
  op1_mb_r: 6
  op1_mb_c: 5
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 23
  output2_mb_r: 24
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 23
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 23
  output3_mb_r: 24
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 5
  op3_grid_size_r: 1
  op3_t: 23
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=5
# reblock_tm_fork_c_factor_int[3]=1
#Test id=15
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 6
  op2_loc_c: 7
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 4
  input_mb_r: 15
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x3075c9e0], [2, 0x312c9a00], [1, 0x31e36a20], [4, 0x329a3a40]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x339eec40]]'
  output1_dram_buffers: '[[3, 0x369889a0]]'
  output2_dram_buffers: '[[3, 0x39f1b3e0]]'
  output3_dram_buffers: '[[3, 0x3d102f40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 2
  output0_mb_c: 240
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 4
  op0_mb_r: 1
  op0_mb_c: 16
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 2
  output1_mb_c: 240
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 4
  op1_mb_r: 1
  op1_mb_c: 15
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 2
  output2_mb_c: 240
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 2
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 2
  output3_mb_c: 240
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 4
  op3_mb_r: 1
  op3_mb_c: 15
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=16
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x3634ddc0], [0, 0x36358ce0], [5, 0x36363c00], [7, 0x3636eb20], [5, 0x36379a40], [6, 0x36384960], [5, 0x3638f880], [6, 0x3639a7a0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3896aae0], [0, 0x38996700]]'
  output1_dram_buffers: '[[4, 0x38ad10c0], [0, 0x38adbfe0], [5, 0x38ae6f00], [7, 0x38af1e20], [5, 0x38afcd40], [6, 0x38b07c60], [5, 0x38b12b80], [6, 0x38b1daa0]]'
  output2_dram_buffers: '[[4, 0x38f6a000], [0, 0x38f95c20]]'
  output3_dram_buffers: '[[4, 0x3d31dea0], [0, 0x3d3224c0], [5, 0x3d326ae0], [7, 0x3d32b100], [5, 0x3d32f720], [6, 0x3d333d40], [5, 0x3d338360], [6, 0x3d33c980], [4, 0x3d340fa0], [7, 0x3d3455c0], [5, 0x3d349be0], [0, 0x3d34e200], [0, 0x3d352820], [4, 0x3d356e40], [2, 0x3d35b460], [0, 0x3d35fa80], [3, 0x3d3640a0], [3, 0x3d3686c0], [7, 0x3d36cce0], [6, 0x3d371300]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 4
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 4
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 5
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 5
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 5
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=17
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 8
  op0_loc_r: 4
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x369db9e0], [2, 0x369f5e00], [3, 0x36a10220], [1, 0x36a2a640], [1, 0x36a44a60], [7, 0x36a5ee80], [5, 0x36a792a0], [5, 0x36a936c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x36fe3e00]]'
  output1_dram_buffers: '[[3, 0x37370fe0]]'
  output2_dram_buffers: '[[3, 0x3a5850e0], [2, 0x3a5ee100]]'
  output3_dram_buffers: '[[3, 0x3ea13c00], [2, 0x3ea48420], [3, 0x3ea7cc40], [1, 0x3eab1460]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 3
  output2_mb_c: 1
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 2
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 2
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=18
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 4
  op1_loc_c: 9
  op1_loc_r: 5
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x31243ca0], [5, 0x312482c0], [0, 0x3124c8e0], [5, 0x31250f00], [5, 0x31255520], [1, 0x31259b40], [3, 0x3125e160], [0, 0x31262780], [3, 0x31266da0], [7, 0x3126b3c0], [6, 0x3126f9e0], [7, 0x31274000], [7, 0x31278620], [5, 0x3127cc40], [1, 0x31281260], [4, 0x31285880], [2, 0x31289ea0], [2, 0x3128e4c0], [4, 0x31292ae0], [7, 0x31297100], [3, 0x3129b720], [6, 0x3129fd40], [3, 0x312a4360], [1, 0x312a8980], [3, 0x312acfa0], [1, 0x312b15c0], [2, 0x312b5be0], [3, 0x312ba200]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x312e70c0], [5, 0x31305ae0], [0, 0x31324500], [5, 0x31342f20]]'
  output1_dram_buffers: '[[2, 0x3186ee20], [5, 0x318ac240]]'
  output2_dram_buffers: '[[2, 0x330c0820], [5, 0x330fdc40]]'
  output3_dram_buffers: '[[2, 0x3fa03660], [5, 0x3fa22080], [0, 0x3fa40aa0], [5, 0x3fa5f4c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 7
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 7
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 7
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 7
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 7
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x35126780], [2, 0x3512f3a0], [3, 0x35137fc0], [5, 0x35140be0], [3, 0x35149800], [5, 0x35152420], [4, 0x3515b040], [1, 0x35163c60]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3532c4a0]]'
  output1_dram_buffers: '[[2, 0x35a59260], [2, 0x35a7c280]]'
  output2_dram_buffers: '[[2, 0x38598800]]'
  output3_dram_buffers: '[[2, 0x3dc27b60], [2, 0x3dc30780], [3, 0x3dc393a0], [5, 0x3dc41fc0], [3, 0x3dc4abe0], [5, 0x3dc53800], [4, 0x3dc5c420], [1, 0x3dc65040]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 4
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 4
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 4
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=20
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x3a712b60], [0, 0x3a717180], [2, 0x3a71b7a0], [6, 0x3a71fdc0], [4, 0x3a7243e0], [4, 0x3a728a00], [2, 0x3a72d020], [1, 0x3a731640], [3, 0x3a735c60], [2, 0x3a73a280], [3, 0x3a73e8a0], [5, 0x3a742ec0], [4, 0x3a7474e0], [1, 0x3a74bb00], [4, 0x3a750120], [4, 0x3a754740], [3, 0x3a758d60], [4, 0x3a75d380], [2, 0x3a7619a0], [0, 0x3a765fc0], [4, 0x3a76a5e0], [2, 0x3a76ec00], [7, 0x3a773220], [3, 0x3a777840], [5, 0x3a77be60], [3, 0x3a780480], [3, 0x3a784aa0], [1, 0x3a7890c0], [3, 0x3a78d6e0], [7, 0x3a791d00], [7, 0x3a796320], [7, 0x3a79a940], [4, 0x3a79ef60], [5, 0x3a7a3580], [2, 0x3a7a7ba0], [5, 0x3a7ac1c0], [1, 0x3a7b07e0], [3, 0x3a7b4e00], [7, 0x3a7b9420], [3, 0x3a7bda40], [2, 0x3a7c2060], [0, 0x3a7c6680], [6, 0x3a7caca0], [2, 0x3a7cf2c0], [5, 0x3a7d38e0], [6, 0x3a7d7f00], [3, 0x3a7dc520], [2, 0x3a7e0b40], [4, 0x3a7e5160], [6, 0x3a7e9780], [5, 0x3a7edda0], [7, 0x3a7f23c0], [1, 0x3a7f69e0], [5, 0x3a7fb000], [4, 0x3a7ff620], [2, 0x3a803c40]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3d027f60], [0, 0x3d046980], [2, 0x3d0653a0], [6, 0x3d083dc0], [4, 0x3d0a27e0], [4, 0x3d0c1200], [2, 0x3d0dfc20], [1, 0x3d0fe640]]'
  output1_dram_buffers: '[[2, 0x3da2fe00], [0, 0x3da6d220], [2, 0x3daaa640], [6, 0x3dae7a60]]'
  output2_dram_buffers: '[[2, 0x3dc18b60], [0, 0x3dc37580], [2, 0x3dc55fa0], [6, 0x3dc749c0], [4, 0x3dc933e0], [4, 0x3dcb1e00], [2, 0x3dcd0820], [1, 0x3dcef240]]'
  output3_dram_buffers: '[[2, 0x3ef02f40], [0, 0x3ef40360], [2, 0x3ef7d780], [6, 0x3efbaba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 7
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 8
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 7
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=21
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 2
  op0_loc_r: 7
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 9
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 6
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x340afde0], [7, 0x3438b200], [6, 0x34666620], [7, 0x34941a40]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x34d9d680]]'
  output1_dram_buffers: '[[5, 0x359b8bc0]]'
  output2_dram_buffers: '[[5, 0x36e32120]]'
  output3_dram_buffers: '[[5, 0x3a052180]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 2
  output0_mb_c: 60
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 5
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 2
  op0_mb_c: 12
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 2
  output1_mb_c: 60
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 60
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 60
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=22
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 6
  op0_loc_r: 5
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 44
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x31096b60], [1, 0x311fc380], [3, 0x31361ba0], [4, 0x314c73c0], [3, 0x3162cbe0], [2, 0x31792400], [6, 0x318f7c20], [2, 0x31a5d440], [0, 0x31bc2c60], [5, 0x31d28480], [1, 0x31e8dca0], [2, 0x31ff34c0], [2, 0x32158ce0], [3, 0x322be500], [5, 0x32423d20], [5, 0x32589540], [5, 0x326eed60], [3, 0x32854580], [2, 0x329b9da0], [4, 0x32b1f5c0], [3, 0x32c84de0], [4, 0x32dea600], [6, 0x32f4fe20], [2, 0x330b5640]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33b88820]]'
  output1_dram_buffers: '[[3, 0x377c8360]]'
  output2_dram_buffers: '[[3, 0x3a9ccae0]]'
  output3_dram_buffers: '[[3, 0x3da73f20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 44
  output0_mb_r: 6
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 44
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 44
  output1_mb_r: 6
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 44
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 44
  output2_mb_r: 6
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 44
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 6
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 44
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=23
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x3dea7a80], [7, 0x3deac0a0], [0, 0x3deb06c0], [7, 0x3deb4ce0], [0, 0x3deb9300], [0, 0x3debd920], [3, 0x3dec1f40], [4, 0x3dec6560], [2, 0x3decab80], [2, 0x3decf1a0], [4, 0x3ded37c0], [5, 0x3ded7de0], [6, 0x3dedc400], [6, 0x3dee0a20], [1, 0x3dee5040], [4, 0x3dee9660], [7, 0x3deedc80], [2, 0x3def22a0], [3, 0x3def68c0], [4, 0x3defaee0], [1, 0x3deff500], [3, 0x3df03b20], [1, 0x3df08140], [6, 0x3df0c760], [1, 0x3df10d80], [6, 0x3df153a0], [6, 0x3df199c0], [2, 0x3df1dfe0], [7, 0x3df22600], [4, 0x3df26c20], [4, 0x3df2b240], [1, 0x3df2f860], [5, 0x3df33e80], [7, 0x3df384a0], [3, 0x3df3cac0], [3, 0x3df410e0], [6, 0x3df45700], [1, 0x3df49d20], [7, 0x3df4e340], [0, 0x3df52960], [3, 0x3df56f80], [1, 0x3df5b5a0], [6, 0x3df5fbc0], [1, 0x3df641e0], [0, 0x3df68800], [7, 0x3df6ce20], [6, 0x3df71440], [3, 0x3df75a60], [5, 0x3df7a080], [6, 0x3df7e6a0], [7, 0x3df82cc0], [4, 0x3df872e0], [7, 0x3df8b900], [3, 0x3df8ff20], [2, 0x3df94540], [2, 0x3df98b60]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3e506220], [7, 0x3e524c40], [0, 0x3e543660], [7, 0x3e562080], [0, 0x3e580aa0], [0, 0x3e59f4c0], [3, 0x3e5bdee0], [4, 0x3e5dc900]]'
  output1_dram_buffers: '[[0, 0x3e9028c0], [7, 0x3e9212e0], [0, 0x3e93fd00], [7, 0x3e95e720], [0, 0x3e97d140], [0, 0x3e99bb60], [3, 0x3e9ba580], [4, 0x3e9d8fa0]]'
  output2_dram_buffers: '[[0, 0x3ece2180], [7, 0x3ed00ba0], [0, 0x3ed1f5c0], [7, 0x3ed3dfe0], [0, 0x3ed5ca00], [0, 0x3ed7b420], [3, 0x3ed99e40], [4, 0x3edb8860]]'
  output3_dram_buffers: '[[0, 0x3ee09260], [7, 0x3ee46680], [0, 0x3ee83aa0], [7, 0x3eec0ec0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 7
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 8
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 7
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=24
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 7
  op2_loc_r: 0
  op3_loc_c: 8
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x36c634a0], [1, 0x36fe10c0], [4, 0x3735ece0], [0, 0x376dc900], [3, 0x37a5a520], [5, 0x37dd8140], [0, 0x38155d60], [5, 0x384d3980]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x388d06a0]]'
  output1_dram_buffers: '[[5, 0x3a6149e0]]'
  output2_dram_buffers: '[[5, 0x3c561960]]'
  output3_dram_buffers: '[[5, 0x3e2ad020]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 88
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 11
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 88
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 11
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 88
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 1
  op2_mb_r: 11
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 88
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 11
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=25
- device: GRAYSKULL
  entries: 10
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 7
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x3a88e800], [1, 0x3a9aae20], [1, 0x3aac7440], [2, 0x3abe3a60], [3, 0x3ad00080], [2, 0x3ae1c6a0], [0, 0x3af38cc0], [2, 0x3b0552e0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3c21e120]]'
  output1_dram_buffers: '[[3, 0x3cca9b80]]'
  output2_dram_buffers: '[[3, 0x3e0eada0]]'
  output3_dram_buffers: '[[3, 0x3ea0e340]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 7
  output0_mb_r: 4
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 4
  op0_t: 7
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 7
  output1_mb_r: 4
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 7
  op1_mb_r: 2
  op1_mb_c: 8
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 4
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 7
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 7
  output3_mb_r: 4
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 7
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 20
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=26
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 6
  op0_loc_r: 3
  op1_loc_c: 8
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 17
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x37173d80], [7, 0x373123a0], [7, 0x374b09c0], [7, 0x3764efe0], [0, 0x377ed600], [3, 0x3798bc20], [6, 0x37b2a240], [2, 0x37cc8860], [4, 0x37e66e80], [3, 0x380054a0], [3, 0x381a3ac0], [1, 0x383420e0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x384f7180]]'
  output1_dram_buffers: '[[4, 0x398a59a0]]'
  output2_dram_buffers: '[[4, 0x3ac19380]]'
  output3_dram_buffers: '[[4, 0x3bfb6380]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 12
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 17
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 17
  output1_mb_r: 12
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 17
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 17
  output2_mb_r: 12
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 17
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 17
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 17
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=27
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 6
  op1_loc_r: 5
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x30a6a5c0], [2, 0x30a88fe0], [0, 0x30aa7a00], [0, 0x30ac6420]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x30d65d20], [2, 0x30d75240], [0, 0x30d84760], [0, 0x30d93c80], [4, 0x30da31a0], [4, 0x30db26c0], [5, 0x30dc1be0], [5, 0x30dd1100]]'
  output1_dram_buffers: '[[3, 0x3152d380], [2, 0x3154bda0], [0, 0x3156a7c0], [0, 0x315891e0]]'
  output2_dram_buffers: '[[3, 0x31f50e40]]'
  output3_dram_buffers: '[[3, 0x32cb5700], [2, 0x32cc6f20], [0, 0x32cd8740], [0, 0x32ce9f60], [4, 0x32cfb780], [4, 0x32d0cfa0], [5, 0x32d1e7c0]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 7
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 4
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 7
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 7
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 7
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 7
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 4
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=7
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=7
#Test id=28
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 3
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[7, 0x3b1e3e40], [7, 0x3b1f1060], [6, 0x3b1fe280]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3c14b960]]'
  output1_dram_buffers: '[[7, 0x3c80d9c0], [7, 0x3c81abe0], [6, 0x3c827e00]]'
  output2_dram_buffers: '[[7, 0x3c871f60], [7, 0x3c87bd00], [6, 0x3c885aa0], [4, 0x3c88f840]]'
  output3_dram_buffers: '[[7, 0x3d8540c0], [7, 0x3d85a9e0], [6, 0x3d861300], [4, 0x3d867c20], [7, 0x3d86e540], [0, 0x3d874e60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 3
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 3
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 3
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 8
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 4
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 6
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 3
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 12
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=3
#Test id=29
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x362de360], [4, 0x362e2980], [3, 0x362e6fa0], [7, 0x362eb5c0], [2, 0x362efbe0], [4, 0x362f4200], [2, 0x362f8820], [1, 0x362fce40], [4, 0x36301460], [7, 0x36305a80], [5, 0x3630a0a0], [6, 0x3630e6c0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x37345fc0], [4, 0x373531e0], [3, 0x37360400], [7, 0x3736d620]]'
  output1_dram_buffers: '[[3, 0x3a52ffc0], [4, 0x3a54a3e0]]'
  output2_dram_buffers: '[[3, 0x3b3e6d00], [4, 0x3b3f3f20], [3, 0x3b401140], [7, 0x3b40e360]]'
  output3_dram_buffers: '[[3, 0x3b6fb920], [4, 0x3b715d40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 2
  output0_mb_r: 3
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 2
  op0_mb_r: 3
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 4
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 6
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 6
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 6
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 2
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=30
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 6
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 13
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x3ad2ea20], [4, 0x3ad98440], [7, 0x3ae01e60], [7, 0x3ae6b880], [4, 0x3aed52a0], [7, 0x3af3ecc0], [1, 0x3afa86e0], [0, 0x3b012100]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3b0c83e0]]'
  output1_dram_buffers: '[[2, 0x3b80b220]]'
  output2_dram_buffers: '[[2, 0x3bda37c0]]'
  output3_dram_buffers: '[[2, 0x3d3c0b40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 8
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 13
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 13
  output1_mb_r: 8
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 13
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 8
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 13
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 13
  output3_mb_r: 8
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 13
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=31
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 9
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x336c81e0], [6, 0x33835c00], [6, 0x339a3620], [5, 0x33b11040], [0, 0x33c7ea60], [2, 0x33dec480], [5, 0x33f59ea0], [2, 0x340c78c0], [7, 0x342352e0], [2, 0x343a2d00], [2, 0x34510720], [0, 0x3467e140], [3, 0x347ebb60], [6, 0x34959580], [1, 0x34ac6fa0], [2, 0x34c349c0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3554f940]]'
  output1_dram_buffers: '[[7, 0x3702eee0]]'
  output2_dram_buffers: '[[7, 0x388fcc60]]'
  output3_dram_buffers: '[[7, 0x3dbd4ba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 8
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 9
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 8
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 9
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 8
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 9
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 8
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 9
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=32
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 8
  op3_loc_r: 2
  input_t: 13
  input_mb_r: 1
  input_mb_c: 7
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x34d8e9a0], [0, 0x34f004c0], [3, 0x35071fe0], [7, 0x351e3b00], [0, 0x35355620], [4, 0x354c7140], [4, 0x35638c60], [5, 0x357aa780], [4, 0x3591c2a0], [3, 0x35a8ddc0], [4, 0x35bff8e0], [5, 0x35d71400], [3, 0x35ee2f20], [0, 0x36054a40], [1, 0x361c6560], [4, 0x36338080], [1, 0x364a9ba0], [4, 0x3661b6c0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x36840620]]'
  output1_dram_buffers: '[[3, 0x385c4ca0]]'
  output2_dram_buffers: '[[3, 0x3acdbc80]]'
  output3_dram_buffers: '[[3, 0x3c765060]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 21
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 13
  op0_mb_r: 3
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 13
  output1_mb_r: 21
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 3
  op1_t: 13
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 21
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 13
  op2_mb_r: 3
  op2_mb_c: 12
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 13
  output3_mb_r: 21
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 3
  op3_t: 13
  op3_mb_r: 7
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=7
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=7
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=33
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3b85d5c0], [4, 0x3b85f020], [7, 0x3b860a80], [5, 0x3b8624e0], [0, 0x3b863f40], [2, 0x3b8659a0], [1, 0x3b867400], [4, 0x3b868e60]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3e095b00]]'
  output1_dram_buffers: '[[3, 0x3f0e0ec0]]'
  output2_dram_buffers: '[[3, 0x3fd14f40], [4, 0x3fd1b860]]'
  output3_dram_buffers: '[[3, 0x3fdd7ee0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 8
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 8
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 3
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 3
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=34
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 7
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x3f3e8ec0], [4, 0x3f3f46a0], [7, 0x3f3ffe80], [4, 0x3f40b660], [1, 0x3f416e40], [4, 0x3f422620], [6, 0x3f42de00], [5, 0x3f4395e0], [5, 0x3f444dc0], [0, 0x3f4505a0], [4, 0x3f45bd80], [5, 0x3f467560], [0, 0x3f472d40], [1, 0x3f47e520], [5, 0x3f489d00], [7, 0x3f4954e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3f5b6fa0], [4, 0x3f5d13c0], [7, 0x3f5eb7e0], [4, 0x3f605c00], [1, 0x3f620020], [4, 0x3f63a440], [6, 0x3f654860]]'
  output1_dram_buffers: '[[4, 0x3fbbebe0], [4, 0x3fbd5b80], [7, 0x3fbecb20], [4, 0x3fc03ac0], [1, 0x3fc1aa60], [4, 0x3fc31a00], [6, 0x3fc489a0], [5, 0x3fc5f940]]'
  output2_dram_buffers: '[[4, 0x3fd75d40], [4, 0x3fd85260], [7, 0x3fd94780], [4, 0x3fda3ca0], [1, 0x3fdb31c0], [4, 0x3fdc26e0], [6, 0x3fdd1c00], [5, 0x3fde1120], [5, 0x3fdf0640], [0, 0x3fdffb60], [4, 0x3fe0f080], [5, 0x3fe1e5a0]]'
  output3_dram_buffers: '[[4, 0x3fef2460], [4, 0x3ff10e80], [7, 0x3ff2f8a0], [4, 0x3ff4e2c0], [1, 0x3ff6cce0], [4, 0x3ff8b700]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 8
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 8
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 4
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 3
  output1_mb_c: 2
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 2
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 4
  output2_grid_size_r: 3
  output2_t: 2
  output2_mb_r: 7
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 4
  op2_grid_size_r: 3
  op2_t: 2
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 2
  output3_mb_r: 7
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 7
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=7
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=5
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=35
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 9
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x318bbb80], [6, 0x318cd3a0], [1, 0x318debc0], [0, 0x318f03e0], [5, 0x31901c00], [4, 0x31913420], [3, 0x31924c40], [4, 0x31936460], [0, 0x31947c80], [0, 0x319594a0], [4, 0x3196acc0], [3, 0x3197c4e0], [3, 0x3198dd00], [2, 0x3199f520], [1, 0x319b0d40], [2, 0x319c2560], [4, 0x319d3d80], [0, 0x319e55a0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x31a65020], [6, 0x31a8c640], [1, 0x31ab3c60], [0, 0x31adb280], [5, 0x31b028a0], [4, 0x31b29ec0], [3, 0x31b514e0], [4, 0x31b78b00]]'
  output1_dram_buffers: '[[6, 0x33e503e0], [6, 0x33eb9400], [1, 0x33f22420]]'
  output2_dram_buffers: '[[6, 0x34108300], [6, 0x34171320], [1, 0x341da340]]'
  output3_dram_buffers: '[[6, 0x351c96a0], [6, 0x352326c0], [1, 0x3529b6e0]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 3
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 3
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 12
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 3
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 4
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=36
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 9
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x352dacc0], [7, 0x352f50e0], [7, 0x3530f500]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x359bea40], [7, 0x359d8e60], [7, 0x359f3280]]'
  output1_dram_buffers: '[[6, 0x35cb6ae0]]'
  output2_dram_buffers: '[[6, 0x36104020], [7, 0x3611e440], [7, 0x36138860]]'
  output3_dram_buffers: '[[6, 0x378ed660], [7, 0x378fa880], [7, 0x37907aa0], [1, 0x37914cc0], [0, 0x37921ee0], [7, 0x3792f100]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 2
  output0_mb_r: 3
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 2
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 9
  output1_mb_c: 1
  output1_ub_r: 4
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 9
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 2
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 2
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=37
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 9
  input_mb_r: 1
  input_mb_c: 16
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x38fbe240], [6, 0x390e2a60], [4, 0x39207280], [4, 0x3932baa0], [1, 0x394502c0], [3, 0x39574ae0], [7, 0x39699300], [5, 0x397bdb20], [4, 0x398e2340], [6, 0x39a06b60], [4, 0x39b2b380], [3, 0x39c4fba0], [4, 0x39d743c0], [4, 0x39e98be0], [4, 0x39fbd400], [3, 0x3a0e1c20]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3a2327e0]]'
  output1_dram_buffers: '[[5, 0x3b6675e0]]'
  output2_dram_buffers: '[[5, 0x3d0fee20]]'
  output3_dram_buffers: '[[5, 0x3e759f20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 32
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 9
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 32
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 9
  op1_mb_r: 4
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 32
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 4
  op2_t: 9
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 32
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 8
  op3_t: 9
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=38
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 6
  input_mb_r: 2
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x301119a0], [3, 0x316659c0]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x32fb6080]]'
  output1_dram_buffers: '[[7, 0x35f2f4a0]]'
  output2_dram_buffers: '[[7, 0x39fe3aa0]]'
  output3_dram_buffers: '[[7, 0x3ce4acc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 56
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 6
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 56
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 6
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 6
  output2_mb_r: 56
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 6
  op2_mb_r: 7
  op2_mb_c: 2
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 56
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 6
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=7
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=5
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=39
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 0
  op3_loc_c: 5
  op3_loc_r: 6
  input_t: 2
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x3696c900], [7, 0x369d5920], [3, 0x36a3e940], [3, 0x36aa7960], [4, 0x36b10980], [7, 0x36b799a0], [3, 0x36be29c0], [2, 0x36c4b9e0], [2, 0x36cb4a00], [6, 0x36d1da20], [3, 0x36d86a40], [5, 0x36defa60], [1, 0x36e58a80], [2, 0x36ec1aa0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x389c1f20], [7, 0x38ab6f40], [3, 0x38babf60], [3, 0x38ca0f80], [4, 0x38d95fa0], [7, 0x38e8afc0]]'
  output1_dram_buffers: '[[0, 0x3b440ca0], [7, 0x3b4f88c0], [3, 0x3b5b04e0], [3, 0x3b668100], [4, 0x3b71fd20], [7, 0x3b7d7940], [3, 0x3b88f560], [2, 0x3b947180]]'
  output2_dram_buffers: '[[0, 0x3bb06360], [7, 0x3bbbdf80], [3, 0x3bc75ba0], [3, 0x3bd2d7c0], [4, 0x3bde53e0], [7, 0x3be9d000], [3, 0x3bf54c20], [2, 0x3c00c840]]'
  output3_dram_buffers: '[[0, 0x3c1f78c0], [7, 0x3c2608e0], [3, 0x3c2c9900], [3, 0x3c332920], [4, 0x3c39b940], [7, 0x3c404960], [3, 0x3c46d980], [2, 0x3c4d69a0], [2, 0x3c53f9c0], [6, 0x3c5a89e0], [3, 0x3c611a00], [5, 0x3c67aa20], [1, 0x3c6e3a40], [2, 0x3c74ca60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 2
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 7
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 2
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 7
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 2
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 8
  output2_t: 2
  output2_mb_r: 3
  output2_mb_c: 7
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 2
  op2_mb_r: 3
  op2_mb_c: 7
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 7
  output3_grid_size_r: 2
  output3_t: 2
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 7
  op3_grid_size_r: 2
  op3_t: 2
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=7
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=40
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x38c55ee0], [5, 0x38c74900], [7, 0x38c93320], [2, 0x38cb1d40], [1, 0x38cd0760], [1, 0x38cef180], [5, 0x38d0dba0], [1, 0x38d2c5c0], [0, 0x38d4afe0], [3, 0x38d69a00], [1, 0x38d88420], [0, 0x38da6e40]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3a8e2840], [5, 0x3a917060], [7, 0x3a94b880], [2, 0x3a9800a0], [1, 0x3a9b48c0], [1, 0x3a9e90e0], [5, 0x3aa1d900]]'
  output1_dram_buffers: '[[6, 0x3bc74be0], [5, 0x3bcd0a00], [7, 0x3bd2c820], [2, 0x3bd88640]]'
  output2_dram_buffers: '[[6, 0x3cbf1120], [5, 0x3cc2e540], [7, 0x3cc6b960], [2, 0x3cca8d80], [1, 0x3cce61a0], [1, 0x3cd235c0]]'
  output3_dram_buffers: '[[6, 0x3fd4bda0], [5, 0x3fd805c0], [7, 0x3fdb4de0], [2, 0x3fde9600], [1, 0x3fe1de20], [1, 0x3fe52640], [5, 0x3fe86e60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 1
  output0_mb_r: 4
  output0_mb_c: 2
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 1
  op0_mb_r: 4
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 3
  output2_t: 1
  output2_mb_r: 14
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 3
  op2_t: 1
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 7
  output3_t: 1
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 1
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=7
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=7
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=41
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 4
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3a7783e0], [6, 0x3a77ed00], [6, 0x3a785620], [6, 0x3a78bf40], [6, 0x3a792860], [1, 0x3a799180]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3a9ff660], [6, 0x3aa13180]]'
  output1_dram_buffers: '[[3, 0x3ae96680]]'
  output2_dram_buffers: '[[3, 0x3b0f6220], [6, 0x3b0fa840], [6, 0x3b0fee60], [6, 0x3b103480], [6, 0x3b107aa0], [1, 0x3b10c0c0], [7, 0x3b1106e0], [4, 0x3b114d00], [4, 0x3b119320]]'
  output3_dram_buffers: '[[3, 0x3de48720], [6, 0x3de4f040], [6, 0x3de55960], [6, 0x3de5c280], [6, 0x3de62ba0], [1, 0x3de694c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 6
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 3
  output2_grid_size_r: 3
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 3
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=42
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 5
  op1_loc_c: 7
  op1_loc_r: 3
  op2_loc_c: 9
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x33fe5da0], [5, 0x33fea3c0], [3, 0x33fee9e0], [3, 0x33ff3000], [5, 0x33ff7620], [6, 0x33ffbc40], [4, 0x34000260], [1, 0x34004880], [4, 0x34008ea0], [5, 0x3400d4c0], [4, 0x34011ae0], [2, 0x34016100]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x35ec0da0], [5, 0x35edb1c0]]'
  output1_dram_buffers: '[[2, 0x37aa1980], [5, 0x37aaeba0], [3, 0x37abbdc0], [3, 0x37ac8fe0]]'
  output2_dram_buffers: '[[2, 0x3b516a80], [5, 0x3b523ca0], [3, 0x3b530ec0], [3, 0x3b53e0e0]]'
  output3_dram_buffers: '[[2, 0x3def2ca0], [5, 0x3def95c0], [3, 0x3deffee0], [3, 0x3df06800], [5, 0x3df0d120], [6, 0x3df13a40], [4, 0x3df1a360], [1, 0x3df20c80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 6
  output0_mb_c: 2
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 6
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 6
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 1
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=43
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x3f034de0], [2, 0x3f05c400], [5, 0x3f083a20], [5, 0x3f0ab040]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3f0d94a0], [2, 0x3f0ecfc0], [5, 0x3f100ae0], [5, 0x3f114600], [1, 0x3f128120], [5, 0x3f13bc40], [3, 0x3f14f760], [3, 0x3f163280]]'
  output1_dram_buffers: '[[1, 0x3f185b80], [2, 0x3f1d47a0]]'
  output2_dram_buffers: '[[1, 0x3f3669c0], [2, 0x3f3b55e0]]'
  output3_dram_buffers: '[[1, 0x3fde06c0], [2, 0x3fe07ce0], [5, 0x3fe2f300], [5, 0x3fe56920]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 4
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 9
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 9
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 8
  output1_mb_c: 9
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 8
  op1_mb_c: 9
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 3
  output2_ub_r: 2
  output2_ub_c: 3
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=44
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 7
  op0_loc_r: 1
  op1_loc_c: 8
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x36284660], [6, 0x36286980], [7, 0x36288ca0], [6, 0x3628afc0], [7, 0x3628d2e0], [2, 0x3628f600], [4, 0x36291920], [3, 0x36293c40], [5, 0x36295f60], [1, 0x36298280], [3, 0x3629a5a0], [7, 0x3629c8c0], [3, 0x3629ebe0], [7, 0x362a0f00]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3c87da20], [6, 0x3c882040], [7, 0x3c886660], [6, 0x3c88ac80], [7, 0x3c88f2a0], [2, 0x3c8938c0], [4, 0x3c897ee0]]'
  output1_dram_buffers: '[[6, 0x3dba49c0]]'
  output2_dram_buffers: '[[6, 0x3df68380], [6, 0x3df6a6a0], [7, 0x3df6c9c0], [6, 0x3df6ece0], [7, 0x3df71000], [2, 0x3df73320], [4, 0x3df75640], [3, 0x3df77960], [5, 0x3df79c80], [1, 0x3df7bfa0], [3, 0x3df7e2c0], [7, 0x3df805e0], [3, 0x3df82900], [7, 0x3df84c20]]'
  output3_dram_buffers: '[[6, 0x3e58ec20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 7
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 7
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 7
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 7
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=7
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=7
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=45
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 7
  op2_loc_r: 5
  op3_loc_c: 9
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[7, 0x355b9f80], [7, 0x355bcb60], [4, 0x355bf740], [2, 0x355c2320], [1, 0x355c4f00], [3, 0x355c7ae0], [2, 0x355ca6c0], [1, 0x355cd2a0], [3, 0x355cfe80], [3, 0x355d2a60], [6, 0x355d5640], [5, 0x355d8220]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3606e360], [7, 0x3607ea00]]'
  output1_dram_buffers: '[[7, 0x375edf20], [7, 0x375f8e40], [4, 0x37603d60]]'
  output2_dram_buffers: '[[7, 0x3a787f40], [7, 0x3a7902a0], [4, 0x3a798600], [2, 0x3a7a0960]]'
  output3_dram_buffers: '[[7, 0x3ab3da80], [7, 0x3ab489a0], [4, 0x3ab538c0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 5
  output0_mb_c: 3
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 5
  op0_mb_c: 3
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 5
  output1_mb_c: 2
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 5
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 5
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 3
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 2
  output3_ub_r: 5
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=46
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 0
  op1_loc_c: 8
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x34536640], [2, 0x34538960], [2, 0x3453ac80], [6, 0x3453cfa0], [6, 0x3453f2c0], [7, 0x345415e0], [3, 0x34543900], [0, 0x34545c20], [5, 0x34547f40], [3, 0x3454a260], [1, 0x3454c580], [4, 0x3454e8a0], [0, 0x34550bc0], [3, 0x34552ee0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34d1da00]]'
  output1_dram_buffers: '[[4, 0x354e8a80]]'
  output2_dram_buffers: '[[4, 0x361659a0]]'
  output3_dram_buffers: '[[4, 0x37193700], [2, 0x371a2c20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 7
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 7
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 7
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 7
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=47
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 3
  input_mb_c: 8
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x308e0240], [0, 0x30e96a60], [5, 0x3144d280], [0, 0x31a03aa0], [0, 0x31fba2c0], [6, 0x32570ae0], [4, 0x32b27300], [1, 0x330ddb20]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x336e6c80]]'
  output1_dram_buffers: '[[3, 0x368dbae0]]'
  output2_dram_buffers: '[[3, 0x39c84fe0]]'
  output3_dram_buffers: '[[3, 0x3cb057e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 16
  output0_mb_c: 60
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 10
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 16
  output1_mb_c: 60
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 15
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 16
  output2_mb_c: 60
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 16
  output3_mb_c: 60
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 4
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=48
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 7
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 4
  input_mb_c: 4
  input_ub_r: 4
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x3c5c1ae0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 6
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3df89f20], [0, 0x3e1b9f40]]'
  output1_dram_buffers: '[[5, 0x3e905060], [0, 0x3e991080], [2, 0x3ea1d0a0], [0, 0x3eaa90c0], [2, 0x3eb350e0], [1, 0x3ebc1100], [4, 0x3ec4d120], [4, 0x3ecd9140]]'
  output2_dram_buffers: '[[5, 0x3f215540]]'
  output3_dram_buffers: '[[5, 0x3f9881c0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 8
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 8
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 8
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 8
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 8
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 8
  op3_mb_c: 16
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=8
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=49
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 2
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 12
  input_mb_r: 1
  input_mb_c: 7
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x32c8e3c0], [3, 0x32f38be0], [1, 0x331e3400], [4, 0x3348dc20], [3, 0x33738440], [2, 0x339e2c60]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x36fc5760]]'
  output1_dram_buffers: '[[3, 0x3b07f060]]'
  output2_dram_buffers: '[[3, 0x3d3465e0]]'
  output3_dram_buffers: '[[3, 0x3ee37480]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 12
  output0_mb_r: 42
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 12
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 12
  output1_mb_r: 42
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 7
  op1_t: 12
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 12
  output2_mb_r: 42
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 12
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 12
  output3_mb_r: 42
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 12
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=7
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
