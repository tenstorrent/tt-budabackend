#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 3
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x3720a480], [6, 0x372130a0], [3, 0x3721bcc0], [7, 0x372248e0], [6, 0x3722d500], [7, 0x37236120], [6, 0x3723ed40], [2, 0x37247960], [0, 0x37250580], [0, 0x372591a0], [5, 0x37261dc0], [3, 0x3726a9e0], [7, 0x37273600], [6, 0x3727c220], [3, 0x37284e40], [7, 0x3728da60], [7, 0x37296680], [4, 0x3729f2a0], [1, 0x372a7ec0], [7, 0x372b0ae0], [7, 0x372b9700], [0, 0x372c2320], [0, 0x372caf40], [5, 0x372d3b60], [3, 0x372dc780], [3, 0x372e53a0], [6, 0x372edfc0], [4, 0x372f6be0], [1, 0x372ff800], [6, 0x37308420]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 5]'
  input1_tms: '[hslice: 5]'
  input2_tms: '[hslice: 5]'
  input3_tms: '[hslice: 5]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x379340c0], [6, 0x37975ae0], [3, 0x379b7500], [7, 0x379f8f20]]'
  output1_dram_buffers: '[[4, 0x38cb28c0], [6, 0x38cd35e0], [3, 0x38cf4300], [7, 0x38d15020], [6, 0x38d35d40], [7, 0x38d56a60], [6, 0x38d77780], [2, 0x38d984a0]]'
  output2_dram_buffers: '[[4, 0x39db0460], [6, 0x39dd1180], [3, 0x39df1ea0], [7, 0x39e12bc0], [6, 0x39e338e0], [7, 0x39e54600], [6, 0x39e75320], [2, 0x39e96040]]'
  output3_dram_buffers: '[[4, 0x3e9d1320], [6, 0x3ea54740]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 5
  output0_mb_r: 3
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 5
  op0_mb_r: 3
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 4
  output1_t: 5
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 5
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 4
  output2_t: 5
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 5
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 5
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 5
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=5
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=5
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=10
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=10
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=5
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=10
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=10
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=5
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=5
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 7
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 16
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x3b1bda00], [0, 0x3b3c5a20], [3, 0x3b5cda40], [6, 0x3b7d5a60], [3, 0x3b9dda80], [1, 0x3bbe5aa0], [2, 0x3bdedac0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 14]'
  input1_tms: '[hslice: 14]'
  input2_tms: '[hslice: 14]'
  input3_tms: '[hslice: 14]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3c26d660]]'
  output1_dram_buffers: '[[4, 0x3d45e260]]'
  output2_dram_buffers: '[[4, 0x3e35d2a0]]'
  output3_dram_buffers: '[[4, 0x3f1b63a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 14
  output0_mb_r: 16
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 14
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 14
  output1_mb_r: 16
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 14
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 14
  output2_mb_r: 16
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 14
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 14
  output3_mb_r: 16
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 14
  op3_mb_r: 16
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=14
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=14
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=14
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=14
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=14
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=14
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=14
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=14
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=14
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=14
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=14
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=14
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=2
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 9
  op3_loc_r: 7
  input_t: 2
  input_mb_r: 2
  input_mb_c: 6
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x318a1600], [3, 0x3234b620], [2, 0x32df5640], [1, 0x3389f660]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3540be60]]'
  output1_dram_buffers: '[[1, 0x37f1d460]]'
  output2_dram_buffers: '[[1, 0x3aa73aa0]]'
  output3_dram_buffers: '[[1, 0x3d535560]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 4
  output0_mb_c: 21
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 8
  op0_mb_r: 2
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 4
  output1_mb_c: 21
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 8
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 4
  output2_mb_c: 21
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 8
  op2_mb_r: 2
  op2_mb_c: 7
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 4
  output3_mb_c: 21
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 8
  op3_mb_r: 4
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=6
#Test id=3
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 5
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 10
  input_mb_r: 1
  input_mb_c: 16
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x31eb0540], [1, 0x3227f560], [0, 0x3264e580], [7, 0x32a1d5a0], [1, 0x32dec5c0], [1, 0x331bb5e0], [4, 0x3358a600], [0, 0x33959620], [5, 0x33d28640], [1, 0x340f7660]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x35d08a80]]'
  output1_dram_buffers: '[[6, 0x38ac50e0]]'
  output2_dram_buffers: '[[6, 0x3b31cb20]]'
  output3_dram_buffers: '[[6, 0x3d99ea60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 40
  output0_mb_r: 2
  output0_mb_c: 20
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 40
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 40
  output1_mb_r: 2
  output1_mb_c: 20
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 40
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 40
  output2_mb_r: 2
  output2_mb_c: 20
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 40
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 40
  output3_mb_r: 2
  output3_mb_c: 20
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 40
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=4
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 5
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 4
  input_mb_r: 1
  input_mb_c: 8
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x3017e760], [6, 0x30386780], [5, 0x3058e7a0], [5, 0x307967c0], [1, 0x3099e7e0], [3, 0x30ba6800], [2, 0x30dae820], [5, 0x30fb6840], [4, 0x311be860], [1, 0x313c6880], [1, 0x315ce8a0], [2, 0x317d68c0], [3, 0x319de8e0], [5, 0x31be6900], [0, 0x31dee920], [0, 0x31ff6940], [4, 0x321fe960], [0, 0x32406980], [3, 0x3260e9a0], [0, 0x328169c0], [7, 0x32a1e9e0], [5, 0x32c26a00], [0, 0x32e2ea20], [7, 0x33036a40], [6, 0x3323ea60]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 10]'
  input1_tms: '[hslice: 10]'
  input2_tms: '[hslice: 10]'
  input3_tms: '[hslice: 10]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x334c6da0]]'
  output1_dram_buffers: '[[4, 0x36792f60]]'
  output2_dram_buffers: '[[4, 0x39a5b960]]'
  output3_dram_buffers: '[[4, 0x3cd25620]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 40
  output0_mb_r: 10
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 40
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 40
  output1_mb_r: 10
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 40
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 40
  output2_mb_r: 10
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 40
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 40
  output3_mb_r: 10
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 40
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=10
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=40
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=40
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=10
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=10
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=10
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=10
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=10
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=10
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=10
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=10
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=10
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=5
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 3
  op1_loc_c: 7
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 24
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[2, 0x30ef5ac0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x36a07a60]]'
  output1_dram_buffers: '[[2, 0x3b130880]]'
  output2_dram_buffers: '[[2, 0x3c334ba0]]'
  output3_dram_buffers: '[[2, 0x3de4c8e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 22
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 48
  op0_mb_r: 11
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 48
  output1_mb_r: 22
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 48
  op1_mb_r: 11
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 22
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 48
  op2_mb_r: 11
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 22
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 48
  op3_mb_r: 11
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=6
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 2
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x33a25860], [0, 0x33a8e880], [1, 0x33af78a0], [6, 0x33b608c0], [6, 0x33bc98e0], [4, 0x33c32900], [5, 0x33c9b920], [2, 0x33d04940], [0, 0x33d6d960], [5, 0x33dd6980], [7, 0x33e3f9a0], [3, 0x33ea89c0], [2, 0x33f119e0], [7, 0x33f7aa00], [2, 0x33fe3a20], [1, 0x3404ca40], [1, 0x340b5a60], [3, 0x3411ea80], [5, 0x34187aa0], [3, 0x341f0ac0], [0, 0x34259ae0], [3, 0x342c2b00], [2, 0x3432bb20], [7, 0x34394b40], [6, 0x343fdb60], [0, 0x34466b80], [0, 0x344cfba0], [4, 0x34538bc0], [6, 0x345a1be0], [4, 0x3460ac00], [4, 0x34673c20], [7, 0x346dcc40], [2, 0x34745c60], [2, 0x347aec80], [4, 0x34817ca0], [4, 0x34880cc0], [2, 0x348e9ce0], [7, 0x34952d00], [5, 0x349bbd20], [4, 0x34a24d40], [5, 0x34a8dd60], [3, 0x34af6d80], [0, 0x34b5fda0], [5, 0x34bc8dc0], [1, 0x34c31de0], [7, 0x34c9ae00], [4, 0x34d03e20], [3, 0x34d6ce40], [5, 0x34dd5e60], [5, 0x34e3ee80], [6, 0x34ea7ea0], [2, 0x34f10ec0], [3, 0x34f79ee0], [2, 0x34fe2f00], [3, 0x3504bf20], [0, 0x350b4f40]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 24]'
  input1_tms: '[hslice: 24]'
  input2_tms: '[hslice: 24]'
  input3_tms: '[hslice: 24]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x39d7d700], [0, 0x3a0c5720], [1, 0x3a40d740], [6, 0x3a755760], [6, 0x3aa9d780], [4, 0x3ade57a0], [5, 0x3b12d7c0]]'
  output1_dram_buffers: '[[5, 0x3b72ca40], [0, 0x3ba74a60], [1, 0x3bdbca80], [6, 0x3c104aa0], [6, 0x3c44cac0], [4, 0x3c794ae0], [5, 0x3cadcb00]]'
  output2_dram_buffers: '[[5, 0x3ce99760], [0, 0x3d1e1780], [1, 0x3d5297a0], [6, 0x3d8717c0], [6, 0x3dbb97e0], [4, 0x3df01800], [5, 0x3e249820]]'
  output3_dram_buffers: '[[5, 0x3e6d8320], [0, 0x3ea20340], [1, 0x3ed68360], [6, 0x3f0b0380], [6, 0x3f3f83a0], [4, 0x3f7403c0], [5, 0x3fa883e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 24
  output0_mb_r: 1
  output0_mb_c: 2
  output0_ub_r: 2
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 24
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 24
  output1_mb_r: 2
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 24
  op1_mb_r: 2
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 7
  output2_t: 24
  output2_mb_r: 1
  output2_mb_c: 8
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 24
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 7
  output3_t: 24
  output3_mb_r: 2
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 24
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=24
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=24
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=24
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=24
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=24
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=24
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=7
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 9
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[6, 0x33cd5f60], [0, 0x33d67180], [6, 0x33df83a0], [7, 0x33e895c0], [5, 0x33f1a7e0], [4, 0x33faba00], [7, 0x3403cc20], [1, 0x340cde40], [6, 0x3415f060], [5, 0x341f0280], [7, 0x342814a0], [2, 0x343126c0], [7, 0x343a38e0], [4, 0x34434b00]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 18]'
  input1_tms: '[hslice: 18]'
  input2_tms: '[hslice: 18]'
  input3_tms: '[hslice: 18]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x36c43d40]]'
  output1_dram_buffers: '[[6, 0x383451e0]]'
  output2_dram_buffers: '[[6, 0x3a584420]]'
  output3_dram_buffers: '[[6, 0x3c97ece0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 18
  output0_mb_r: 2
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 18
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 18
  output1_mb_r: 2
  output1_mb_c: 7
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 18
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 2
  output2_mb_c: 7
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 18
  op2_mb_r: 1
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 2
  output3_mb_c: 7
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 18
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=18
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=18
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=18
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=18
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=18
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=18
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=18
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=18
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=18
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=18
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=18
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=18
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=8
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 4
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x32730ba0], [6, 0x32a9e3c0], [3, 0x32e0bbe0], [6, 0x33179400], [7, 0x334e6c20], [2, 0x33854440], [7, 0x33bc1c60], [6, 0x33f2f480], [3, 0x3429cca0], [6, 0x3460a4c0], [2, 0x34977ce0], [2, 0x34ce5500]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x35153b00]]'
  output1_dram_buffers: '[[7, 0x37d7e560]]'
  output2_dram_buffers: '[[7, 0x3ac7ffe0]]'
  output3_dram_buffers: '[[7, 0x3d627f20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 108
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 8
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 108
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 8
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 108
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 8
  op2_mb_r: 9
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 108
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 8
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=9
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 9
  op3_loc_r: 4
  input_t: 4
  input_mb_r: 1
  input_mb_c: 14
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x359be780], [0, 0x35f137a0], [6, 0x364687c0], [6, 0x369bd7e0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 8]'
  input1_tms: '[hslice: 8]'
  input2_tms: '[hslice: 8]'
  input3_tms: '[hslice: 8]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x371def40]]'
  output1_dram_buffers: '[[0, 0x3889bf00]]'
  output2_dram_buffers: '[[0, 0x3a06c4c0]]'
  output3_dram_buffers: '[[0, 0x3c3d2e80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 2
  output0_mb_c: 21
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 32
  op0_mb_r: 2
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 32
  output1_mb_r: 2
  output1_mb_c: 21
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 32
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 32
  output2_mb_r: 2
  output2_mb_c: 21
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 32
  op2_mb_r: 1
  op2_mb_c: 7
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 32
  output3_mb_r: 2
  output3_mb_c: 21
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 32
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=8
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=8
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=8
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=24
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=24
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=8
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=12
#Test id=10
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x34c45b80], [2, 0x34c573a0], [7, 0x34c68bc0], [4, 0x34c7a3e0], [6, 0x34c8bc00], [4, 0x34c9d420], [7, 0x34caec40], [0, 0x34cc0460], [0, 0x34cd1c80], [3, 0x34ce34a0], [4, 0x34cf4cc0], [0, 0x34d064e0], [6, 0x34d17d00], [7, 0x34d29520], [2, 0x34d3ad40], [7, 0x34d4c560], [2, 0x34d5dd80], [5, 0x34d6f5a0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x34ecfde0], [2, 0x34eea200], [7, 0x34f04620], [4, 0x34f1ea40], [6, 0x34f38e60], [4, 0x34f53280], [7, 0x34f6d6a0], [0, 0x34f87ac0], [0, 0x34fa1ee0], [3, 0x34fbc300], [4, 0x34fd6720], [0, 0x34ff0b40]]'
  output1_dram_buffers: '[[1, 0x353054a0], [2, 0x3536e4c0], [7, 0x353d74e0]]'
  output2_dram_buffers: '[[1, 0x365c5340], [2, 0x365d6b60], [7, 0x365e8380], [4, 0x365f9ba0], [6, 0x3660b3c0], [4, 0x3661cbe0], [7, 0x3662e400], [0, 0x3663fc20], [0, 0x36651440], [3, 0x36662c60], [4, 0x36674480], [0, 0x36685ca0], [6, 0x366974c0], [7, 0x366a8ce0], [2, 0x366ba500], [7, 0x366cbd20], [2, 0x366dd540], [5, 0x366eed60]]'
  output3_dram_buffers: '[[1, 0x38483060], [2, 0x384b7880], [7, 0x384ec0a0], [4, 0x385208c0], [6, 0x385550e0], [4, 0x38589900]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 6
  output0_t: 4
  output0_mb_r: 1
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 4
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 3
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 4
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 4
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 3
  output2_grid_size_r: 6
  output2_t: 4
  output2_mb_r: 1
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 6
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 4
  output3_mb_r: 1
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 4
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=11
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 6
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x3d092100], [5, 0x3d09d020], [2, 0x3d0a7f40], [4, 0x3d0b2e60], [6, 0x3d0bdd80], [0, 0x3d0c8ca0], [0, 0x3d0d3bc0], [2, 0x3d0deae0], [5, 0x3d0e9a00], [6, 0x3d0f4920], [6, 0x3d0ff840], [1, 0x3d10a760], [2, 0x3d115680], [0, 0x3d1205a0], [2, 0x3d12b4c0], [0, 0x3d1363e0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 4
  feeder_loc_c: 3
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 40]'
  input1_tms: '[hslice: 40]'
  input2_tms: '[hslice: 40]'
  input3_tms: '[hslice: 40]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3d1aeac0]]'
  output1_dram_buffers: '[[1, 0x3d344c00], [5, 0x3d35aa20], [2, 0x3d370840], [4, 0x3d386660], [6, 0x3d39c480], [0, 0x3d3b22a0], [0, 0x3d3c80c0], [2, 0x3d3ddee0]]'
  output2_dram_buffers: '[[1, 0x3d54f640]]'
  output3_dram_buffers: '[[1, 0x3e6a90a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 40
  output0_mb_r: 4
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 40
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 40
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 40
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 40
  output2_mb_r: 8
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 40
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 40
  output3_mb_r: 2
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 40
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=40
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=40
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=40
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=10
# tm_c_factor[1]=40
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=40
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=40
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=10
# tm_c_factor[2]=40
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=40
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=40
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=10
# tm_c_factor[3]=40
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=40
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=40
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=10
#Test id=12
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 0
  op1_loc_c: 6
  op1_loc_r: 2
  op2_loc_c: 7
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 3
  input_mb_c: 3
  input_ub_r: 4
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x32f586e0], [5, 0x33093700], [4, 0x331ce720], [7, 0x33309740], [6, 0x33444760], [6, 0x3357f780], [7, 0x336ba7a0], [7, 0x337f57c0], [1, 0x339307e0], [2, 0x33a6b800], [7, 0x33ba6820], [5, 0x33ce1840], [4, 0x33e1c860], [7, 0x33f57880], [7, 0x340928a0], [0, 0x341cd8c0], [7, 0x343088e0], [1, 0x34443900], [1, 0x3457e920], [5, 0x346b9940], [0, 0x347f4960], [0, 0x3492f980], [6, 0x34a6a9a0], [4, 0x34ba59c0], [1, 0x34ce09e0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 10]'
  input1_tms: '[hslice: 10]'
  input2_tms: '[hslice: 10]'
  input3_tms: '[hslice: 10]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3521fce0], [5, 0x35846d00], [4, 0x35e6dd20], [7, 0x36494d40], [6, 0x36abbd60]]'
  output1_dram_buffers: '[[1, 0x3772c580], [5, 0x37d535a0], [4, 0x3837a5c0], [7, 0x389a15e0], [6, 0x38fc8600]]'
  output2_dram_buffers: '[[1, 0x39b38dc0], [5, 0x3a0595e0], [4, 0x3a579e00], [7, 0x3aa9a620], [6, 0x3afbae40], [6, 0x3b4db660]]'
  output3_dram_buffers: '[[1, 0x3d88f420], [5, 0x3deb6440], [4, 0x3e4dd460], [7, 0x3eb04480], [6, 0x3f12b4a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 5
  output0_t: 20
  output0_mb_r: 12
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 20
  op0_mb_r: 12
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 5
  output1_t: 20
  output1_mb_r: 6
  output1_mb_c: 3
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 20
  op1_mb_r: 6
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 3
  output2_grid_size_r: 2
  output2_t: 20
  output2_mb_r: 5
  output2_mb_c: 1
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 2
  op2_t: 20
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 5
  output3_t: 20
  output3_mb_r: 4
  output3_mb_c: 3
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 20
  op3_mb_r: 4
  op3_mb_c: 3
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=10
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=10
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=10
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=10
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=10
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=10
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=10
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=30
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=30
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=10
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=10
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=10
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=13
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 1
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 17
  input_mb_r: 7
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x309c4600], [7, 0x30ba7d20], [2, 0x30d8b440], [0, 0x30f6eb60], [5, 0x31152280], [7, 0x313359a0], [6, 0x315190c0], [6, 0x316fc7e0], [6, 0x318dff00], [6, 0x31ac3620], [6, 0x31ca6d40], [0, 0x31e8a460]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 5
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 3]'
  input1_tms: '[hslice: 3]'
  input2_tms: '[hslice: 3]'
  input3_tms: '[hslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x35e8ac40]]'
  output1_dram_buffers: '[[0, 0x3a852a00]]'
  output2_dram_buffers: '[[0, 0x3d20c880]]'
  output3_dram_buffers: '[[0, 0x3e936ee0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 51
  output0_mb_r: 28
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 51
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 51
  output1_mb_r: 28
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 51
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 51
  output2_mb_r: 28
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 51
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 51
  output3_mb_r: 28
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 51
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=3
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=3
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=3
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=3
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 6
  op1_loc_r: 5
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 9
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 2
  input_mb_c: 13
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x32012660], [6, 0x32505e80], [5, 0x329f96a0], [0, 0x32eecec0], [1, 0x333e06e0], [7, 0x338d3f00]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 13]'
  input1_tms: '[hslice: 13]'
  input2_tms: '[hslice: 13]'
  input3_tms: '[hslice: 13]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x33fb91c0]]'
  output1_dram_buffers: '[[2, 0x370154e0]]'
  output2_dram_buffers: '[[2, 0x3afa8e80]]'
  output3_dram_buffers: '[[2, 0x3d395240]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 26
  output0_mb_r: 8
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 26
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 26
  output1_mb_r: 8
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 26
  op1_mb_r: 8
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 26
  output2_mb_r: 8
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 26
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 26
  output3_mb_r: 8
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 26
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=13
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=26
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=26
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=10
# tm_c_factor[1]=13
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=26
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=26
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=10
# tm_c_factor[2]=13
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=13
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=13
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=13
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=13
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=13
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=6
#Test id=15
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 3
  input_mb_c: 13
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x301fdee0], [2, 0x306f1700], [1, 0x30be4f20], [4, 0x310d8740], [3, 0x315cbf60], [2, 0x31abf780], [4, 0x31fb2fa0], [1, 0x324a67c0]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 6
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 26]'
  input1_tms: '[hslice: 26]'
  input2_tms: '[hslice: 26]'
  input3_tms: '[hslice: 26]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33152120]]'
  output1_dram_buffers: '[[3, 0x35d567c0]]'
  output2_dram_buffers: '[[3, 0x3882f140]]'
  output3_dram_buffers: '[[3, 0x3b66b500]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 52
  output0_mb_r: 12
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 52
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 12
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 52
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 52
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 52
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 52
  output3_mb_r: 12
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 52
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=26
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=26
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=26
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=13
# tm_c_factor[1]=26
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=26
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=26
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=13
# tm_c_factor[2]=26
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=26
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=26
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=13
# tm_c_factor[3]=26
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=26
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=26
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=13
#Test id=16
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 7
  op0_loc_r: 3
  op1_loc_c: 8
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 6
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x307fde20], [0, 0x309f9d40], [5, 0x30bf5c60], [7, 0x30df1b80], [5, 0x30fedaa0], [6, 0x311e99c0], [5, 0x313e58e0], [6, 0x315e1800], [4, 0x317dd720], [7, 0x319d9640], [5, 0x31bd5560], [0, 0x31dd1480], [0, 0x31fcd3a0], [4, 0x321c92c0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 49]'
  input1_tms: '[hslice: 49]'
  input2_tms: '[hslice: 49]'
  input3_tms: '[hslice: 49]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x37794820]]'
  output1_dram_buffers: '[[4, 0x39a7a1a0]]'
  output2_dram_buffers: '[[4, 0x3b659760]]'
  output3_dram_buffers: '[[4, 0x3ddc1600]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 49
  output0_mb_r: 2
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 49
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 49
  output1_mb_r: 2
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 49
  op1_mb_r: 1
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 49
  output2_mb_r: 2
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 49
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 49
  output3_mb_r: 2
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 49
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=49
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=49
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=49
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=7
# tm_c_factor[1]=49
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=49
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=49
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=7
# tm_c_factor[2]=49
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=98
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=98
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=14
# tm_c_factor[3]=49
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=49
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=49
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=7
#Test id=17
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 7
  op0_loc_r: 4
  op1_loc_c: 8
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 4
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x32b06340], [2, 0x32dd1360], [3, 0x3309c380], [1, 0x333673a0], [1, 0x336323c0], [7, 0x338fd3e0], [5, 0x33bc8400], [5, 0x33e93420], [3, 0x3415e440], [0, 0x34429460], [5, 0x346f4480], [1, 0x349bf4a0], [4, 0x34c8a4c0], [3, 0x34f554e0], [6, 0x35220500]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 3
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 5]'
  input1_tms: '[hslice: 5]'
  input2_tms: '[hslice: 5]'
  input3_tms: '[hslice: 5]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x35537060]]'
  output1_dram_buffers: '[[3, 0x37f28ce0]]'
  output2_dram_buffers: '[[3, 0x3ac11240]]'
  output3_dram_buffers: '[[3, 0x3d5f9720]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 20
  output0_mb_r: 3
  output0_mb_c: 22
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 20
  op0_mb_r: 1
  op0_mb_c: 11
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 3
  output1_mb_c: 22
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 20
  op1_mb_r: 1
  op1_mb_c: 11
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 3
  output2_mb_c: 22
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 20
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 3
  output3_mb_c: 22
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 20
  op3_mb_r: 1
  op3_mb_c: 11
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=5
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=5
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=5
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=5
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=5
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=5
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=5
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=5
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=10
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=10
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=18
- device: GRAYSKULL
  entries: 20
  op0_loc_c: 5
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 5
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 12
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x30140f20], [5, 0x3050ff40], [0, 0x308def60], [5, 0x30cadf80], [5, 0x3107cfa0], [1, 0x3144bfc0], [3, 0x3181afe0], [0, 0x31bea000], [3, 0x31fb9020], [7, 0x32388040], [6, 0x32757060], [7, 0x32b26080]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 3
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 64]'
  input1_tms: '[hslice: 64]'
  input2_tms: '[hslice: 64]'
  input3_tms: '[hslice: 64]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x346c4360]]'
  output1_dram_buffers: '[[2, 0x376c8f60]]'
  output2_dram_buffers: '[[2, 0x3a493180]]'
  output3_dram_buffers: '[[2, 0x3d249ae0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 64
  output0_mb_r: 6
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 64
  op0_mb_r: 3
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 64
  output1_mb_r: 6
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 64
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 64
  output2_mb_r: 6
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 64
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 64
  output3_mb_r: 6
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 64
  op3_mb_r: 3
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=64
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=64
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=64
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=32
# tm_c_factor[1]=64
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=64
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=64
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=32
# tm_c_factor[2]=64
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=192
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=192
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=96
# tm_c_factor[3]=64
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=64
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=64
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=32
#Test id=19
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 7
  op0_loc_r: 4
  op1_loc_c: 8
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 4
  input_mb_r: 1
  input_mb_c: 5
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x3803ef60], [2, 0x380b8d80], [3, 0x38132ba0], [5, 0x381ac9c0], [3, 0x382267e0], [5, 0x382a0600], [4, 0x3831a420], [1, 0x38394240], [4, 0x3840e060], [1, 0x38487e80], [4, 0x38501ca0], [6, 0x3857bac0], [0, 0x385f58e0], [0, 0x3866f700], [4, 0x386e9520], [6, 0x38763340], [7, 0x387dd160], [6, 0x38856f80], [5, 0x388d0da0], [2, 0x3894abc0], [6, 0x389c49e0], [6, 0x38a3e800], [4, 0x38ab8620], [1, 0x38b32440], [3, 0x38bac260], [2, 0x38c26080], [3, 0x38c9fea0], [4, 0x38d19cc0], [5, 0x38d93ae0], [5, 0x38e0d900], [0, 0x38e87720], [6, 0x38f01540], [0, 0x38f7b360], [3, 0x38ff5180], [0, 0x3906efa0], [0, 0x390e8dc0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 15]'
  input1_tms: '[hslice: 15]'
  input2_tms: '[hslice: 15]'
  input3_tms: '[hslice: 15]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3b08dec0]]'
  output1_dram_buffers: '[[2, 0x3cc50dc0]]'
  output2_dram_buffers: '[[2, 0x3ddb37e0]]'
  output3_dram_buffers: '[[2, 0x3eedafc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 60
  output0_mb_r: 6
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 60
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 60
  output1_mb_r: 6
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 60
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 60
  output2_mb_r: 6
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 60
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 60
  output3_mb_r: 6
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 60
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=15
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=15
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=15
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=15
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=15
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=15
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=15
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=15
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=15
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=15
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=30
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=30
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=5
#Test id=20
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 6
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x3537d9e0], [0, 0x353c3a00], [2, 0x35409a20], [6, 0x3544fa40], [4, 0x35495a60], [4, 0x354dba80], [2, 0x35521aa0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3597c0a0], [0, 0x35a710c0]]'
  output1_dram_buffers: '[[2, 0x35cd3740]]'
  output2_dram_buffers: '[[2, 0x3bd45ae0], [0, 0x3bdc0300], [2, 0x3be3ab20], [6, 0x3beb5340]]'
  output3_dram_buffers: '[[2, 0x3de5dcc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 4
  output0_mb_r: 2
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 4
  op0_mb_r: 2
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 1
  output1_mb_c: 7
  output1_ub_r: 4
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 4
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 4
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 7
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 4
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=21
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 5
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 2
  input_mb_r: 11
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x30070d00], [7, 0x30289120], [6, 0x304a1540], [7, 0x306b9960], [5, 0x308d1d80], [2, 0x30aea1a0], [4, 0x30d025c0], [6, 0x30f1a9e0], [3, 0x31132e00], [7, 0x3134b220], [6, 0x31563640], [3, 0x3177ba60], [3, 0x31993e80], [4, 0x31bac2a0], [4, 0x31dc46c0], [5, 0x31fdcae0], [4, 0x321f4f00], [5, 0x3240d320], [1, 0x32625740], [6, 0x3283db60], [3, 0x32a55f80], [6, 0x32c6e3a0], [7, 0x32e867c0], [2, 0x3309ebe0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 24]'
  input1_tms: '[hslice: 24]'
  input2_tms: '[hslice: 24]'
  input3_tms: '[hslice: 24]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x332b9500]]'
  output1_dram_buffers: '[[5, 0x365002c0]]'
  output2_dram_buffers: '[[5, 0x3974bc80]]'
  output3_dram_buffers: '[[5, 0x3ca03a60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 33
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 48
  op0_mb_r: 11
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 48
  output1_mb_r: 33
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 48
  op1_mb_r: 11
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 33
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 48
  op2_mb_r: 11
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 33
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 48
  op3_mb_r: 11
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=24
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=24
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=24
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=24
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=24
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=24
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=22
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x306fb480], [1, 0x308e2ca0], [3, 0x30aca4c0], [4, 0x30cb1ce0], [3, 0x30e99500], [2, 0x31080d20], [6, 0x31268540], [2, 0x3144fd60], [0, 0x31637580], [5, 0x3181eda0], [1, 0x31a065c0], [2, 0x31bedde0], [2, 0x31dd5600], [3, 0x31fbce20], [5, 0x321a4640], [5, 0x3238be60], [5, 0x32573680], [3, 0x3275aea0], [2, 0x329426c0], [4, 0x32b29ee0], [3, 0x32d11700], [4, 0x32ef8f20], [6, 0x330e0740], [2, 0x332c7f60]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 3]'
  input1_tms: '[hslice: 3]'
  input2_tms: '[hslice: 3]'
  input3_tms: '[hslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33f3c1a0]]'
  output1_dram_buffers: '[[3, 0x36e26880]]'
  output2_dram_buffers: '[[3, 0x3a215c00]]'
  output3_dram_buffers: '[[3, 0x3d167e40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 6
  output0_mb_c: 20
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 5
  op0_grid_size_r: 6
  op0_t: 6
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 6
  output1_mb_c: 20
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 6
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 6
  output2_mb_r: 6
  output2_mb_c: 20
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 6
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 6
  output3_mb_c: 20
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 6
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=3
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=15
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=15
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=5
# tm_c_factor[1]=3
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=3
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=3
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=23
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 0
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x38821ce0], [7, 0x3882ef00], [0, 0x3883c120], [7, 0x38849340], [0, 0x38856560], [0, 0x38863780], [3, 0x388709a0], [4, 0x3887dbc0], [2, 0x3888ade0], [2, 0x38898000], [4, 0x388a5220], [5, 0x388b2440], [6, 0x388bf660], [6, 0x388cc880], [1, 0x388d9aa0], [4, 0x388e6cc0], [7, 0x388f3ee0], [2, 0x38901100], [3, 0x3890e320], [4, 0x3891b540], [1, 0x38928760], [3, 0x38935980], [1, 0x38942ba0], [6, 0x3894fdc0], [1, 0x3895cfe0], [6, 0x3896a200], [6, 0x38977420], [2, 0x38984640], [7, 0x38991860], [4, 0x3899ea80], [4, 0x389abca0], [1, 0x389b8ec0], [5, 0x389c60e0], [7, 0x389d3300], [3, 0x389e0520], [3, 0x389ed740], [6, 0x389fa960], [1, 0x38a07b80], [7, 0x38a14da0], [0, 0x38a21fc0], [3, 0x38a2f1e0], [1, 0x38a3c400], [6, 0x38a49620], [1, 0x38a56840], [0, 0x38a63a60], [7, 0x38a70c80], [6, 0x38a7dea0], [3, 0x38a8b0c0], [5, 0x38a982e0], [6, 0x38aa5500], [7, 0x38ab2720], [4, 0x38abf940], [7, 0x38accb60], [3, 0x38ad9d80], [2, 0x38ae6fa0], [2, 0x38af41c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 7]'
  input1_tms: '[hslice: 7]'
  input2_tms: '[hslice: 7]'
  input3_tms: '[hslice: 7]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3a2b0680], [7, 0x3a30c4a0], [0, 0x3a3682c0], [7, 0x3a3c40e0], [0, 0x3a41ff00], [0, 0x3a47bd20], [3, 0x3a4d7b40], [4, 0x3a533960]]'
  output1_dram_buffers: '[[0, 0x3ac59360], [7, 0x3acb5180], [0, 0x3ad10fa0], [7, 0x3ad6cdc0], [0, 0x3adc8be0], [0, 0x3ae24a00], [3, 0x3ae80820], [4, 0x3aedc640]]'
  output2_dram_buffers: '[[0, 0x3b0740c0], [7, 0x3b0ee8e0], [0, 0x3b169100], [7, 0x3b1e3920], [0, 0x3b25e140], [0, 0x3b2d8960]]'
  output3_dram_buffers: '[[0, 0x3b8995c0], [7, 0x3b913de0], [0, 0x3b98e600], [7, 0x3ba08e20], [0, 0x3ba83640], [0, 0x3bafde60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 7
  output0_mb_r: 1
  output0_mb_c: 2
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 7
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 7
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 7
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 7
  output2_mb_r: 8
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 7
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 7
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 8
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 7
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=7
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=7
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=7
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=7
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=7
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=7
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=7
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=7
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=7
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=7
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=7
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=7
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=24
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x3d938e00], [1, 0x3d949220], [4, 0x3d959640], [0, 0x3d969a60], [3, 0x3d979e80], [5, 0x3d98a2a0], [0, 0x3d99a6c0], [5, 0x3d9aaae0], [7, 0x3d9baf00], [5, 0x3d9cb320], [5, 0x3d9db740], [1, 0x3d9ebb60], [1, 0x3d9fbf80], [2, 0x3da0c3a0], [5, 0x3da1c7c0], [1, 0x3da2cbe0], [4, 0x3da3d000], [0, 0x3da4d420], [6, 0x3da5d840], [6, 0x3da6dc60], [3, 0x3da7e080], [1, 0x3da8e4a0], [7, 0x3da9e8c0], [4, 0x3daaece0], [6, 0x3dabf100], [3, 0x3dacf520], [5, 0x3dadf940], [7, 0x3daefd60], [3, 0x3db00180], [4, 0x3db105a0], [1, 0x3db209c0], [1, 0x3db30de0], [0, 0x3db41200], [3, 0x3db51620], [7, 0x3db61a40], [1, 0x3db71e60], [1, 0x3db82280], [3, 0x3db926a0], [3, 0x3dba2ac0], [3, 0x3dbb2ee0], [4, 0x3dbc3300], [3, 0x3dbd3720], [0, 0x3dbe3b40], [5, 0x3dbf3f60], [3, 0x3dc04380], [3, 0x3dc147a0], [7, 0x3dc24bc0], [1, 0x3dc34fe0], [6, 0x3dc45400], [2, 0x3dc55820], [0, 0x3dc65c40], [5, 0x3dc76060], [6, 0x3dc86480], [6, 0x3dc968a0], [3, 0x3dca6cc0], [4, 0x3dcb70e0], [3, 0x3dcc7500], [5, 0x3dcd7920], [2, 0x3dce7d40], [1, 0x3dcf8160], [3, 0x3dd08580], [5, 0x3dd189a0], [5, 0x3dd28dc0], [6, 0x3dd391e0]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 8]'
  input1_tms: '[hslice: 8]'
  input2_tms: '[hslice: 8]'
  input3_tms: '[hslice: 8]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3e590560]]'
  output1_dram_buffers: '[[5, 0x3eb13f20]]'
  output2_dram_buffers: '[[5, 0x3f7dfee0]]'
  output3_dram_buffers: '[[5, 0x3fbeffa0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 8
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 8
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 8
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 8
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 8
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 8
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 8
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=8
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=8
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=8
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=8
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=25
- device: GRAYSKULL
  entries: 28
  op0_loc_c: 7
  op0_loc_r: 2
  op1_loc_c: 8
  op1_loc_r: 4
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 1
  input_mb_c: 8
  input_ub_r: 4
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x300cb360], [1, 0x307e7380], [1, 0x30f033a0], [2, 0x3161f3c0], [3, 0x31d3b3e0], [2, 0x32457400], [0, 0x32b73420]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 7
  feeder_loc_c: 4
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 16]'
  input1_tms: '[hslice: 16]'
  input2_tms: '[hslice: 16]'
  input3_tms: '[hslice: 16]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33299bc0]]'
  output1_dram_buffers: '[[3, 0x3657c460]]'
  output2_dram_buffers: '[[3, 0x397e7dc0]]'
  output3_dram_buffers: '[[3, 0x3cd4c400]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 28
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 32
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 32
  output1_mb_r: 28
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 32
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 32
  output2_mb_r: 28
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 32
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 32
  output3_mb_r: 28
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 32
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=16
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=16
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=16
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=16
# tm_c_factor[1]=16
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=16
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=16
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=16
# tm_c_factor[2]=16
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=16
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=16
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=16
# tm_c_factor[3]=16
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=16
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=16
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=16
#Test id=26
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 3
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x38aef1a0], [7, 0x38b06140], [7, 0x38b1d0e0], [7, 0x38b34080], [0, 0x38b4b020], [3, 0x38b61fc0], [6, 0x38b78f60], [2, 0x38b8ff00]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 32]'
  input1_tms: '[hslice: 32]'
  input2_tms: '[hslice: 32]'
  input3_tms: '[hslice: 32]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3ebdd160], [7, 0x3ec1a580], [7, 0x3ec579a0]]'
  output1_dram_buffers: '[[4, 0x3f4d0260], [7, 0x3f50d680], [7, 0x3f54aaa0]]'
  output2_dram_buffers: '[[4, 0x3f5ca4c0], [7, 0x3f6078e0], [7, 0x3f644d00]]'
  output3_dram_buffers: '[[4, 0x3f82d8a0], [7, 0x3f86acc0], [7, 0x3f8a80e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 32
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 7
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 32
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 32
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 7
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 32
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 32
  output2_mb_r: 1
  output2_mb_c: 7
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 32
  op2_mb_r: 1
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 3
  output3_t: 32
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 7
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 32
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=32
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=32
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=32
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=32
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=32
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=32
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=32
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=32
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=32
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=32
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=32
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=32
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=4
#Test id=27
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 7
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x39f5f580], [2, 0x39f799a0], [0, 0x39f93dc0], [0, 0x39fae1e0], [4, 0x39fc8600], [4, 0x39fe2a20], [5, 0x39ffce40], [5, 0x3a017260], [6, 0x3a031680], [4, 0x3a04baa0], [3, 0x3a065ec0], [3, 0x3a0802e0], [5, 0x3a09a700], [3, 0x3a0b4b20], [2, 0x3a0cef40], [3, 0x3a0e9360]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3b925840], [2, 0x3b9f7860]]'
  output1_dram_buffers: '[[3, 0x3d28d1e0], [2, 0x3d319200], [0, 0x3d3a5220]]'
  output2_dram_buffers: '[[3, 0x3f249040], [2, 0x3f2d5060], [0, 0x3f361080]]'
  output3_dram_buffers: '[[3, 0x3f5ceaa0], [2, 0x3f637ac0], [0, 0x3f6a0ae0], [0, 0x3f709b00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 4
  output0_mb_r: 4
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 4
  op0_mb_r: 4
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 2
  output1_mb_c: 1
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 4
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 3
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 1
  output2_mb_c: 2
  output2_ub_r: 8
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 4
  output3_mb_r: 1
  output3_mb_c: 3
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 4
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=28
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 6
  op0_loc_r: 2
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 7
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 6
  input_mb_r: 4
  input_mb_c: 4
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x30153ec0], [7, 0x31152ee0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 2
  feeder_loc_c: 5
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x32368140]]'
  output1_dram_buffers: '[[7, 0x346c3580]]'
  output2_dram_buffers: '[[7, 0x3ae2ae80]]'
  output3_dram_buffers: '[[7, 0x3dbf6980]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 12
  output0_mb_r: 56
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 12
  op0_mb_r: 7
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 12
  output1_mb_r: 56
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 12
  op1_mb_r: 2
  op1_mb_c: 2
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 12
  output2_mb_r: 56
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 12
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 12
  output3_mb_r: 56
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 12
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=29
- device: GRAYSKULL
  entries: 6
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 9
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 3
  input_mb_r: 1
  input_mb_c: 16
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x35435420], [4, 0x354c7840], [3, 0x35559c60], [7, 0x355ec080], [2, 0x3567e4a0], [4, 0x357108c0], [2, 0x357a2ce0], [1, 0x35835100], [4, 0x358c7520], [7, 0x35959940], [5, 0x359ebd60], [6, 0x35a7e180], [0, 0x35b105a0], [3, 0x35ba29c0], [7, 0x35c34de0], [0, 0x35cc7200]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 8]'
  input1_tms: '[hslice: 8]'
  input2_tms: '[hslice: 8]'
  input3_tms: '[hslice: 8]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x369d7440]]'
  output1_dram_buffers: '[[3, 0x389f3e00]]'
  output2_dram_buffers: '[[3, 0x3e041160]]'
  output3_dram_buffers: '[[3, 0x3eaca6c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 8
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 24
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 8
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 1
  op1_t: 24
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 24
  output2_mb_r: 8
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 24
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 8
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 24
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 12
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=8
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=8
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=32
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=32
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=16
# tm_c_factor[2]=8
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=16
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=16
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=8
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=30
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 2
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x30196d20], [4, 0x3028bd40], [7, 0x30380d60], [7, 0x30475d80], [4, 0x3056ada0], [7, 0x3065fdc0], [1, 0x30754de0], [0, 0x30849e00], [6, 0x3093ee20], [0, 0x30a33e40], [3, 0x30b28e60], [1, 0x30c1de80]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 3]'
  input1_tms: '[hslice: 3]'
  input2_tms: '[hslice: 3]'
  input3_tms: '[hslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3a985b80], [4, 0x3ac64ba0], [7, 0x3af43bc0], [7, 0x3b222be0]]'
  output1_dram_buffers: '[[2, 0x3bc22580], [4, 0x3bd91da0], [7, 0x3bf015c0], [7, 0x3c070de0], [4, 0x3c1e0600], [7, 0x3c34fe20], [1, 0x3c4bf640], [0, 0x3c62ee60]]'
  output2_dram_buffers: '[[2, 0x3c97e7c0], [4, 0x3caedfe0], [7, 0x3cc5d800], [7, 0x3cdcd020], [4, 0x3cf3c840], [7, 0x3d0ac060], [1, 0x3d21b880], [0, 0x3d38b0a0]]'
  output3_dram_buffers: '[[2, 0x3e97fd20], [4, 0x3ec5ed40], [7, 0x3ef3dd60], [7, 0x3f21cd80]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 1
  output0_mb_c: 7
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 6
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 4
  output1_t: 6
  output1_mb_r: 2
  output1_mb_c: 14
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 6
  op1_mb_r: 2
  op1_mb_c: 14
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 4
  output2_t: 6
  output2_mb_r: 2
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 6
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 6
  output3_mb_r: 2
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 7
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 6
  op3_mb_r: 2
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=3
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=3
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=3
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=3
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=31
- device: GRAYSKULL
  entries: 56
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 3
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x30f58400], [6, 0x310ad820], [6, 0x31202c40], [5, 0x31358060], [0, 0x314ad480], [2, 0x316028a0], [5, 0x31757cc0], [2, 0x318ad0e0], [7, 0x31a02500], [2, 0x31b57920], [2, 0x31cacd40], [0, 0x31e02160], [3, 0x31f57580], [6, 0x320ac9a0], [1, 0x32201dc0], [2, 0x323571e0], [1, 0x324ac600], [6, 0x32601a20], [3, 0x32756e40], [7, 0x328ac260], [2, 0x32a01680], [4, 0x32b56aa0], [0, 0x32cabec0], [2, 0x32e012e0], [2, 0x32f56700]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 5
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 30]'
  input1_tms: '[hslice: 30]'
  input2_tms: '[hslice: 30]'
  input3_tms: '[hslice: 30]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x33ae5a80]]'
  output1_dram_buffers: '[[7, 0x35f1f8c0]]'
  output2_dram_buffers: '[[7, 0x3b99e000]]'
  output3_dram_buffers: '[[7, 0x3db12900]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 60
  output0_mb_r: 5
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 60
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 60
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 60
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 60
  output2_mb_r: 5
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 60
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 60
  output3_mb_r: 5
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 60
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 112
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=30
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=30
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=30
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=30
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=30
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=30
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=30
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=30
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=30
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=30
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=30
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=30
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=6
#Test id=32
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 3
  input_mb_r: 1
  input_mb_c: 15
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x301e8380], [0, 0x306e7ea0], [3, 0x30be79c0], [7, 0x310e74e0], [0, 0x315e7000], [4, 0x31ae6b20], [4, 0x31fe6640], [5, 0x324e6160]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 21]'
  input1_tms: '[hslice: 21]'
  input2_tms: '[hslice: 21]'
  input3_tms: '[hslice: 21]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33e73580]]'
  output1_dram_buffers: '[[3, 0x36fb7420]]'
  output2_dram_buffers: '[[3, 0x39dbb6e0]]'
  output3_dram_buffers: '[[3, 0x3d48f820]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 63
  output0_mb_r: 2
  output0_mb_c: 20
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 63
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 63
  output1_mb_r: 2
  output1_mb_c: 20
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 63
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 63
  output2_mb_r: 2
  output2_mb_c: 20
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 5
  op2_grid_size_r: 1
  op2_t: 63
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 63
  output3_mb_r: 2
  output3_mb_c: 20
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 63
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=21
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=21
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=21
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=7
# tm_c_factor[1]=21
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=21
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=21
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=7
# tm_c_factor[2]=21
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=105
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=105
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=28
# tm_c_factor[3]=21
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=21
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=21
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=7
#Test id=33
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 5
  op0_loc_r: 2
  op1_loc_c: 6
  op1_loc_r: 3
  op2_loc_c: 7
  op2_loc_r: 3
  op3_loc_c: 8
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 13
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x30029a60], [4, 0x3051d280], [7, 0x30a10aa0], [5, 0x30f042c0], [0, 0x313f7ae0], [2, 0x318eb300], [1, 0x31ddeb20], [4, 0x322d2340]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 13]'
  input1_tms: '[hslice: 13]'
  input2_tms: '[hslice: 13]'
  input3_tms: '[hslice: 13]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3282f1e0]]'
  output1_dram_buffers: '[[3, 0x34fe6de0]]'
  output2_dram_buffers: '[[3, 0x386f3e20]]'
  output3_dram_buffers: '[[3, 0x3b733220]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 12
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 13
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 13
  output1_mb_r: 12
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 13
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 12
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 13
  op2_mb_r: 6
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 13
  output3_mb_r: 12
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 13
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=13
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=13
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=13
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=5
# tm_c_factor[1]=13
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=13
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=13
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=5
# tm_c_factor[2]=13
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=13
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=13
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=5
# tm_c_factor[3]=13
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=52
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=52
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=13
#Test id=34
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 4
  op0_loc_r: 5
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 13
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x32193580], [4, 0x32686da0], [7, 0x32b7a5c0], [4, 0x3306dde0], [1, 0x33561600], [4, 0x33a54e20], [6, 0x33f48640], [5, 0x3443be60]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 13]'
  input1_tms: '[hslice: 13]'
  input2_tms: '[hslice: 13]'
  input3_tms: '[hslice: 13]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34942480]]'
  output1_dram_buffers: '[[4, 0x370f4080]]'
  output2_dram_buffers: '[[4, 0x398b02e0]]'
  output3_dram_buffers: '[[4, 0x3c83b880]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 2
  output0_mb_c: 24
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 13
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 13
  output1_mb_r: 2
  output1_mb_c: 24
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 1
  op1_t: 13
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 2
  output2_mb_c: 24
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 13
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 13
  output3_mb_r: 2
  output3_mb_c: 24
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 13
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=13
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=13
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=13
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=5
# tm_c_factor[1]=13
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=52
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=52
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=13
# tm_c_factor[2]=13
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=13
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=13
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=5
# tm_c_factor[3]=13
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=13
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=13
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=5
#Test id=35
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 7
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x3d880100], [6, 0x3d8b4920], [1, 0x3d8e9140], [0, 0x3d91d960], [5, 0x3d952180], [4, 0x3d9869a0], [3, 0x3d9bb1c0], [4, 0x3d9ef9e0], [0, 0x3da24200], [0, 0x3da58a20], [4, 0x3da8d240], [3, 0x3dac1a60], [3, 0x3daf6280], [2, 0x3db2aaa0], [1, 0x3db5f2c0], [2, 0x3db93ae0], [4, 0x3dbc8300], [0, 0x3dbfcb20], [7, 0x3dc31340], [6, 0x3dc65b60], [2, 0x3dc9a380], [4, 0x3dcceba0], [2, 0x3dd033c0], [4, 0x3dd37be0], [0, 0x3dd6c400], [3, 0x3dda0c20], [4, 0x3ddd5440], [1, 0x3de09c60]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3e7f7440], [6, 0x3e8c9460], [1, 0x3e99b480], [0, 0x3ea6d4a0], [5, 0x3eb3f4c0], [4, 0x3ec114e0], [3, 0x3ece3500]]'
  output1_dram_buffers: '[[6, 0x3ee95740], [6, 0x3ef67760], [1, 0x3f039780], [0, 0x3f10b7a0], [5, 0x3f1dd7c0], [4, 0x3f2af7e0], [3, 0x3f381800]]'
  output2_dram_buffers: '[[6, 0x3f478d20], [6, 0x3f54ad40], [1, 0x3f61cd60], [0, 0x3f6eed80], [5, 0x3f7c0da0], [4, 0x3f892dc0], [3, 0x3f964de0]]'
  output3_dram_buffers: '[[6, 0x3fa3cfa0], [6, 0x3faf4bc0], [1, 0x3fbac7e0], [0, 0x3fc64400], [5, 0x3fd1c020], [4, 0x3fdd3c40], [3, 0x3fe8b860], [4, 0x3ff43480]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 4
  output0_mb_r: 6
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 4
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 4
  output1_mb_r: 4
  output1_mb_c: 2
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 4
  op1_mb_r: 4
  op1_mb_c: 2
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 7
  output2_t: 4
  output2_mb_r: 3
  output2_mb_c: 2
  output2_ub_r: 8
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 4
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 4
  output3_t: 4
  output3_mb_r: 6
  output3_mb_c: 1
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 4
  op3_t: 4
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=36
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 5
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 9
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 15
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x36be9000], [7, 0x36dd0820], [7, 0x36fb8040], [1, 0x3719f860], [0, 0x37387080], [7, 0x3756e8a0], [5, 0x377560c0], [4, 0x3793d8e0], [7, 0x37b25100], [0, 0x37d0c920]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 30]'
  input1_tms: '[hslice: 30]'
  input2_tms: '[hslice: 30]'
  input3_tms: '[hslice: 30]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x38708500]]'
  output1_dram_buffers: '[[6, 0x3af37080]]'
  output2_dram_buffers: '[[6, 0x3d558c60]]'
  output3_dram_buffers: '[[6, 0x3eb2cb40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 2
  output0_mb_c: 20
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 30
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 30
  output1_mb_r: 2
  output1_mb_c: 20
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 30
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 30
  output2_mb_r: 2
  output2_mb_c: 20
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 30
  op2_mb_r: 2
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 30
  output3_mb_r: 2
  output3_mb_c: 20
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 30
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=30
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=30
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=30
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=30
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=30
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=30
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=30
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=60
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=60
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=30
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=60
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=60
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=12
#Test id=37
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 7
  op0_loc_r: 0
  op1_loc_c: 8
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 2
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x303dcd20], [6, 0x30ad8540], [4, 0x311d3d60], [4, 0x318cf580], [1, 0x31fcada0], [3, 0x326c65c0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 4
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 55]'
  input1_tms: '[hslice: 55]'
  input2_tms: '[hslice: 55]'
  input3_tms: '[hslice: 55]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x32effd80]]'
  output1_dram_buffers: '[[5, 0x35b0c040]]'
  output2_dram_buffers: '[[5, 0x38e87600]]'
  output3_dram_buffers: '[[5, 0x3c2c4e20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 55
  output0_mb_r: 12
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 55
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 55
  output1_mb_r: 12
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 55
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 55
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 55
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 55
  output3_mb_r: 12
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 55
  op3_mb_r: 12
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=55
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=55
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=55
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=55
# tm_c_factor[1]=55
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=55
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=55
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=55
# tm_c_factor[2]=55
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=55
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=55
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=55
# tm_c_factor[3]=55
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=55
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=55
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=55
#Test id=38
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 1
  op1_loc_c: 8
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[7, 0x36921da0], [3, 0x36937bc0], [0, 0x3694d9e0], [0, 0x36963800], [2, 0x36979620], [5, 0x3698f440], [3, 0x369a5260], [5, 0x369bb080], [6, 0x369d0ea0], [6, 0x369e6cc0], [6, 0x369fcae0], [1, 0x36a12900], [5, 0x36a28720], [1, 0x36a3e540], [7, 0x36a54360], [6, 0x36a6a180], [0, 0x36a7ffa0], [4, 0x36a95dc0], [3, 0x36aabbe0], [2, 0x36ac1a00], [4, 0x36ad7820], [6, 0x36aed640], [6, 0x36b03460], [5, 0x36b19280], [7, 0x36b2f0a0], [2, 0x36b44ec0], [3, 0x36b5ace0], [3, 0x36b70b00], [5, 0x36b86920], [0, 0x36b9c740], [2, 0x36bb2560], [6, 0x36bc8380], [3, 0x36bde1a0], [4, 0x36bf3fc0], [6, 0x36c09de0], [0, 0x36c1fc00], [7, 0x36c35a20], [4, 0x36c4b840], [6, 0x36c61660], [7, 0x36c77480], [4, 0x36c8d2a0], [1, 0x36ca30c0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 5]'
  input1_tms: '[hslice: 5]'
  input2_tms: '[hslice: 5]'
  input3_tms: '[hslice: 5]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3e670e60], [3, 0x3e70a080], [0, 0x3e7a32a0], [0, 0x3e83c4c0], [2, 0x3e8d56e0], [5, 0x3e96e900]]'
  output1_dram_buffers: '[[7, 0x3f1ef640], [3, 0x3f288860], [0, 0x3f321a80], [0, 0x3f3baca0], [2, 0x3f453ec0], [5, 0x3f4ed0e0]]'
  output2_dram_buffers: '[[7, 0x3f713f00], [3, 0x3f7ad120], [0, 0x3f846340], [0, 0x3f8df560], [2, 0x3f978780], [5, 0x3fa119a0]]'
  output3_dram_buffers: '[[7, 0x3fac4160], [3, 0x3fb5d380], [0, 0x3fbf65a0], [0, 0x3fc8f7c0], [2, 0x3fd289e0], [5, 0x3fdc1c00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 5
  output0_mb_r: 1
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 7
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 5
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 5
  output1_mb_r: 1
  output1_mb_c: 14
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 5
  op1_mb_r: 1
  op1_mb_c: 14
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 5
  output2_mb_r: 1
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 5
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 2
  output3_grid_size_r: 3
  output3_t: 5
  output3_mb_r: 2
  output3_mb_c: 14
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 5
  op3_mb_r: 2
  op3_mb_c: 14
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=5
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=5
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=5
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=5
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=5
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=5
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=5
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=5
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=10
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=10
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=39
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 7
  op1_loc_r: 3
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x3792f900], [7, 0x37952920], [3, 0x37975940], [3, 0x37998960], [4, 0x379bb980], [7, 0x379de9a0], [3, 0x37a019c0], [2, 0x37a249e0], [2, 0x37a47a00], [6, 0x37a6aa20], [3, 0x37a8da40], [5, 0x37ab0a60], [1, 0x37ad3a80], [2, 0x37af6aa0], [7, 0x37b19ac0], [4, 0x37b3cae0], [7, 0x37b5fb00], [4, 0x37b82b20], [5, 0x37ba5b40], [4, 0x37bc8b60], [5, 0x37bebb80], [3, 0x37c0eba0], [3, 0x37c31bc0], [4, 0x37c54be0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x392fd980], [7, 0x393cf9a0], [3, 0x394a19c0], [3, 0x395739e0]]'
  output1_dram_buffers: '[[0, 0x3b6bd260], [7, 0x3b78f280], [3, 0x3b8612a0], [3, 0x3b9332c0]]'
  output2_dram_buffers: '[[0, 0x3cbaca20], [7, 0x3cc7ea40], [3, 0x3cd50a60], [3, 0x3ce22a80]]'
  output3_dram_buffers: '[[0, 0x3e1cd560], [7, 0x3e201d80], [3, 0x3e2365a0], [3, 0x3e26adc0], [4, 0x3e29f5e0], [7, 0x3e2d3e00], [3, 0x3e308620], [2, 0x3e33ce40], [2, 0x3e371660], [6, 0x3e3a5e80], [3, 0x3e3da6a0], [5, 0x3e40eec0], [1, 0x3e4436e0], [2, 0x3e477f00], [7, 0x3e4ac720], [4, 0x3e4e0f40]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 1
  output0_mb_c: 3
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 4
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 4
  output1_mb_r: 4
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 4
  op1_mb_r: 4
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 4
  output2_mb_r: 2
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 4
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 2
  output3_grid_size_r: 8
  output3_t: 4
  output3_mb_r: 1
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 8
  op3_t: 4
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=40
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 2
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x3b9fba00], [5, 0x3bb59a20], [7, 0x3bcb7a40], [2, 0x3be15a60], [1, 0x3bf73a80], [1, 0x3c0d1aa0], [5, 0x3c22fac0], [1, 0x3c38dae0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3c565180], [5, 0x3c7951a0], [7, 0x3c9c51c0], [2, 0x3cbf51e0], [1, 0x3ce25200]]'
  output1_dram_buffers: '[[6, 0x3d10a6e0], [5, 0x3d3c6700], [7, 0x3d682720], [2, 0x3d93e740]]'
  output2_dram_buffers: '[[6, 0x3dc9b8e0], [5, 0x3df57900], [7, 0x3e213920], [2, 0x3e4cf940]]'
  output3_dram_buffers: '[[6, 0x3e9cb4c0], [5, 0x3ec874e0], [7, 0x3ef43500], [2, 0x3f1ff520]]'
  output0_grid_size_c: 5
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 4
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 5
  op0_grid_size_r: 1
  op0_t: 4
  op0_mb_r: 4
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 4
  output1_mb_r: 1
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 4
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 4
  output2_mb_r: 1
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 8
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 4
  output3_mb_r: 1
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 4
  op3_mb_r: 1
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=10
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=10
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=41
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 1
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 10
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x31df8580], [6, 0x31ec37a0], [6, 0x31f8e9c0], [6, 0x32059be0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x38fdd5e0]]'
  output1_dram_buffers: '[[3, 0x3b3c61a0]]'
  output2_dram_buffers: '[[3, 0x3d3d51a0]]'
  output3_dram_buffers: '[[3, 0x3e79d1e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 20
  output0_mb_c: 5
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 8
  op0_mb_r: 2
  op0_mb_c: 5
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 20
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 8
  op1_mb_r: 10
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 20
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 8
  op2_mb_r: 5
  op2_mb_c: 5
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 20
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 8
  op3_mb_r: 5
  op3_mb_c: 5
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=42
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 6
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 6
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x35df6c80], [5, 0x35e39d20], [3, 0x35e7cdc0], [3, 0x35ebfe60], [5, 0x35f02f00], [6, 0x35f45fa0], [4, 0x35f89040], [1, 0x35fcc0e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 44]'
  input1_tms: '[hslice: 44]'
  input2_tms: '[hslice: 44]'
  input3_tms: '[hslice: 44]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x39f9e740]]'
  output1_dram_buffers: '[[2, 0x3a922d40]]'
  output2_dram_buffers: '[[2, 0x3e8db9c0]]'
  output3_dram_buffers: '[[2, 0x3f6d4ce0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 44
  output0_mb_r: 6
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 44
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 44
  output1_mb_r: 6
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 44
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 44
  output2_mb_r: 6
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 44
  op2_mb_r: 6
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 6
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 44
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=44
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=44
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=44
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=7
# tm_c_factor[1]=44
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=44
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=44
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=7
# tm_c_factor[2]=44
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=44
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=44
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=7
# tm_c_factor[3]=44
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=44
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=44
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=7
#Test id=43
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 4
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x32e94400], [2, 0x32ed1820], [5, 0x32f0ec40], [5, 0x32f4c060], [1, 0x32f89480], [5, 0x32fc68a0], [3, 0x33003cc0], [3, 0x330410e0], [3, 0x3307e500], [4, 0x330bb920], [4, 0x330f8d40], [2, 0x33136160]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3451c8a0], [2, 0x34559cc0], [5, 0x345970e0], [5, 0x345d4500], [1, 0x34611920], [5, 0x3464ed40], [3, 0x3468c160], [3, 0x346c9580], [3, 0x347069a0], [4, 0x34743dc0], [4, 0x347811e0], [2, 0x347be600]]'
  output1_dram_buffers: '[[1, 0x3901cc00], [2, 0x39078a20], [5, 0x390d4840], [5, 0x39130660], [1, 0x3918c480], [5, 0x391e82a0], [3, 0x392440c0], [3, 0x3929fee0]]'
  output2_dram_buffers: '[[1, 0x3a3b6420], [2, 0x3a430c40], [5, 0x3a4ab460], [5, 0x3a525c80], [1, 0x3a5a04a0], [5, 0x3a61acc0]]'
  output3_dram_buffers: '[[1, 0x3dc49380], [2, 0x3dcc3ba0], [5, 0x3dd3e3c0], [5, 0x3ddb8be0], [1, 0x3de33400], [5, 0x3deadc20]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 3
  output0_t: 2
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 7
  op0_grid_size_c: 4
  op0_grid_size_r: 3
  op0_t: 2
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 2
  output1_mb_r: 3
  output1_mb_c: 7
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 14
  output2_ub_r: 4
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 14
  op2_ub_r: 4
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 3
  output3_t: 2
  output3_mb_r: 8
  output3_mb_c: 14
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 8
  op3_mb_c: 14
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=44
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 5
  op0_loc_r: 3
  op1_loc_c: 6
  op1_loc_r: 5
  op2_loc_c: 7
  op2_loc_r: 2
  op3_loc_c: 8
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 9
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[6, 0x30e9f380], [6, 0x30edf360], [7, 0x30f1f340], [6, 0x30f5f320], [7, 0x30f9f300], [2, 0x30fdf2e0], [4, 0x3101f2c0], [3, 0x3105f2a0], [5, 0x3109f280], [1, 0x310df260], [3, 0x3111f240], [7, 0x3115f220], [3, 0x3119f200], [7, 0x311df1e0], [5, 0x3121f1c0], [1, 0x3125f1a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 63]'
  input1_tms: '[hslice: 63]'
  input2_tms: '[hslice: 63]'
  input3_tms: '[hslice: 63]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3ef65b60]]'
  output1_dram_buffers: '[[6, 0x3f3e82a0]]'
  output2_dram_buffers: '[[6, 0x3f7ea0e0]]'
  output3_dram_buffers: '[[6, 0x3fbfb860]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 63
  output0_mb_r: 4
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 63
  op0_mb_r: 2
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 63
  output1_mb_r: 4
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 63
  op1_mb_r: 2
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 63
  output2_mb_r: 4
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 63
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 63
  output3_mb_r: 4
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 63
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=63
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=63
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=63
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=17
# tm_c_factor[1]=63
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=63
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=63
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=17
# tm_c_factor[2]=63
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=63
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=63
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=17
# tm_c_factor[3]=63
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=252
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=252
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=63
#Test id=45
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 8
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 14
  input_mb_r: 5
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[7, 0x366702c0], [7, 0x36ad8ee0], [4, 0x36f41b00]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 5
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x38e05140]]'
  output1_dram_buffers: '[[7, 0x3af0d5e0]]'
  output2_dram_buffers: '[[7, 0x3ccb3180]]'
  output3_dram_buffers: '[[7, 0x3e01a080]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 56
  output0_mb_r: 15
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 56
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 56
  output1_mb_r: 15
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 56
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 56
  output2_mb_r: 15
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 56
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 56
  output3_mb_r: 15
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 56
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=46
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 6
  input_t: 8
  input_mb_r: 1
  input_mb_c: 6
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x31bd3360], [2, 0x31e1c380], [2, 0x320653a0], [6, 0x322ae3c0], [6, 0x324f73e0], [7, 0x32740400]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x377b54e0]]'
  output1_dram_buffers: '[[4, 0x388afc00]]'
  output2_dram_buffers: '[[4, 0x3bbbc900]]'
  output3_dram_buffers: '[[4, 0x3e9c7060]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 6
  output0_mb_c: 9
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 32
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 32
  output1_mb_r: 6
  output1_mb_c: 9
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 32
  op1_mb_r: 3
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 32
  output2_mb_r: 6
  output2_mb_c: 9
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 32
  op2_mb_r: 3
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 32
  output3_mb_r: 6
  output3_mb_c: 9
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 32
  op3_mb_r: 3
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=47
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 2
  input_mb_c: 3
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x3232c6e0], [0, 0x323e4300], [5, 0x3249bf20], [0, 0x32553b40], [0, 0x3260b760], [6, 0x326c3380], [4, 0x3277afa0], [1, 0x32832bc0], [5, 0x328ea7e0], [4, 0x329a2400], [0, 0x32a5a020], [7, 0x32b11c40], [7, 0x32bc9860], [4, 0x32c81480], [3, 0x32d390a0], [2, 0x32df0cc0], [0, 0x32ea88e0], [1, 0x32f60500], [6, 0x33018120], [7, 0x330cfd40], [0, 0x33187960], [5, 0x3323f580], [1, 0x332f71a0], [1, 0x333aedc0], [2, 0x334669e0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 5
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 5]'
  input1_tms: '[hslice: 5]'
  input2_tms: '[hslice: 5]'
  input3_tms: '[hslice: 5]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33819fc0], [0, 0x33aaa3e0], [5, 0x33d3a800], [0, 0x33fcac20], [0, 0x3425b040], [6, 0x344eb460], [4, 0x3477b880]]'
  output1_dram_buffers: '[[3, 0x34b3f220], [0, 0x34e3cc40], [5, 0x3513a660], [0, 0x35438080], [0, 0x35735aa0], [6, 0x35a334c0]]'
  output2_dram_buffers: '[[3, 0x366d3f80], [0, 0x36a6aba0], [5, 0x36e017c0], [0, 0x371983e0], [0, 0x3752f000]]'
  output3_dram_buffers: '[[3, 0x3af7b9c0], [0, 0x3b3125e0], [5, 0x3b6a9200], [0, 0x3ba3fe20], [0, 0x3bdd6a40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 10
  output0_mb_r: 2
  output0_mb_c: 3
  output0_ub_r: 5
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 10
  op0_mb_r: 2
  op0_mb_c: 3
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 3
  output1_grid_size_r: 2
  output1_t: 10
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 2
  op1_t: 10
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 5
  output2_t: 10
  output2_mb_r: 7
  output2_mb_c: 3
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 10
  op2_mb_r: 7
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 5
  output3_t: 10
  output3_mb_r: 2
  output3_mb_c: 3
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 10
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=5
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=5
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=15
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=15
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=5
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=5
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=5
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=5
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=5
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=48
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 3
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x36e378e0], [0, 0x36e3e200], [2, 0x36e44b20], [0, 0x36e4b440], [2, 0x36e51d60], [1, 0x36e58680], [4, 0x36e5efa0], [4, 0x36e658c0], [0, 0x36e6c1e0], [4, 0x36e72b00], [0, 0x36e79420], [1, 0x36e7fd40], [7, 0x36e86660], [6, 0x36e8cf80], [6, 0x36e938a0], [3, 0x36e9a1c0], [6, 0x36ea0ae0], [0, 0x36ea7400], [3, 0x36eadd20], [5, 0x36eb4640], [4, 0x36ebaf60], [2, 0x36ec1880], [2, 0x36ec81a0], [5, 0x36eceac0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 8
  feeder_loc_c: 3
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 9]'
  input1_tms: '[hslice: 9]'
  input2_tms: '[hslice: 9]'
  input3_tms: '[hslice: 9]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x37645f20]]'
  output1_dram_buffers: '[[5, 0x37beb080]]'
  output2_dram_buffers: '[[5, 0x3cda42e0]]'
  output3_dram_buffers: '[[5, 0x3df46780]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 9
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 2
  output1_mb_c: 1
  output1_ub_r: 4
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 9
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 8
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 9
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 9
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=9
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=9
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=9
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=9
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=9
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=9
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=9
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=9
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=9
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=9
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=9
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=9
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=49
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 6
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 9
  input_mb_r: 2
  input_mb_c: 8
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x3908e7c0], [3, 0x39369be0], [1, 0x39645000], [4, 0x39920420], [3, 0x39bfb840], [2, 0x39ed6c60]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 4
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3a5a2680]]'
  output1_dram_buffers: '[[3, 0x3bb1c800]]'
  output2_dram_buffers: '[[3, 0x3d264c40]]'
  output3_dram_buffers: '[[3, 0x3e6e55e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 18
  output0_mb_r: 6
  output0_mb_c: 40
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 18
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 18
  output1_mb_r: 6
  output1_mb_c: 40
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 18
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 6
  output2_mb_c: 40
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 18
  op2_mb_r: 3
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 6
  output3_mb_c: 40
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 18
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
