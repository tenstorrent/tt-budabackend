#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 4
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x36835240], [7, 0x36840160], [7, 0x3684b080], [6, 0x36855fa0], [1, 0x36860ec0], [3, 0x3686bde0], [6, 0x36876d00], [6, 0x36881c20], [3, 0x3688cb40], [5, 0x36897a60], [1, 0x368a2980], [5, 0x368ad8a0], [5, 0x368b87c0], [4, 0x368c36e0], [6, 0x368ce600], [7, 0x368d9520], [4, 0x368e4440], [5, 0x368ef360], [7, 0x368fa280], [2, 0x369051a0], [6, 0x369100c0], [0, 0x3691afe0], [6, 0x36925f00], [7, 0x36930e20], [5, 0x3693bd40], [0, 0x36946c60], [3, 0x36951b80], [1, 0x3695caa0], [7, 0x369679c0], [5, 0x369728e0], [7, 0x3697d800], [7, 0x36988720], [2, 0x36993640], [4, 0x3699e560], [2, 0x369a9480], [5, 0x369b43a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x369ca040], [7, 0x36a0ba60], [7, 0x36a4d480], [6, 0x36a8eea0], [1, 0x36ad08c0], [3, 0x36b122e0]]'
  output1_dram_buffers: '[[4, 0x36b71360], [7, 0x36bb2d80], [7, 0x36bf47a0], [6, 0x36c361c0], [1, 0x36c77be0], [3, 0x36cb9600]]'
  output2_dram_buffers: '[[4, 0x36d70760], [7, 0x36db2180], [7, 0x36df3ba0], [6, 0x36e355c0], [1, 0x36e76fe0], [3, 0x36eb8a00]]'
  output3_dram_buffers: '[[4, 0x3dcb2c80], [7, 0x3dcf46a0], [7, 0x3dd360c0], [6, 0x3dd77ae0], [1, 0x3ddb9500], [3, 0x3ddfaf20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 5
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 15
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 15
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 3
  output3_t: 2
  output3_mb_r: 2
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 8
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 8
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x3a167b80], [4, 0x3a1883a0], [0, 0x3a1a8bc0], [6, 0x3a1c93e0], [2, 0x3a1e9c00], [2, 0x3a20a420], [4, 0x3a22ac40], [5, 0x3a24b460], [6, 0x3a26bc80], [1, 0x3a28c4a0], [1, 0x3a2accc0], [5, 0x3a2cd4e0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3ce01ea0]]'
  output1_dram_buffers: '[[1, 0x3d255420]]'
  output2_dram_buffers: '[[1, 0x3dc17780]]'
  output3_dram_buffers: '[[1, 0x3e742bc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 6
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 3
  op0_t: 8
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 6
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 8
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 6
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 8
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 6
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 8
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x3068aa60], [3, 0x306bf280], [7, 0x306f3aa0], [7, 0x307282c0], [5, 0x3075cae0], [4, 0x30791300], [5, 0x307c5b20], [5, 0x307fa340], [0, 0x3082eb60], [4, 0x30863380], [2, 0x30897ba0], [5, 0x308cc3c0], [1, 0x30900be0], [2, 0x30935400], [4, 0x30969c20], [7, 0x3099e440], [6, 0x309d2c60], [2, 0x30a07480], [1, 0x30a3bca0], [4, 0x30a704c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 10
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x312e9940], [3, 0x31352960], [7, 0x313bb980], [7, 0x314249a0], [5, 0x3148d9c0], [4, 0x314f69e0], [5, 0x3155fa00], [5, 0x315c8a20], [0, 0x31631a40], [4, 0x3169aa60]]'
  output1_dram_buffers: '[[1, 0x3300f5c0], [3, 0x330be5e0], [7, 0x3316d600], [7, 0x3321c620], [5, 0x332cb640], [4, 0x3337a660]]'
  output2_dram_buffers: '[[1, 0x3489fcc0], [3, 0x3494ece0], [7, 0x349fdd00], [7, 0x34aacd20], [5, 0x34b5bd40], [4, 0x34c0ad60]]'
  output3_dram_buffers: '[[1, 0x393ff020], [3, 0x394ae040], [7, 0x3955d060], [7, 0x3960c080], [5, 0x396bb0a0], [4, 0x3976a0c0]]'
  output0_grid_size_c: 5
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 4
  output0_ub_r: 3
  output0_ub_c: 2
  op0_grid_size_c: 5
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=3
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 45
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x301a7b60], [6, 0x305f0980], [4, 0x30a397a0], [4, 0x30e825c0], [2, 0x312cb3e0], [5, 0x31714200], [3, 0x31b5d020]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x369ed8a0]]'
  output1_dram_buffers: '[[2, 0x38b14ce0]]'
  output2_dram_buffers: '[[2, 0x3ada7460]]'
  output3_dram_buffers: '[[2, 0x3cd47e60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 45
  output0_mb_r: 84
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 45
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 45
  output1_mb_r: 84
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 45
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 45
  output2_mb_r: 84
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 45
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 45
  output3_mb_r: 84
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 45
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=6
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=7
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=7
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 2
  op1_loc_c: 8
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3391c060], [1, 0x33929280], [1, 0x339364a0], [5, 0x339436c0], [7, 0x339508e0], [3, 0x3395db00], [4, 0x3396ad20], [5, 0x33977f40], [0, 0x33985160], [2, 0x33992380], [7, 0x3399f5a0], [0, 0x339ac7c0], [6, 0x339b99e0], [2, 0x339c6c00], [0, 0x339d3e20], [4, 0x339e1040], [5, 0x339ee260], [3, 0x339fb480], [1, 0x33a086a0], [7, 0x33a158c0], [6, 0x33a22ae0], [1, 0x33a2fd00], [4, 0x33a3cf20], [7, 0x33a4a140], [6, 0x33a57360], [1, 0x33a64580], [1, 0x33a717a0], [3, 0x33a7e9c0], [7, 0x33a8bbe0], [1, 0x33a98e00], [6, 0x33aa6020], [3, 0x33ab3240], [4, 0x33ac0460], [0, 0x33acd680], [1, 0x33ada8a0], [4, 0x33ae7ac0], [0, 0x33af4ce0], [2, 0x33b01f00], [7, 0x33b0f120], [7, 0x33b1c340], [3, 0x33b29560], [4, 0x33b36780]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x37809ee0], [1, 0x37858b00], [1, 0x378a7720], [5, 0x378f6340], [7, 0x37944f60], [3, 0x37993b80], [4, 0x379e27a0]]'
  output1_dram_buffers: '[[3, 0x37a396c0], [1, 0x37a60ce0], [1, 0x37a88300], [5, 0x37aaf920], [7, 0x37ad6f40], [3, 0x37afe560], [4, 0x37b25b80], [5, 0x37b4d1a0], [0, 0x37b747c0], [2, 0x37b9bde0], [7, 0x37bc3400], [0, 0x37beaa20], [6, 0x37c12040], [2, 0x37c39660]]'
  output2_dram_buffers: '[[3, 0x39d4fe00], [1, 0x39d9ea20], [1, 0x39ded640], [5, 0x39e3c260], [7, 0x39e8ae80], [3, 0x39ed9aa0], [4, 0x39f286c0]]'
  output3_dram_buffers: '[[3, 0x3c65d220], [1, 0x3c6abe40], [1, 0x3c6faa60], [5, 0x3c749680], [7, 0x3c7982a0], [3, 0x3c7e6ec0], [4, 0x3c835ae0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 2
  output0_mb_r: 6
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 2
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 2
  output1_grid_size_r: 7
  output1_t: 2
  output1_mb_r: 3
  output1_mb_c: 3
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 7
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 7
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 6
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 7
  output3_t: 2
  output3_mb_r: 2
  output3_mb_c: 6
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 6
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=7
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=7
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=7
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=7
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=5
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 2
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x374bca00], [5, 0x374d6e20], [6, 0x374f1240], [4, 0x3750b660], [5, 0x37525a80], [7, 0x3753fea0], [6, 0x3755a2c0], [3, 0x375746e0], [3, 0x3758eb00], [1, 0x375a8f20], [1, 0x375c3340], [7, 0x375dd760], [6, 0x375f7b80], [0, 0x37611fa0], [1, 0x3762c3c0], [5, 0x376467e0], [3, 0x37660c00], [6, 0x3767b020], [6, 0x37695440], [3, 0x376af860], [3, 0x376c9c80], [7, 0x376e40a0], [1, 0x376fe4c0], [3, 0x377188e0], [7, 0x37732d00], [0, 0x3774d120], [4, 0x37767540], [7, 0x37781960], [7, 0x3779bd80], [6, 0x377b61a0], [7, 0x377d05c0], [4, 0x377ea9e0], [0, 0x37804e00], [7, 0x3781f220], [6, 0x37839640]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x379d8e60], [5, 0x37a16280], [6, 0x37a536a0], [4, 0x37a90ac0], [5, 0x37acdee0], [7, 0x37b0b300], [6, 0x37b48720], [3, 0x37b85b40], [3, 0x37bc2f60], [1, 0x37c00380], [1, 0x37c3d7a0], [7, 0x37c7abc0], [6, 0x37cb7fe0], [0, 0x37cf5400], [1, 0x37d32820]]'
  output1_dram_buffers: '[[4, 0x3822f9c0], [5, 0x3828b7e0], [6, 0x382e7600], [4, 0x38343420], [5, 0x3839f240], [7, 0x383fb060], [6, 0x38456e80], [3, 0x384b2ca0], [3, 0x3850eac0], [1, 0x3856a8e0]]'
  output2_dram_buffers: '[[4, 0x3a5a5d80], [5, 0x3a5d3ca0], [6, 0x3a601bc0], [4, 0x3a62fae0], [5, 0x3a65da00], [7, 0x3a68b920], [6, 0x3a6b9840], [3, 0x3a6e7760], [3, 0x3a715680], [1, 0x3a7435a0], [1, 0x3a7714c0], [7, 0x3a79f3e0], [6, 0x3a7cd300], [0, 0x3a7fb220], [1, 0x3a829140], [5, 0x3a857060], [3, 0x3a884f80], [6, 0x3a8b2ea0], [6, 0x3a8e0dc0], [3, 0x3a90ece0]]'
  output3_dram_buffers: '[[4, 0x3b759460], [5, 0x3b7b5280], [6, 0x3b8110a0], [4, 0x3b86cec0], [5, 0x3b8c8ce0], [7, 0x3b924b00], [6, 0x3b980920], [3, 0x3b9dc740], [3, 0x3ba38560], [1, 0x3ba94380]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 5
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 7
  output0_ub_r: 2
  output0_ub_c: 2
  op0_grid_size_c: 3
  op0_grid_size_r: 5
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 10
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 7
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 10
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 2
  output2_grid_size_r: 10
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 7
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 2
  op2_grid_size_r: 10
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 10
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 7
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 1
  op3_grid_size_r: 10
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=10
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=10
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=10
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=10
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=10
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=10
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=6
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 7
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 30
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x3a15cee0], [3, 0x3a250b00], [5, 0x3a344720], [0, 0x3a438340], [1, 0x3a52bf60], [5, 0x3a61fb80], [5, 0x3a7137a0], [3, 0x3a8073c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3b50fd20]]'
  output1_dram_buffers: '[[0, 0x3ca5b1a0]]'
  output2_dram_buffers: '[[0, 0x3da42f40]]'
  output3_dram_buffers: '[[0, 0x3eb27940]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 8
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 30
  op0_mb_r: 4
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 30
  output1_mb_r: 8
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 30
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 30
  output2_mb_r: 8
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 30
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 30
  output3_mb_r: 8
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 30
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=7
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 8
  op3_loc_r: 8
  input_t: 16
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x3b869ac0], [6, 0x3b8aaae0], [2, 0x3b8ebb00], [2, 0x3b92cb20], [0, 0x3b96db40], [0, 0x3b9aeb60], [4, 0x3b9efb80], [4, 0x3ba30ba0], [4, 0x3ba71bc0], [7, 0x3bab2be0], [6, 0x3baf3c00], [6, 0x3bb34c20], [5, 0x3bb75c40], [6, 0x3bbb6c60], [7, 0x3bbf7c80], [2, 0x3bc38ca0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3cb343e0]]'
  output1_dram_buffers: '[[6, 0x3d629580]]'
  output2_dram_buffers: '[[6, 0x3dfe0560]]'
  output3_dram_buffers: '[[6, 0x3f94bc80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 4
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 16
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 4
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 16
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 4
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 16
  op2_mb_r: 2
  op2_mb_c: 4
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 4
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 16
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=5
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=8
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 20
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x3064c080], [6, 0x30884ca0], [6, 0x30abd8c0], [3, 0x30cf64e0], [2, 0x30f2f100], [5, 0x31167d20], [7, 0x313a0940], [6, 0x315d9560], [4, 0x31812180], [3, 0x31a4ada0], [5, 0x31c839c0], [2, 0x31ebc5e0], [0, 0x320f5200], [2, 0x3232de20], [2, 0x32566a40], [0, 0x3279f660], [7, 0x329d8280], [7, 0x32c10ea0], [5, 0x32e49ac0], [1, 0x330826e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3336af80]]'
  output1_dram_buffers: '[[0, 0x360a2840]]'
  output2_dram_buffers: '[[0, 0x38e16880]]'
  output3_dram_buffers: '[[0, 0x3baa50c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 20
  output0_mb_r: 8
  output0_mb_c: 35
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 20
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 8
  output1_mb_c: 35
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 20
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 8
  output2_mb_c: 35
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 5
  op2_grid_size_r: 4
  op2_t: 20
  op2_mb_r: 2
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 8
  output3_mb_c: 35
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 20
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=7
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=5
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=9
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 8
  input_t: 1
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x32bdc720], [3, 0x32be9940], [5, 0x32bf6b60], [7, 0x32c03d80], [1, 0x32c10fa0], [4, 0x32c1e1c0], [5, 0x32c2b3e0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x335c5f20], [3, 0x335d5440], [5, 0x335e4960], [7, 0x335f3e80], [1, 0x336033a0], [4, 0x336128c0]]'
  output1_dram_buffers: '[[6, 0x3371aa40], [3, 0x33729f60], [5, 0x33739480], [7, 0x337489a0], [1, 0x33757ec0], [4, 0x337673e0]]'
  output2_dram_buffers: '[[6, 0x3d854b80], [3, 0x3d8735a0], [5, 0x3d891fc0]]'
  output3_dram_buffers: '[[6, 0x3f87dca0], [3, 0x3f894c40], [5, 0x3f8abbe0], [7, 0x3f8c2b80]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 7
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 3
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 14
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 14
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 3
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 14
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 14
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 7
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=10
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 39
  input_mb_r: 1
  input_mb_c: 16
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[6, 0x301a7200], [2, 0x3069aa20], [0, 0x30b8e240], [3, 0x31081a60], [7, 0x31575280], [5, 0x31a68aa0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x363b1d40]]'
  output1_dram_buffers: '[[6, 0x395faa00]]'
  output2_dram_buffers: '[[6, 0x3ba77de0]]'
  output3_dram_buffers: '[[6, 0x3dbe9540]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 48
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 39
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 39
  output1_mb_r: 48
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 3
  op1_t: 39
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 39
  output2_mb_r: 48
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 39
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 39
  output3_mb_r: 48
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 8
  op3_t: 39
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=11
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 4
  input_ub_c: 2
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x34401a40], [1, 0x34447a60], [7, 0x3448da80], [3, 0x344d3aa0], [6, 0x34519ac0], [6, 0x3455fae0], [5, 0x345a5b00], [0, 0x345ebb20], [4, 0x34631b40], [3, 0x34677b60], [4, 0x346bdb80], [5, 0x34703ba0], [6, 0x34749bc0], [6, 0x3478fbe0], [4, 0x347d5c00], [5, 0x3481bc20]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x38e16860], [1, 0x38ea2880], [7, 0x38f2e8a0], [3, 0x38fba8c0], [6, 0x390468e0], [6, 0x390d2900], [5, 0x3915e920], [0, 0x391ea940]]'
  output1_dram_buffers: '[[0, 0x3dc12d40], [1, 0x3dc35d60], [7, 0x3dc58d80], [3, 0x3dc7bda0], [6, 0x3dc9edc0], [6, 0x3dcc1de0], [5, 0x3dce4e00], [0, 0x3dd07e20], [4, 0x3dd2ae40], [3, 0x3dd4de60], [4, 0x3dd70e80], [5, 0x3dd93ea0], [6, 0x3ddb6ec0], [6, 0x3ddd9ee0], [4, 0x3ddfcf00], [5, 0x3de1ff20], [1, 0x3de42f40], [2, 0x3de65f60], [5, 0x3de88f80], [1, 0x3deabfa0], [0, 0x3decefc0], [6, 0x3def1fe0], [2, 0x3df15000], [4, 0x3df38020], [4, 0x3df5b040], [5, 0x3df7e060], [2, 0x3dfa1080], [3, 0x3dfc40a0], [1, 0x3dfe70c0], [2, 0x3e00a0e0], [1, 0x3e02d100], [1, 0x3e050120]]'
  output2_dram_buffers: '[[0, 0x3f0f6560], [1, 0x3f13c580], [7, 0x3f1825a0], [3, 0x3f1c85c0], [6, 0x3f20e5e0], [6, 0x3f254600], [5, 0x3f29a620], [0, 0x3f2e0640], [4, 0x3f326660], [3, 0x3f36c680], [4, 0x3f3b26a0], [5, 0x3f3f86c0], [6, 0x3f43e6e0], [6, 0x3f484700], [4, 0x3f4ca720], [5, 0x3f510740]]'
  output3_dram_buffers: '[[0, 0x3f8c59c0], [1, 0x3f9519e0], [7, 0x3f9dda00], [3, 0x3fa69a20], [6, 0x3faf5a40], [6, 0x3fb81a60], [5, 0x3fc0da80], [0, 0x3fc99aa0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 16
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 4
  output1_grid_size_r: 8
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 8
  op1_grid_size_c: 4
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 2
  output2_grid_size_r: 8
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 2
  op2_grid_size_r: 8
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 16
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=12
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x30ee9aa0], [0, 0x30ef03c0], [7, 0x30ef6ce0], [3, 0x30efd600], [0, 0x30f03f20], [4, 0x30f0a840], [7, 0x30f11160], [2, 0x30f17a80], [5, 0x30f1e3a0], [0, 0x30f24cc0], [5, 0x30f2b5e0], [4, 0x30f31f00], [5, 0x30f38820], [7, 0x30f3f140]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x310a3ea0], [0, 0x310b10c0], [7, 0x310be2e0], [3, 0x310cb500], [0, 0x310d8720], [4, 0x310e5940], [7, 0x310f2b60]]'
  output1_dram_buffers: '[[2, 0x350e6500], [0, 0x350f3720], [7, 0x35100940], [3, 0x3510db60], [0, 0x3511ad80], [4, 0x35127fa0], [7, 0x351351c0]]'
  output2_dram_buffers: '[[2, 0x3530bf20], [0, 0x35319140], [7, 0x35326360], [3, 0x35333580], [0, 0x353407a0], [4, 0x3534d9c0], [7, 0x3535abe0]]'
  output3_dram_buffers: '[[2, 0x3678fe60], [0, 0x3679d080], [7, 0x367aa2a0], [3, 0x367b74c0], [0, 0x367c46e0], [4, 0x367d1900], [7, 0x367deb20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 6
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 7
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 7
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 6
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=7
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=7
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=7
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=7
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=13
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 8
  op1_loc_r: 8
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 28
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x303ed8a0], [1, 0x309428c0], [4, 0x30e978e0], [6, 0x313ec900], [6, 0x31941920], [7, 0x31e96940]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x32413320]]'
  output1_dram_buffers: '[[0, 0x3471ca60]]'
  output2_dram_buffers: '[[0, 0x36c6af80]]'
  output3_dram_buffers: '[[0, 0x3a77d120]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 6
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 28
  op0_mb_r: 6
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 6
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 28
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 3
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 6
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 28
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 6
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 28
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=6
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 8
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x34840ce0], [2, 0x34843000], [0, 0x34845320], [1, 0x34847640], [4, 0x34849960], [0, 0x3484bc80], [6, 0x3484dfa0], [5, 0x348502c0], [7, 0x348525e0], [4, 0x34854900], [2, 0x34856c20], [0, 0x34858f40], [5, 0x3485b260], [4, 0x3485d580], [1, 0x3485f8a0], [3, 0x34861bc0], [5, 0x34863ee0], [6, 0x34866200], [2, 0x34868520], [6, 0x3486a840], [4, 0x3486cb60], [3, 0x3486ee80], [3, 0x348711a0], [6, 0x348734c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x348e2940], [2, 0x348fcd60]]'
  output1_dram_buffers: '[[5, 0x35295460], [2, 0x352af880]]'
  output2_dram_buffers: '[[5, 0x35403840], [2, 0x3541dc60]]'
  output3_dram_buffers: '[[5, 0x35995cc0], [2, 0x3599c5e0], [0, 0x359a2f00], [1, 0x359a9820], [4, 0x359b0140], [0, 0x359b6a60], [6, 0x359bd380], [5, 0x359c3ca0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 3
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=15
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 7
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 5
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[7, 0x31b34000], [3, 0x31b45820], [4, 0x31b57040], [3, 0x31b68860], [2, 0x31b7a080], [6, 0x31b8b8a0], [6, 0x31b9d0c0], [1, 0x31bae8e0], [0, 0x31bc0100], [5, 0x31bd1920], [5, 0x31be3140], [5, 0x31bf4960], [1, 0x31c06180], [3, 0x31c179a0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x31cc3b00], [3, 0x31d00f20], [4, 0x31d3e340], [3, 0x31d7b760]]'
  output1_dram_buffers: '[[7, 0x31e1ae60], [3, 0x31e95680]]'
  output2_dram_buffers: '[[7, 0x322cbce0], [3, 0x32346500]]'
  output3_dram_buffers: '[[7, 0x364bd3a0], [3, 0x364fa7c0], [4, 0x36537be0], [3, 0x36575000]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 7
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 14
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 14
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 14
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 14
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 2
  output3_mb_r: 7
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 2
  op3_mb_r: 7
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=16
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 8
  op1_loc_c: 8
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x30b10060], [3, 0x30b18c80], [7, 0x30b218a0], [7, 0x30b2a4c0], [7, 0x30b330e0], [3, 0x30b3bd00], [7, 0x30b44920], [0, 0x30b4d540], [0, 0x30b56160], [5, 0x30b5ed80], [5, 0x30b679a0], [6, 0x30b705c0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x30dc2ea0], [3, 0x30ddd2c0], [7, 0x30df76e0], [7, 0x30e11b00]]'
  output1_dram_buffers: '[[1, 0x321aba00], [3, 0x321e0220]]'
  output2_dram_buffers: '[[1, 0x36153e80], [3, 0x361886a0]]'
  output3_dram_buffers: '[[1, 0x3a2ec3e0], [3, 0x3a2fdc00], [7, 0x3a30f420], [7, 0x3a320c40], [7, 0x3a332460], [3, 0x3a343c80]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 3
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 3
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 3
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 8
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 4
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=17
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 7
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 32
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x3107ce80], [4, 0x3188cea0], [3, 0x3209cec0], [5, 0x328acee0], [7, 0x330bcf00]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x338d6680]]'
  output1_dram_buffers: '[[4, 0x3813f5e0]]'
  output2_dram_buffers: '[[4, 0x3af27360]]'
  output3_dram_buffers: '[[4, 0x3d782d00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 4
  output0_mb_c: 20
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 32
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 32
  output1_mb_r: 4
  output1_mb_c: 20
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 32
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 32
  output2_mb_r: 4
  output2_mb_c: 20
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 32
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 32
  output3_mb_r: 4
  output3_mb_c: 20
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 5
  op3_grid_size_r: 2
  op3_t: 32
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=18
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 5
  op2_loc_c: 8
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x3bbd7d00], [5, 0x3bbf2120], [4, 0x3bc0c540], [1, 0x3bc26960], [7, 0x3bc40d80], [4, 0x3bc5b1a0], [7, 0x3bc755c0], [3, 0x3bc8f9e0], [7, 0x3bca9e00], [6, 0x3bcc4220], [0, 0x3bcde640], [6, 0x3bcf8a60], [5, 0x3bd12e80], [7, 0x3bd2d2a0], [7, 0x3bd476c0], [6, 0x3bd61ae0], [4, 0x3bd7bf00], [6, 0x3bd96320]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 9
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3be64f20], [5, 0x3be99740], [4, 0x3becdf60], [1, 0x3bf02780], [7, 0x3bf36fa0], [4, 0x3bf6b7c0], [7, 0x3bf9ffe0], [3, 0x3bfd4800], [7, 0x3c009020]]'
  output1_dram_buffers: '[[2, 0x3c0c2d40], [5, 0x3c0f7560], [4, 0x3c12bd80], [1, 0x3c1605a0], [7, 0x3c194dc0], [4, 0x3c1c95e0], [7, 0x3c1fde00], [3, 0x3c232620], [7, 0x3c266e40]]'
  output2_dram_buffers: '[[2, 0x3e356320], [5, 0x3e391440], [4, 0x3e3cc560], [1, 0x3e407680], [7, 0x3e4427a0], [4, 0x3e47d8c0], [7, 0x3e4b89e0], [3, 0x3e4f3b00]]'
  output3_dram_buffers: '[[2, 0x3ef5b4c0], [5, 0x3efaa0e0], [4, 0x3eff8d00], [1, 0x3f047920], [7, 0x3f096540], [4, 0x3f0e5160]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 3
  output0_t: 1
  output0_mb_r: 8
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 3
  op0_grid_size_r: 3
  op0_t: 1
  op0_mb_r: 8
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 3
  output1_grid_size_r: 3
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 3
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 3
  op1_grid_size_r: 3
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 9
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 9
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 3
  output3_t: 1
  output3_mb_r: 4
  output3_mb_c: 3
  output3_ub_r: 2
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 1
  op3_mb_r: 4
  op3_mb_c: 3
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=3
#Test id=19
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 5
  op0_loc_r: 3
  op1_loc_c: 6
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 7
  op3_loc_c: 9
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[7, 0x3045e780], [0, 0x3046b9a0], [3, 0x30478bc0], [5, 0x30485de0], [3, 0x30493000]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x312363e0], [0, 0x31243600], [3, 0x31250820], [5, 0x3125da40], [3, 0x3126ac60]]'
  output1_dram_buffers: '[[7, 0x31935be0], [0, 0x31956900]]'
  output2_dram_buffers: '[[7, 0x371709c0], [0, 0x371916e0]]'
  output3_dram_buffers: '[[7, 0x376c8080], [0, 0x376d2fa0], [3, 0x376ddec0], [5, 0x376e8de0], [3, 0x376f3d00], [2, 0x376fec20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 5
  output0_t: 2
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 10
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 6
  output2_ub_r: 5
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 3
  output3_grid_size_r: 2
  output3_t: 2
  output3_mb_r: 5
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 2
  op3_t: 2
  op3_mb_r: 5
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=2
