#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 7
  op2_loc_r: 0
  op3_loc_c: 8
  op3_loc_r: 1
  input_t: 28
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x304d5c00], [6, 0x305b9420], [3, 0x3069cc40], [7, 0x30780460], [6, 0x30863c80], [7, 0x309474a0], [6, 0x30a2acc0], [2, 0x30b0e4e0], [0, 0x30bf1d00], [0, 0x30cd5520], [5, 0x30db8d40], [3, 0x30e9c560], [7, 0x30f7fd80], [6, 0x310635a0], [3, 0x31146dc0], [7, 0x3122a5e0], [7, 0x3130de00], [4, 0x313f1620], [1, 0x314d4e40], [7, 0x315b8660], [7, 0x3169be80], [0, 0x3177f6a0], [0, 0x31862ec0], [5, 0x319466e0], [3, 0x31a29f00], [3, 0x31b0d720], [6, 0x31bf0f40], [4, 0x31cd4760], [1, 0x31db7f80], [6, 0x31e9b7a0], [1, 0x31f7efc0], [4, 0x320627e0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x33f77480]]'
  output1_dram_buffers: '[[4, 0x38224be0]]'
  output2_dram_buffers: '[[4, 0x3bc6c640]]'
  output3_dram_buffers: '[[4, 0x3dd786c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 14
  output0_mb_r: 32
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 14
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 14
  output1_mb_r: 32
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 14
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 14
  output2_mb_r: 32
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 14
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 14
  output3_mb_r: 32
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 4
  op3_t: 14
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 34
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x34c46760], [0, 0x34e6ab80], [3, 0x3508efa0], [6, 0x352b33c0], [3, 0x354d77e0], [1, 0x356fbc00], [2, 0x35920020], [2, 0x35b44440], [2, 0x35d68860], [1, 0x35f8cc80], [0, 0x361b10a0], [6, 0x363d54c0], [5, 0x365f98e0], [3, 0x3681dd00], [4, 0x36a42120], [4, 0x36c66540]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x37361ce0]]'
  output1_dram_buffers: '[[4, 0x398e8f60]]'
  output2_dram_buffers: '[[4, 0x3bb64240]]'
  output3_dram_buffers: '[[4, 0x3ddab380]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 16
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 17
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 17
  output1_mb_r: 16
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 17
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 17
  output2_mb_r: 16
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 17
  op2_mb_r: 8
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 17
  output3_mb_r: 16
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 17
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 4
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 9
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 15
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[1, 0x30b061c0], [3, 0x30ce9de0], [2, 0x30ecda00], [1, 0x310b1620], [2, 0x31295240], [4, 0x31478e60], [4, 0x3165ca80], [6, 0x318406a0], [6, 0x31a242c0], [1, 0x31c07ee0], [0, 0x31debb00], [3, 0x31fcf720]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x37924660]]'
  output1_dram_buffers: '[[1, 0x39754b20]]'
  output2_dram_buffers: '[[1, 0x3ca59bc0]]'
  output3_dram_buffers: '[[1, 0x3e4721e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 9
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 5
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 5
  output1_mb_r: 9
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 3
  op1_t: 5
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 9
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 3
  op2_t: 5
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 9
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 5
  op3_mb_r: 3
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 7
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[6, 0x31259fc0], [1, 0x317aefe0], [0, 0x31d04000], [7, 0x32259020], [1, 0x327ae040], [1, 0x32d03060]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x376cfd60]]'
  output1_dram_buffers: '[[6, 0x39ded000]]'
  output2_dram_buffers: '[[6, 0x3be5be00]]'
  output3_dram_buffers: '[[6, 0x3de65d20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 672
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 672
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 672
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 1
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 672
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 12
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 16
  input_mb_r: 4
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x312fcae0], [6, 0x31608b00], [5, 0x31914b20], [5, 0x31c20b40], [1, 0x31f2cb60], [3, 0x32238b80], [2, 0x32544ba0], [5, 0x32850bc0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 2
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x359f1080]]'
  output1_dram_buffers: '[[4, 0x3a05a780]]'
  output2_dram_buffers: '[[4, 0x3c544000]]'
  output3_dram_buffers: '[[4, 0x3ddd5440]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 32
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 8
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 32
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 8
  op1_mb_r: 2
  op1_mb_c: 6
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 32
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 8
  op2_mb_r: 2
  op2_mb_c: 3
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 32
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 4
  op3_t: 8
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=5
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 5
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 44
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x30d8c280], [7, 0x31752aa0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 2
  feeder_loc_c: 3
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x351bc900]]'
  output1_dram_buffers: '[[2, 0x3a623260]]'
  output2_dram_buffers: '[[2, 0x3d4bd820]]'
  output3_dram_buffers: '[[2, 0x3e8e6960]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 22
  output0_mb_r: 16
  output0_mb_c: 14
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 22
  op0_mb_r: 8
  op0_mb_c: 14
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 22
  output1_mb_r: 16
  output1_mb_c: 14
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 22
  op1_mb_r: 2
  op1_mb_c: 7
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 22
  output2_mb_r: 16
  output2_mb_c: 14
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 22
  op2_mb_r: 8
  op2_mb_c: 14
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 22
  output3_mb_r: 16
  output3_mb_c: 14
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 22
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=6
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 8
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 51
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x3016cdc0], [0, 0x308b58e0], [1, 0x30ffe400], [6, 0x31746f20], [6, 0x31e8fa40], [4, 0x325d8560]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x341fc5a0]]'
  output1_dram_buffers: '[[5, 0x37297960]]'
  output2_dram_buffers: '[[5, 0x3a0e3d80]]'
  output3_dram_buffers: '[[5, 0x3d134cc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 54
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 17
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 17
  output1_mb_r: 54
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 17
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 17
  output2_mb_r: 54
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 17
  op2_mb_r: 9
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 17
  output3_mb_r: 54
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 17
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=7
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 8
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x3a7e3f20], [0, 0x3a7e73c0], [6, 0x3a7ea860], [7, 0x3a7edd00], [5, 0x3a7f11a0], [4, 0x3a7f4640], [7, 0x3a7f7ae0], [1, 0x3a7faf80], [6, 0x3a7fe420], [5, 0x3a8018c0], [7, 0x3a804d60], [2, 0x3a808200], [7, 0x3a80b6a0], [4, 0x3a80eb40], [6, 0x3a811fe0], [3, 0x3a815480], [7, 0x3a818920], [6, 0x3a81bdc0], [1, 0x3a81f260], [3, 0x3a822700], [7, 0x3a825ba0], [6, 0x3a829040], [4, 0x3a82c4e0], [0, 0x3a82f980]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3cfed820], [0, 0x3cffaa40], [6, 0x3d007c60], [7, 0x3d014e80], [5, 0x3d0220a0], [4, 0x3d02f2c0]]'
  output1_dram_buffers: '[[6, 0x3e2080a0], [0, 0x3e2152c0], [6, 0x3e2224e0], [7, 0x3e22f700], [5, 0x3e23c920], [4, 0x3e249b40]]'
  output2_dram_buffers: '[[6, 0x3e612c80], [0, 0x3e6267a0], [6, 0x3e63a2c0], [7, 0x3e64dde0]]'
  output3_dram_buffers: '[[6, 0x3f27e5e0], [0, 0x3f288380], [6, 0x3f292120], [7, 0x3f29bec0], [5, 0x3f2a5c60], [4, 0x3f2afa00], [7, 0x3f2b97a0], [1, 0x3f2c3540]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 1
  output0_mb_r: 6
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 6
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 1
  output1_mb_r: 3
  output1_mb_c: 4
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 4
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 9
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 9
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 4
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 9
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
##Test id=8
#- device: GRAYSKULL
#  entries: 2
#  op0_loc_c: 1
#  op0_loc_r: 2
#  op1_loc_c: 4
#  op1_loc_r: 0
#  op2_loc_c: 6
#  op2_loc_r: 0
#  op3_loc_c: 8
#  op3_loc_r: 3
#  input_t: 2
#  input_mb_r: 4
#  input_mb_c: 1
#  input_ub_r: 1
#  input_ub_c: 8
#  input_data_format: 'Bfp8'
#  out_data_format: 'Bfp8'
#  input_dram_buffers: '[[7, 0x33f68b80], [6, 0x33f8bba0], [3, 0x33faebc0], [6, 0x33fd1be0], [7, 0x33ff4c00], [2, 0x34017c20], [7, 0x3403ac40], [6, 0x3405dc60]]'
#  target_device: 0
#  input_count: 1
#  unary_type: datacopy
#  input_grid_size_c: 1
#  input_grid_size_r: 8
#  feeder_loc_c: 0
#  feeder_loc_r: 0
#  math_fidelity: LoFi
#  untilize_output0: 'false'
#  untilize_output1: 'false'
#  untilize_output2: 'false'
#  untilize_output3: 'false'
#  input0_tms: '[vstack: 2]'
#  input1_tms: '[vstack: 2]'
#  input2_tms: '[vstack: 2]'
#  input3_tms: '[vstack: 2]'
#  ublock_order: r
#  buf_size_mb: 4
#  # Scale output queue grid and mblock size if output is untilized
#  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
#  output0_dram_buffers: '[[7, 0x3b99bdc0], [6, 0x3b9bede0], [3, 0x3b9e1e00], [6, 0x3ba04e20], [7, 0x3ba27e40], [2, 0x3ba4ae60], [7, 0x3ba6de80], [6, 0x3ba90ea0]]'
#  output1_dram_buffers: '[[7, 0x3dbde5a0], [6, 0x3dc015c0], [3, 0x3dc245e0], [6, 0x3dc47600], [7, 0x3dc6a620], [2, 0x3dc8d640], [7, 0x3dcb0660], [6, 0x3dcd3680]]'
#  output2_dram_buffers: '[[7, 0x3ec3d760], [6, 0x3ec4ef80], [3, 0x3ec607a0], [6, 0x3ec71fc0], [7, 0x3ec837e0], [2, 0x3ec95000], [7, 0x3eca6820], [6, 0x3ecb8040], [3, 0x3ecc9860], [6, 0x3ecdb080], [2, 0x3ecec8a0], [2, 0x3ecfe0c0], [5, 0x3ed0f8e0], [6, 0x3ed21100], [5, 0x3ed32920], [2, 0x3ed44140]]'
#  output3_dram_buffers: '[[7, 0x3fe1e600], [6, 0x3fe2fe20], [3, 0x3fe41640], [6, 0x3fe52e60], [7, 0x3fe64680], [2, 0x3fe75ea0], [7, 0x3fe876c0], [6, 0x3fe98ee0], [3, 0x3feaa700], [6, 0x3febbf20], [2, 0x3fecd740], [2, 0x3fedef60], [5, 0x3fef0780], [6, 0x3ff01fa0], [5, 0x3ff137c0], [2, 0x3ff24fe0]]'
#  output0_grid_size_c: 2
#  output0_grid_size_r: 4
#  output0_t: 1
#  output0_mb_r: 2
#  output0_mb_c: 4
#  output0_ub_r: 8
#  output0_ub_c: 1
#  op0_grid_size_c: 2
#  op0_grid_size_r: 4
#  op0_t: 1
#  op0_mb_r: 2
#  op0_mb_c: 4
#  op0_ub_r: 8
#  op0_ub_c: 1
#  output1_grid_size_c: 2
#  output1_grid_size_r: 4
#  output1_t: 1
#  output1_mb_r: 8
#  output1_mb_c: 1
#  output1_ub_r: 2
#  output1_ub_c: 4
#  op1_grid_size_c: 2
#  op1_grid_size_r: 4
#  op1_t: 1
#  op1_mb_r: 8
#  op1_mb_c: 1
#  op1_ub_r: 2
#  op1_ub_c: 4
#  output2_grid_size_c: 2
#  output2_grid_size_r: 8
#  output2_t: 1
#  output2_mb_r: 4
#  output2_mb_c: 1
#  output2_ub_r: 2
#  output2_ub_c: 4
#  op2_grid_size_c: 2
#  op2_grid_size_r: 8
#  op2_t: 1
#  op2_mb_r: 4
#  op2_mb_c: 1
#  op2_ub_r: 2
#  op2_ub_c: 4
#  output3_grid_size_c: 4
#  output3_grid_size_r: 4
#  output3_t: 1
#  output3_mb_r: 4
#  output3_mb_c: 2
#  output3_ub_r: 4
#  output3_ub_c: 1
#  op3_grid_size_c: 4
#  op3_grid_size_r: 4
#  op3_t: 1
#  op3_mb_r: 4
#  op3_mb_c: 2
#  op3_ub_r: 4
#  op3_ub_c: 1
#  # Program vars
#  loop_count: 1
#  queue_wrap_size: 4
#  # Test and stimulus config
#  comparison_config_type: 'AllCloseHw'
#  comparison_config_atol: 0.01
#  comparison_config_rtol: 0.30
#  comparison_config_check_pct: 0.85
#  comparison_config_check_pcc: 0.99
#  comparison_config_verbosity: 'Concise'
#  stimulus_config_type: 'Uniform'
#  stimulus_config_uniform_lower_bound: '-1.0'
#  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=9
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 5
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 38
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x305720c0], [0, 0x306a6ce0], [6, 0x307db900], [6, 0x30910520], [6, 0x30a45140], [1, 0x30b79d60], [7, 0x30cae980], [5, 0x30de35a0], [4, 0x30f181c0], [3, 0x3104cde0], [1, 0x31181a00], [2, 0x312b6620], [5, 0x313eb240], [4, 0x3151fe60], [2, 0x31654a80], [1, 0x317896a0], [5, 0x318be2c0], [3, 0x319f2ee0], [0, 0x31b27b00], [4, 0x31c5c720], [5, 0x31d91340], [5, 0x31ec5f60], [5, 0x31ffab80], [4, 0x3212f7a0], [0, 0x322643c0], [3, 0x32398fe0], [1, 0x324cdc00], [6, 0x32602820], [5, 0x32737440], [3, 0x3286c060], [3, 0x329a0c80], [7, 0x32ad58a0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x35ef8820]]'
  output1_dram_buffers: '[[0, 0x387db6a0]]'
  output2_dram_buffers: '[[0, 0x3b0b7ea0]]'
  output3_dram_buffers: '[[0, 0x3d90d060]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 19
  output0_mb_r: 16
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 19
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 19
  output1_mb_r: 16
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 19
  op1_mb_r: 2
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 19
  output2_mb_r: 16
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 8
  op2_t: 19
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 19
  output3_mb_r: 16
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 4
  op3_t: 19
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=10
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 44
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x316cc580], [2, 0x318e49a0], [7, 0x31afcdc0], [4, 0x31d151e0], [6, 0x31f2d600], [4, 0x32145a20], [7, 0x3235de40], [0, 0x32576260], [0, 0x3278e680], [3, 0x329a6aa0], [4, 0x32bbeec0], [0, 0x32dd72e0], [6, 0x32fef700], [7, 0x33207b20], [2, 0x3341ff40], [7, 0x33638360]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 4]'
  input1_tms: '[vstack: 4]'
  input2_tms: '[vstack: 4]'
  input3_tms: '[vstack: 4]'
  ublock_order: r
  buf_size_mb: 8
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x33ee86e0]]'
  output1_dram_buffers: '[[1, 0x39931d00]]'
  output2_dram_buffers: '[[1, 0x3bcf0fa0]]'
  output3_dram_buffers: '[[1, 0x3de781e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 11
  output0_mb_r: 96
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 11
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 11
  output1_mb_r: 96
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 11
  op1_mb_r: 6
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 11
  output2_mb_r: 96
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 11
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 11
  output3_mb_r: 96
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 4
  op3_t: 11
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=32
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=32
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=4
# effective_consumer_grid_size_r[1]=32
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=32
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=4
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=11
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 6
  op0_loc_r: 6
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 8
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x391b1ca0], [5, 0x391f2cc0], [2, 0x39233ce0], [4, 0x39274d00], [6, 0x392b5d20], [0, 0x392f6d40], [0, 0x39337d60], [2, 0x39378d80], [5, 0x393b9da0], [6, 0x393fadc0], [6, 0x3943bde0], [1, 0x3947ce00], [2, 0x394bde20], [0, 0x394fee40], [2, 0x3953fe60], [0, 0x39580e80]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 4
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3c8ce3c0]]'
  output1_dram_buffers: '[[1, 0x3d7c17e0]]'
  output2_dram_buffers: '[[1, 0x3e414640]]'
  output3_dram_buffers: '[[1, 0x3edb6f80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 16
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 4
  op0_mb_r: 4
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 16
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 4
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 16
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 16
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 4
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=12
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 1
  op1_loc_c: 9
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 64
  input_mb_r: 13
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x3287d120], [5, 0x32f17140], [4, 0x335b1160], [7, 0x33c4b180], [6, 0x342e51a0], [6, 0x3497f1c0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 6
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x35965460]]'
  output1_dram_buffers: '[[1, 0x385d9e00]]'
  output2_dram_buffers: '[[1, 0x3adcb1a0]]'
  output3_dram_buffers: '[[1, 0x3d70c260]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 312
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 32
  op0_mb_r: 13
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 32
  output1_mb_r: 312
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 32
  op1_mb_r: 13
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 32
  output2_mb_r: 312
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 32
  op2_mb_r: 13
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 32
  output3_mb_r: 312
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 32
  op3_mb_r: 13
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=13
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 6
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x3d7ed680], [7, 0x3d8106a0], [2, 0x3d8336c0], [0, 0x3d8566e0], [5, 0x3d879700], [7, 0x3d89c720], [6, 0x3d8bf740], [6, 0x3d8e2760], [6, 0x3d905780], [6, 0x3d9287a0], [6, 0x3d94b7c0], [0, 0x3d96e7e0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3ed17a40], [7, 0x3ed3aa60], [2, 0x3ed5da80], [0, 0x3ed80aa0], [5, 0x3eda3ac0], [7, 0x3edc6ae0], [6, 0x3ede9b00], [6, 0x3ee0cb20], [6, 0x3ee2fb40], [6, 0x3ee52b60], [6, 0x3ee75b80], [0, 0x3ee98ba0]]'
  output1_dram_buffers: '[[0, 0x3f189e40], [7, 0x3f1f2e60], [2, 0x3f25be80], [0, 0x3f2c4ea0]]'
  output2_dram_buffers: '[[0, 0x3fc804e0], [7, 0x3fce9500], [2, 0x3fd52520], [0, 0x3fdbb540]]'
  output3_dram_buffers: '[[0, 0x3fe25560], [7, 0x3fe59d80], [2, 0x3fe8e5a0], [0, 0x3fec2dc0], [5, 0x3fef75e0], [7, 0x3ff2be00], [6, 0x3ff60620], [6, 0x3ff94e40]]'
  output0_grid_size_c: 6
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 8
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 6
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 8
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 6
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 6
  op0_loc_r: 3
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x3a397960], [6, 0x3a399c80], [5, 0x3a39bfa0], [0, 0x3a39e2c0], [1, 0x3a3a05e0], [7, 0x3a3a2900], [7, 0x3a3a4c20], [2, 0x3a3a6f40], [6, 0x3a3a9260], [6, 0x3a3ab580], [5, 0x3a3ad8a0], [1, 0x3a3afbc0], [7, 0x3a3b1ee0], [6, 0x3a3b4200], [3, 0x3a3b6520], [0, 0x3a3b8840], [1, 0x3a3bab60], [3, 0x3a3bce80], [5, 0x3a3bf1a0], [4, 0x3a3c14c0], [2, 0x3a3c37e0], [3, 0x3a3c5b00], [1, 0x3a3c7e20], [3, 0x3a3ca140]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3b242980], [6, 0x3b24fba0], [5, 0x3b25cdc0], [0, 0x3b269fe0]]'
  output1_dram_buffers: '[[2, 0x3c976980], [6, 0x3c97d2a0], [5, 0x3c983bc0], [0, 0x3c98a4e0], [1, 0x3c990e00], [7, 0x3c997720], [7, 0x3c99e040], [2, 0x3c9a4960]]'
  output2_dram_buffers: '[[2, 0x3cb9c160], [6, 0x3cba9380], [5, 0x3cbb65a0], [0, 0x3cbc37c0]]'
  output3_dram_buffers: '[[2, 0x3eb4a1e0], [6, 0x3eb57400], [5, 0x3eb64620], [0, 0x3eb71840]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 4
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 3
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 2
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 6
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 3
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=15
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 6
  op0_loc_r: 2
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 3
  input_mb_r: 10
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x30d1da20], [2, 0x30ff8e40], [1, 0x312d4260], [4, 0x315af680], [3, 0x3188aaa0], [2, 0x31b65ec0], [4, 0x31e412e0], [1, 0x3211c700], [3, 0x323f7b20], [3, 0x326d2f40], [1, 0x329ae360], [5, 0x32c89780]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 4
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x35f111c0]]'
  output1_dram_buffers: '[[3, 0x38e9e660]]'
  output2_dram_buffers: '[[3, 0x3b6a4140]]'
  output3_dram_buffers: '[[3, 0x3da37760]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 180
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 180
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 5
  op1_mb_c: 2
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 180
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 10
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 180
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=18
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=18
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=18
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=18
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=18
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=18
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=18
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=18
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=16
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x322bc2e0], [0, 0x322c0900], [5, 0x322c4f20], [7, 0x322c9540], [5, 0x322cdb60], [6, 0x322d2180], [5, 0x322d67a0], [6, 0x322dadc0], [4, 0x322df3e0], [7, 0x322e3a00], [5, 0x322e8020], [0, 0x322ec640], [0, 0x322f0c60], [4, 0x322f5280], [2, 0x322f98a0], [0, 0x322fdec0], [3, 0x323024e0], [3, 0x32306b00], [7, 0x3230b120], [6, 0x3230f740], [7, 0x32313d60], [2, 0x32318380], [2, 0x3231c9a0], [4, 0x32320fc0], [0, 0x323255e0], [3, 0x32329c00], [7, 0x3232e220], [7, 0x32332840], [5, 0x32336e60], [6, 0x3233b480], [0, 0x3233faa0], [2, 0x323440c0], [2, 0x323486e0], [5, 0x3234cd00], [0, 0x32351320], [5, 0x32355940]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3399a160], [0, 0x339b4580], [5, 0x339ce9a0], [7, 0x339e8dc0], [5, 0x33a031e0], [6, 0x33a1d600]]'
  output1_dram_buffers: '[[4, 0x3a9aa600], [0, 0x3a9c4a20], [5, 0x3a9dee40], [7, 0x3a9f9260], [5, 0x3aa13680], [6, 0x3aa2daa0]]'
  output2_dram_buffers: '[[4, 0x3e1ddea0], [0, 0x3e1f82c0], [5, 0x3e2126e0], [7, 0x3e22cb00], [5, 0x3e246f20], [6, 0x3e261340]]'
  output3_dram_buffers: '[[4, 0x3e463ae0], [0, 0x3e47df00], [5, 0x3e498320], [7, 0x3e4b2740], [5, 0x3e4ccb60], [6, 0x3e4e6f80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 12
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 1
  output1_mb_r: 2
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 2
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 3
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 6
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 6
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 6
  output3_ub_r: 2
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
##Test id=17
#- device: GRAYSKULL
#  entries: 16
#  op0_loc_c: 1
#  op0_loc_r: 1
#  op1_loc_c: 3
#  op1_loc_r: 1
#  op2_loc_c: 7
#  op2_loc_r: 0
#  op3_loc_c: 8
#  op3_loc_r: 1
#  input_t: 8
#  input_mb_r: 2
#  input_mb_c: 4
#  input_ub_r: 2
#  input_ub_c: 1
#  input_data_format: 'Float16'
#  out_data_format: 'Float16'
#  input_dram_buffers: '[[3, 0x35a36ae0], [2, 0x35e46b00], [3, 0x36256b20], [1, 0x36666b40], [1, 0x36a76b60], [7, 0x36e86b80], [5, 0x37296ba0], [5, 0x376a6bc0]]'
#  target_device: 0
#  input_count: 4
#  unary_type: datacopy
#  input_grid_size_c: 1
#  input_grid_size_r: 8
#  feeder_loc_c: 0
#  feeder_loc_r: 0
#  math_fidelity: HiFi2
#  untilize_output0:  'true'
#  untilize_output1:  'true'
#  untilize_output2:  'true'
#  untilize_output3:  'true'
#  input0_tms: '[vstack: 2]'
#  input1_tms: '[vstack: 2]'
#  input2_tms: '[vstack: 2]'
#  input3_tms: '[vstack: 2]'
#  ublock_order: r
#  buf_size_mb: 4
#  # Scale output queue grid and mblock size if output is untilized
#  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
#  output0_dram_buffers: '[[3, 0x37d86b40]]'
#  output1_dram_buffers: '[[3, 0x39e3e3e0]]'
#  output2_dram_buffers: '[[3, 0x3bef6720]]'
#  output3_dram_buffers: '[[3, 0x3df7e0e0]]'
#  output0_grid_size_c: 1
#  output0_grid_size_r: 1
#  output0_t: 4
#  output0_mb_r: 64
#  output0_mb_c: 4
#  output0_ub_r: 1
#  output0_ub_c: 1
#  op0_grid_size_c: 2
#  op0_grid_size_r: 4
#  op0_t: 4
#  op0_mb_r: 2
#  op0_mb_c: 2
#  op0_ub_r: 8
#  op0_ub_c: 1
#  output1_grid_size_c: 1
#  output1_grid_size_r: 1
#  output1_t: 4
#  output1_mb_r: 64
#  output1_mb_c: 4
#  output1_ub_r: 1
#  output1_ub_c: 1
#  op1_grid_size_c: 4
#  op1_grid_size_r: 2
#  op1_t: 4
#  op1_mb_r: 16
#  op1_mb_c: 1
#  op1_ub_r: 2
#  op1_ub_c: 1
#  output2_grid_size_c: 1
#  output2_grid_size_r: 1
#  output2_t: 4
#  output2_mb_r: 64
#  output2_mb_c: 4
#  output2_ub_r: 1
#  output2_ub_c: 1
#  op2_grid_size_c: 1
#  op2_grid_size_r: 8
#  op2_t: 4
#  op2_mb_r: 8
#  op2_mb_c: 1
#  op2_ub_r: 1
#  op2_ub_c: 4
#  output3_grid_size_c: 1
#  output3_grid_size_r: 1
#  output3_t: 4
#  output3_mb_r: 64
#  output3_mb_c: 4
#  output3_ub_r: 1
#  output3_ub_c: 1
#  op3_grid_size_c: 4
#  op3_grid_size_r: 2
#  op3_t: 4
#  op3_mb_r: 8
#  op3_mb_c: 1
#  op3_ub_r: 4
#  op3_ub_c: 1
#  # Program vars
#  loop_count: 2
#  queue_wrap_size: 32
#  # Test and stimulus config
#  comparison_config_type: 'AllCloseHw'
#  comparison_config_atol: 0.01
#  comparison_config_rtol: 0.15
#  comparison_config_check_pct: 0.90
#  comparison_config_check_pcc: 0.99
#  comparison_config_verbosity: 'Concise'
#  stimulus_config_type: 'Uniform'
#  stimulus_config_uniform_lower_bound: '-1.0'
#  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=18
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 7
  op0_loc_r: 1
  op1_loc_c: 9
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 16
  input_mb_r: 9
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x3b4d0cc0], [5, 0x3b7ac0e0], [0, 0x3ba87500], [5, 0x3bd62920]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 5
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3c09a680]]'
  output1_dram_buffers: '[[2, 0x3d2257c0]]'
  output2_dram_buffers: '[[2, 0x3e007860]]'
  output3_dram_buffers: '[[2, 0x3f088460]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 360
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 8
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 360
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 8
  op1_mb_r: 15
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 360
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 8
  op2_mb_r: 15
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 360
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 8
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 14
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x3247c860], [2, 0x32643880], [3, 0x3280a8a0], [5, 0x329d18c0], [3, 0x32b988e0], [5, 0x32d5f900], [4, 0x32f26920], [1, 0x330ed940], [4, 0x332b4960], [1, 0x3347b980], [4, 0x336429a0], [6, 0x338099c0], [0, 0x339d09e0], [0, 0x33b97a00], [4, 0x33d5ea20], [6, 0x33f25a40], [7, 0x340eca60], [6, 0x342b3a80], [5, 0x3447aaa0], [2, 0x34641ac0], [6, 0x34808ae0], [6, 0x349cfb00], [4, 0x34b96b20], [1, 0x34d5db40]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x354f0260]]'
  output1_dram_buffers: '[[2, 0x37fcaec0]]'
  output2_dram_buffers: '[[2, 0x3aa85660]]'
  output3_dram_buffers: '[[2, 0x3d542b80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 7
  output0_mb_r: 12
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 7
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 7
  output1_mb_r: 12
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 4
  op1_t: 7
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 12
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 7
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 2
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 7
  output3_mb_r: 12
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 7
  op3_mb_r: 1
  op3_mb_c: 16
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
##Test id=20
#- device: GRAYSKULL
#  entries: 4
#  op0_loc_c: 2
#  op0_loc_r: 1
#  op1_loc_c: 3
#  op1_loc_r: 4
#  op2_loc_c: 5
#  op2_loc_r: 2
#  op3_loc_c: 7
#  op3_loc_r: 4
#  input_t: 46
#  input_mb_r: 1
#  input_mb_c: 5
#  input_ub_r: 1
#  input_ub_c: 2
#  input_data_format: 'Float16'
#  out_data_format: 'Float16'
#  input_dram_buffers: '[[2, 0x35b03b40], [0, 0x35eaa160], [2, 0x36250780], [6, 0x365f6da0], [4, 0x3699d3c0], [4, 0x36d439e0], [2, 0x370ea000], [1, 0x37490620]]'
#  target_device: 0
#  input_count: 1
#  unary_type: datacopy
#  input_grid_size_c: 1
#  input_grid_size_r: 8
#  feeder_loc_c: 1
#  feeder_loc_r: 0
#  math_fidelity: LoFi
#  untilize_output0:  'true'
#  untilize_output1:  'true'
#  untilize_output2:  'true'
#  untilize_output3:  'true'
#  input0_tms: '[vstack: 2]'
#  input1_tms: '[vstack: 2]'
#  input2_tms: '[vstack: 2]'
#  input3_tms: '[vstack: 2]'
#  ublock_order: r
#  buf_size_mb: 4
#  # Scale output queue grid and mblock size if output is untilized
#  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
#  output0_dram_buffers: '[[2, 0x378e0f60]]'
#  output1_dram_buffers: '[[2, 0x3a550240]]'
#  output2_dram_buffers: '[[2, 0x3c32ea80]]'
#  output3_dram_buffers: '[[2, 0x3e2a33c0]]'
#  output0_grid_size_c: 1
#  output0_grid_size_r: 1
#  output0_t: 23
#  output0_mb_r: 16
#  output0_mb_c: 10
#  output0_ub_r: 1
#  output0_ub_c: 1
#  op0_grid_size_c: 1
#  op0_grid_size_r: 4
#  op0_t: 23
#  op0_mb_r: 4
#  op0_mb_c: 2
#  op0_ub_r: 1
#  op0_ub_c: 5
#  output1_grid_size_c: 1
#  output1_grid_size_r: 1
#  output1_t: 23
#  output1_mb_r: 16
#  output1_mb_c: 10
#  output1_ub_r: 1
#  output1_ub_c: 1
#  op1_grid_size_c: 2
#  op1_grid_size_r: 4
#  op1_t: 23
#  op1_mb_r: 4
#  op1_mb_c: 1
#  op1_ub_r: 1
#  op1_ub_c: 5
#  output2_grid_size_c: 1
#  output2_grid_size_r: 1
#  output2_t: 23
#  output2_mb_r: 16
#  output2_mb_c: 10
#  output2_ub_r: 1
#  output2_ub_c: 1
#  op2_grid_size_c: 2
#  op2_grid_size_r: 4
#  op2_t: 23
#  op2_mb_r: 2
#  op2_mb_c: 5
#  op2_ub_r: 2
#  op2_ub_c: 1
#  output3_grid_size_c: 1
#  output3_grid_size_r: 1
#  output3_t: 23
#  output3_mb_r: 16
#  output3_mb_c: 10
#  output3_ub_r: 1
#  output3_ub_c: 1
#  op3_grid_size_c: 5
#  op3_grid_size_r: 2
#  op3_t: 23
#  op3_mb_r: 8
#  op3_mb_c: 1
#  op3_ub_r: 1
#  op3_ub_c: 2
#  # Program vars
#  loop_count: 2
#  queue_wrap_size: 8
#  # Test and stimulus config
#  comparison_config_type: 'AllCloseHw'
#  comparison_config_atol: 0.01
#  comparison_config_rtol: 0.15
#  comparison_config_check_pct: 0.90
#  comparison_config_check_pcc: 0.99
#  comparison_config_verbosity: 'Concise'
#  stimulus_config_type: 'Uniform'
#  stimulus_config_uniform_lower_bound: '-1.0'
#  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=5
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=5
#Test id=21
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 50
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x310fb580], [7, 0x31a80da0], [6, 0x324065c0], [7, 0x32d8bde0], [5, 0x33711600]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 5
  feeder_loc_c: 1
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x340ae420]]'
  output1_dram_buffers: '[[5, 0x3709c4e0]]'
  output2_dram_buffers: '[[5, 0x3a087a40]]'
  output3_dram_buffers: '[[5, 0x3d0290a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 25
  output0_mb_r: 10
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 25
  op0_mb_r: 5
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 25
  output1_mb_r: 10
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 25
  op1_mb_r: 1
  op1_mb_c: 6
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 25
  output2_mb_r: 10
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 25
  op2_mb_r: 5
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 25
  output3_mb_r: 10
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 25
  op3_mb_r: 5
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=22
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 63
  input_mb_r: 13
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[3, 0x305f90a0], [1, 0x312dea40], [3, 0x31fc43e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 4
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x32edbda0]]'
  output1_dram_buffers: '[[3, 0x355b2120]]'
  output2_dram_buffers: '[[3, 0x38794040]]'
  output3_dram_buffers: '[[3, 0x3b076b60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 21
  output0_mb_r: 117
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 21
  op0_mb_r: 13
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 21
  output1_mb_r: 117
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 21
  op1_mb_r: 13
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 21
  output2_mb_r: 117
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 21
  op2_mb_r: 13
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 21
  output3_mb_r: 117
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 21
  op3_mb_r: 13
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=23
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 13
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x37df9580], [7, 0x380731a0], [0, 0x382ecdc0], [7, 0x385669e0], [0, 0x387e0600], [0, 0x38a5a220], [3, 0x38cd3e40], [4, 0x38f4da60]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 3
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x396813e0]]'
  output1_dram_buffers: '[[0, 0x3ab873e0]]'
  output2_dram_buffers: '[[0, 0x3c293680]]'
  output3_dram_buffers: '[[0, 0x3dd8d080]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 208
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 13
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 208
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 13
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 208
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 1
  op2_mb_r: 13
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 208
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 13
  op3_mb_c: 3
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=24
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 18
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x33356020], [1, 0x3380c940], [4, 0x33cc3260], [0, 0x34179b80], [3, 0x346304a0], [5, 0x34ae6dc0], [0, 0x34f9d6e0], [5, 0x35454000]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x35eb4760]]'
  output1_dram_buffers: '[[5, 0x38a4ac60]]'
  output2_dram_buffers: '[[5, 0x3b28c300]]'
  output3_dram_buffers: '[[5, 0x3da04ae0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 264
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 9
  op0_mb_r: 11
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 264
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 8
  op1_t: 9
  op1_mb_r: 11
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 264
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 9
  op2_mb_r: 11
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 264
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 8
  op3_t: 9
  op3_mb_r: 11
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=25
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 6
  input_mb_r: 5
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x3639a6e0], [1, 0x3685d300], [1, 0x36d1ff20]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x376c72a0]]'
  output1_dram_buffers: '[[3, 0x38f7ac20]]'
  output2_dram_buffers: '[[3, 0x3a393000]]'
  output3_dram_buffers: '[[3, 0x3b58c4c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 225
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 2
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 225
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 2
  op1_mb_r: 15
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 225
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 2
  op2_mb_r: 15
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 225
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=26
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 5
  op0_loc_r: 2
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 16
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x370b7640], [7, 0x3717a660], [7, 0x3723d680], [7, 0x373006a0], [0, 0x373c36c0], [3, 0x374866e0], [6, 0x37549700], [2, 0x3760c720], [4, 0x376cf740], [3, 0x37792760], [3, 0x37855780], [1, 0x379187a0], [7, 0x379db7c0], [1, 0x37a9e7e0], [0, 0x37b61800], [7, 0x37c24820]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x38ab8b40]]'
  output1_dram_buffers: '[[4, 0x39bab780]]'
  output2_dram_buffers: '[[4, 0x3a9c3f80]]'
  output3_dram_buffers: '[[4, 0x3c45c3a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 48
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 8
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 48
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 2
  op1_t: 8
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 48
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 8
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 4
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 48
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 8
  op3_mb_r: 6
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=27
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 5
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 9
  op3_loc_r: 5
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3ac37620], [2, 0x3ac63240], [0, 0x3ac8ee60], [0, 0x3acbaa80], [4, 0x3ace66a0], [4, 0x3ad122c0], [5, 0x3ad3dee0], [5, 0x3ad69b00], [6, 0x3ad95720], [4, 0x3adc1340], [3, 0x3adecf60], [3, 0x3ae18b80], [5, 0x3ae447a0], [3, 0x3ae703c0], [2, 0x3ae9bfe0], [3, 0x3aec7c00], [7, 0x3aef3820], [3, 0x3af1f440]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3b466aa0], [2, 0x3b4e9ec0], [0, 0x3b56d2e0], [0, 0x3b5f0700], [4, 0x3b673b20], [4, 0x3b6f6f40]]'
  output1_dram_buffers: '[[3, 0x3c512ae0], [2, 0x3c595f00], [0, 0x3c619320], [0, 0x3c69c740], [4, 0x3c71fb60], [4, 0x3c7a2f80]]'
  output2_dram_buffers: '[[3, 0x3df83640], [2, 0x3e006a60], [0, 0x3e089e80], [0, 0x3e10d2a0], [4, 0x3e1906c0], [4, 0x3e213ae0]]'
  output3_dram_buffers: '[[3, 0x3f916e60], [2, 0x3f99a280], [0, 0x3fa1d6a0], [0, 0x3faa0ac0], [4, 0x3fb23ee0], [4, 0x3fba7300]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 15
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 2
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 1
  output1_mb_r: 10
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 10
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 1
  output2_mb_r: 5
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 5
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 3
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 5
  output3_mb_c: 2
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 5
  op3_mb_c: 2
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=28
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 32
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x3001a880], [7, 0x302228a0], [6, 0x3042a8c0], [4, 0x306328e0], [7, 0x3083a900], [0, 0x30a42920], [1, 0x30c4a940], [0, 0x30e52960], [3, 0x3105a980], [2, 0x312629a0], [2, 0x3146a9c0], [1, 0x316729e0], [6, 0x3187aa00], [3, 0x31a82a20], [2, 0x31c8aa40], [5, 0x31e92a60], [7, 0x3209aa80], [5, 0x322a2aa0], [5, 0x324aaac0], [1, 0x326b2ae0], [5, 0x328bab00], [2, 0x32ac2b20], [6, 0x32ccab40], [2, 0x32ed2b60]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x33a174c0]]'
  output1_dram_buffers: '[[7, 0x36d55380]]'
  output2_dram_buffers: '[[7, 0x39e70800]]'
  output3_dram_buffers: '[[7, 0x3cf3c0c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 32
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 16
  op0_mb_r: 8
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 32
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 16
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 32
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 8
  op2_t: 16
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 32
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 16
  op3_mb_r: 2
  op3_mb_c: 6
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=29
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 7
  op2_loc_r: 2
  op3_loc_c: 9
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 1
  input_mb_c: 6
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x32c89de0], [4, 0x32d4ce00], [3, 0x32e0fe20], [7, 0x32ed2e40], [2, 0x32f95e60], [4, 0x33058e80], [2, 0x3311bea0], [1, 0x331deec0], [4, 0x332a1ee0], [7, 0x33364f00], [5, 0x33427f20], [6, 0x334eaf40]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x39b12e20]]'
  output1_dram_buffers: '[[3, 0x3b4a56a0]]'
  output2_dram_buffers: '[[3, 0x3d576020]]'
  output3_dram_buffers: '[[3, 0x3f554ce0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 12
  output0_mb_c: 96
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 2
  op0_mb_c: 16
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 12
  output1_mb_c: 96
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 16
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 12
  output2_mb_c: 96
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 12
  output3_mb_c: 96
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=3
#Test id=30
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 0
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x33f45d60], [4, 0x33fa1b80], [7, 0x33ffd9a0], [7, 0x340597c0], [4, 0x340b55e0], [7, 0x34111400], [1, 0x3416d220], [0, 0x341c9040]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 5
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x388e0a60], [4, 0x3893c880], [7, 0x389986a0], [7, 0x389f44c0], [4, 0x38a502e0], [7, 0x38aac100], [1, 0x38b07f20], [0, 0x38b63d40]]'
  output1_dram_buffers: '[[2, 0x3e1a2fc0], [4, 0x3e1fede0], [7, 0x3e25ac00], [7, 0x3e2b6a20], [4, 0x3e312840], [7, 0x3e36e660], [1, 0x3e3ca480], [0, 0x3e4262a0]]'
  output2_dram_buffers: '[[2, 0x3ea9c280], [4, 0x3eaf80a0], [7, 0x3eb53ec0], [7, 0x3ebafce0], [4, 0x3ec0bb00], [7, 0x3ec67920], [1, 0x3ecc3740], [0, 0x3ed1f560]]'
  output3_dram_buffers: '[[2, 0x3faaaf80], [4, 0x3fb06da0], [7, 0x3fb62bc0], [7, 0x3fbbe9e0], [4, 0x3fc1a800], [7, 0x3fc76620], [1, 0x3fcd2440], [0, 0x3fd2e260]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 1
  output0_mb_r: 14
  output0_mb_c: 1
  output0_ub_r: 3
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 1
  output1_mb_r: 14
  output1_mb_c: 1
  output1_ub_r: 3
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 14
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 14
  output2_mb_c: 1
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 1
  output3_mb_r: 6
  output3_mb_c: 2
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 6
  op3_mb_c: 2
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=31
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 6
  op1_loc_r: 6
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 6
  input_t: 62
  input_mb_r: 1
  input_mb_c: 12
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x36a845c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x38949880]]'
  output1_dram_buffers: '[[7, 0x3a72bdc0]]'
  output2_dram_buffers: '[[7, 0x3c4bca80]]'
  output3_dram_buffers: '[[7, 0x3e25e980]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 31
  output0_mb_r: 2
  output0_mb_c: 60
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 31
  op0_mb_r: 1
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 31
  output1_mb_r: 2
  output1_mb_c: 60
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 31
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 31
  output2_mb_r: 2
  output2_mb_c: 60
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 2
  op2_t: 31
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 31
  output3_mb_r: 2
  output3_mb_c: 60
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 31
  op3_mb_r: 1
  op3_mb_c: 12
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=32
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 5
  op0_loc_r: 4
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 54
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x3a44dc00], [0, 0x3a4849a0], [3, 0x3a4bb740], [7, 0x3a4f24e0], [0, 0x3a529280], [4, 0x3a560020], [4, 0x3a596dc0], [5, 0x3a5cdb60], [4, 0x3a604900], [3, 0x3a63b6a0], [4, 0x3a672440], [5, 0x3a6a91e0], [3, 0x3a6dff80], [0, 0x3a716d20], [1, 0x3a74dac0], [4, 0x3a784860], [1, 0x3a7bb600], [4, 0x3a7f23a0], [2, 0x3a829140], [0, 0x3a85fee0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3ec682a0]]'
  output1_dram_buffers: '[[3, 0x3f1345a0]]'
  output2_dram_buffers: '[[3, 0x3f66b5a0]]'
  output3_dram_buffers: '[[3, 0x3fb6a780]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 27
  output0_mb_r: 8
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 27
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 27
  output1_mb_r: 8
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 27
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 27
  output2_mb_r: 8
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 27
  op2_mb_r: 2
  op2_mb_c: 5
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 27
  output3_mb_r: 8
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 27
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=33
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 7
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 44
  input_mb_r: 7
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x34acb500], [4, 0x34e75c20], [7, 0x35220340], [5, 0x355caa60], [0, 0x35975180], [2, 0x35d1f8a0], [1, 0x360c9fc0], [4, 0x364746e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x368e9360]]'
  output1_dram_buffers: '[[3, 0x3963fc00]]'
  output2_dram_buffers: '[[3, 0x3bee2520]]'
  output3_dram_buffers: '[[3, 0x3de2f920]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 22
  output0_mb_r: 336
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 22
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 22
  output1_mb_r: 336
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 22
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 22
  output2_mb_r: 336
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 22
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 22
  output3_mb_r: 336
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 22
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
##Test id=34
#- device: GRAYSKULL
#  entries: 8
#  op0_loc_c: 2
#  op0_loc_r: 3
#  op1_loc_c: 3
#  op1_loc_r: 4
#  op2_loc_c: 5
#  op2_loc_r: 1
#  op3_loc_c: 7
#  op3_loc_r: 1
#  input_t: 30
#  input_mb_r: 1
#  input_mb_c: 4
#  input_ub_r: 1
#  input_ub_c: 5
#  input_data_format: 'Float16_b'
#  out_data_format: 'Float16_b'
#  input_dram_buffers: '[[4, 0x32b1b400], [4, 0x334a0c20], [7, 0x33e26440], [4, 0x347abc60]]'
#  target_device: 0
#  input_count: 4
#  unary_type: datacopy
#  input_grid_size_c: 1
#  input_grid_size_r: 4
#  feeder_loc_c: 0
#  feeder_loc_r: 4
#  math_fidelity: HiFi2
#  untilize_output0:  'true'
#  untilize_output1:  'true'
#  untilize_output2:  'true'
#  untilize_output3:  'true'
#  input0_tms: '[vstack: 2]'
#  input1_tms: '[vstack: 2]'
#  input2_tms: '[vstack: 2]'
#  input3_tms: '[vstack: 2]'
#  ublock_order: r
#  buf_size_mb: 4
#  # Scale output queue grid and mblock size if output is untilized
#  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
#  output0_dram_buffers: '[[4, 0x3514ca20]]'
#  output1_dram_buffers: '[[4, 0x3825cb40]]'
#  output2_dram_buffers: '[[4, 0x3b0b8480]]'
#  output3_dram_buffers: '[[4, 0x3d94f3a0]]'
#  output0_grid_size_c: 1
#  output0_grid_size_r: 1
#  output0_t: 15
#  output0_mb_r: 8
#  output0_mb_c: 20
#  output0_ub_r: 1
#  output0_ub_c: 1
#  op0_grid_size_c: 1
#  op0_grid_size_r: 4
#  op0_t: 15
#  op0_mb_r: 1
#  op0_mb_c: 5
#  op0_ub_r: 2
#  op0_ub_c: 4
#  output1_grid_size_c: 1
#  output1_grid_size_r: 1
#  output1_t: 15
#  output1_mb_r: 8
#  output1_mb_c: 20
#  output1_ub_r: 1
#  output1_ub_c: 1
#  op1_grid_size_c: 2
#  op1_grid_size_r: 2
#  op1_t: 15
#  op1_mb_r: 4
#  op1_mb_c: 2
#  op1_ub_r: 1
#  op1_ub_c: 5
#  output2_grid_size_c: 1
#  output2_grid_size_r: 1
#  output2_t: 15
#  output2_mb_r: 8
#  output2_mb_c: 20
#  output2_ub_r: 1
#  output2_ub_c: 1
#  op2_grid_size_c: 2
#  op2_grid_size_r: 2
#  op2_t: 15
#  op2_mb_r: 4
#  op2_mb_c: 2
#  op2_ub_r: 1
#  op2_ub_c: 5
#  output3_grid_size_c: 1
#  output3_grid_size_r: 1
#  output3_t: 15
#  output3_mb_r: 8
#  output3_mb_c: 20
#  output3_ub_r: 1
#  output3_ub_c: 1
#  op3_grid_size_c: 5
#  op3_grid_size_r: 2
#  op3_t: 15
#  op3_mb_r: 4
#  op3_mb_c: 1
#  op3_ub_r: 1
#  op3_ub_c: 4
#  # Program vars
#  loop_count: 2
#  queue_wrap_size: 16
#  # Test and stimulus config
#  comparison_config_type: 'AllCloseHw'
#  comparison_config_atol: 0.01
#  comparison_config_rtol: 0.15
#  comparison_config_check_pct: 0.90
#  comparison_config_check_pcc: 0.99
#  comparison_config_verbosity: 'Concise'
#  stimulus_config_type: 'Uniform'
#  stimulus_config_uniform_lower_bound: '-1.0'
#  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=5
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=5
#Test id=35
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 2
  op1_loc_r: 3
  op2_loc_c: 4
  op2_loc_r: 0
  op3_loc_c: 5
  op3_loc_r: 4
  input_t: 15
  input_mb_r: 1
  input_mb_c: 5
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[6, 0x3427b840], [6, 0x34ad0560]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3b50f900]]'
  output1_dram_buffers: '[[6, 0x3c9e0cc0]]'
  output2_dram_buffers: '[[6, 0x3dade8a0]]'
  output3_dram_buffers: '[[6, 0x3ee393e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 42
  output0_mb_c: 5
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 5
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 5
  output1_mb_r: 42
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 5
  op1_mb_r: 2
  op1_mb_c: 5
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 42
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 5
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 42
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 5
  op3_mb_r: 7
  op3_mb_c: 5
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=6
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=6
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=6
# reblock_tm_fork_c_factor_int[3]=1
#Test id=36
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 48
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x36a2b640], [7, 0x36c12e60], [7, 0x36dfa680], [1, 0x36fe1ea0], [0, 0x371c96c0], [7, 0x373b0ee0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 7
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3817d360]]'
  output1_dram_buffers: '[[6, 0x3addf580]]'
  output2_dram_buffers: '[[6, 0x3d7f9760]]'
  output3_dram_buffers: '[[6, 0x3ec5fea0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 90
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 16
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 90
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 16
  op1_mb_r: 5
  op1_mb_c: 2
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 90
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 16
  op2_mb_r: 10
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 90
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 16
  op3_mb_r: 10
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=18
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=18
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=37
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 5
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 2
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 8
  op3_loc_r: 5
  input_t: 2
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x3e8c8080], [6, 0x3e90e0a0], [4, 0x3e9540c0], [4, 0x3e99a0e0], [1, 0x3e9e0100], [3, 0x3ea26120]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 2
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3ea72240], [6, 0x3eb44260]]'
  output1_dram_buffers: '[[5, 0x3ec268a0], [6, 0x3ecf88c0]]'
  output2_dram_buffers: '[[5, 0x3f80c040], [6, 0x3f875060], [4, 0x3f8de080], [4, 0x3f9470a0]]'
  output3_dram_buffers: '[[5, 0x3fadae00], [6, 0x3fb20e20], [4, 0x3fb66e40], [4, 0x3fbace60], [1, 0x3fbf2e80], [3, 0x3fc38ea0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 2
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 2
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 2
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 2
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 8
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 3
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 2
  output3_ub_c: 4
  op3_grid_size_c: 3
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=38
- device: GRAYSKULL
  entries: 10
  op0_loc_c: 7
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 10
  input_mb_r: 9
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x35be3b40], [3, 0x35dacbe0], [0, 0x35f75c80], [0, 0x3613ed20]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3b019fc0]]'
  output1_dram_buffers: '[[7, 0x3c9f8340]]'
  output2_dram_buffers: '[[7, 0x3d972c00]]'
  output3_dram_buffers: '[[7, 0x3f15c2e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 72
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 5
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 5
  output1_mb_r: 72
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 5
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 72
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 5
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 72
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 5
  op3_mb_r: 12
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 20
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=39
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 1
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 48
  input_mb_r: 3
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x32c0aa80], [7, 0x3389c2a0], [3, 0x3452dac0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 1
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x35429e20]]'
  output1_dram_buffers: '[[0, 0x386bf560]]'
  output2_dram_buffers: '[[0, 0x3b3c62e0]]'
  output3_dram_buffers: '[[0, 0x3da00400]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 27
  output0_mb_c: 11
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 16
  op0_mb_r: 3
  op0_mb_c: 11
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 27
  output1_mb_c: 11
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 16
  op1_mb_r: 9
  op1_mb_c: 11
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 27
  output2_mb_c: 11
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 16
  op2_mb_r: 9
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 27
  output3_mb_c: 11
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 16
  op3_mb_r: 3
  op3_mb_c: 11
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=40
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 6
  op0_loc_r: 1
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x3d55c2a0], [5, 0x3d57f2c0], [7, 0x3d5a22e0], [2, 0x3d5c5300], [1, 0x3d5e8320], [1, 0x3d60b340], [5, 0x3d62e360], [1, 0x3d651380], [0, 0x3d6743a0], [3, 0x3d6973c0], [1, 0x3d6ba3e0], [0, 0x3d6dd400], [2, 0x3d700420], [6, 0x3d723440], [0, 0x3d746460], [7, 0x3d769480], [7, 0x3d78c4a0], [3, 0x3d7af4c0], [3, 0x3d7d24e0], [2, 0x3d7f5500], [3, 0x3d818520], [2, 0x3d83b540], [3, 0x3d85e560], [4, 0x3d881580], [1, 0x3d8a45a0], [3, 0x3d8c75c0], [0, 0x3d8ea5e0], [6, 0x3d90d600], [3, 0x3d930620], [6, 0x3d953640]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3dfd5ea0], [5, 0x3e02d6c0], [7, 0x3e084ee0], [2, 0x3e0dc700], [1, 0x3e133f20], [1, 0x3e18b740], [5, 0x3e1e2f60], [1, 0x3e23a780], [0, 0x3e291fa0], [3, 0x3e2e97c0], [1, 0x3e340fe0], [0, 0x3e398800]]'
  output1_dram_buffers: '[[6, 0x3e6bd0a0], [5, 0x3e76c0c0], [7, 0x3e81b0e0], [2, 0x3e8ca100], [1, 0x3e979120], [1, 0x3ea28140]]'
  output2_dram_buffers: '[[6, 0x3f0e6fc0], [5, 0x3f195fe0], [7, 0x3f245000], [2, 0x3f2f4020], [1, 0x3f3a3040], [1, 0x3f452060]]'
  output3_dram_buffers: '[[6, 0x3f73eca0], [5, 0x3f7c20c0], [7, 0x3f8454e0], [2, 0x3f8c8900], [1, 0x3f94bd20], [1, 0x3f9cf140], [5, 0x3fa52560], [1, 0x3fad5980]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 6
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 5
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 5
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 1
  output3_mb_r: 3
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=41
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 5
  op0_loc_r: 3
  op1_loc_c: 6
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x39d971c0], [6, 0x39da34e0], [6, 0x39daf800], [6, 0x39dbbb20], [6, 0x39dc7e40], [1, 0x39dd4160], [7, 0x39de0480], [4, 0x39dec7a0], [4, 0x39df8ac0], [0, 0x39e04de0], [2, 0x39e11100], [4, 0x39e1d420]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 3
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3bd52100]]'
  output1_dram_buffers: '[[3, 0x3e3b2900]]'
  output2_dram_buffers: '[[3, 0x3e519c20]]'
  output3_dram_buffers: '[[3, 0x3fdd6080]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 12
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 3
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 12
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 12
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=42
- device: GRAYSKULL
  entries: 28
  op0_loc_c: 8
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 5
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 54
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x342b3540]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x376cfac0]]'
  output1_dram_buffers: '[[2, 0x39c6d2a0]]'
  output2_dram_buffers: '[[2, 0x3bd843a0]]'
  output3_dram_buffers: '[[2, 0x3dee6ca0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 18
  output0_mb_r: 33
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 18
  op0_mb_r: 11
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 18
  output1_mb_r: 33
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 18
  op1_mb_r: 11
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 33
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 18
  op2_mb_r: 11
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 33
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 18
  op3_mb_r: 11
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=9
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=9
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=9
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=9
# reblock_tm_fork_c_factor_int[3]=1
#Test id=43
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 2
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x348c4800], [2, 0x348e3220], [5, 0x34901c40], [5, 0x34920660]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 3
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3887b260], [2, 0x38899c80], [5, 0x388b86a0], [5, 0x388d70c0]]'
  output1_dram_buffers: '[[1, 0x3ac0ea60], [2, 0x3ac1df80], [5, 0x3ac2d4a0], [5, 0x3ac3c9c0], [1, 0x3ac4bee0], [5, 0x3ac5b400], [3, 0x3ac6a920], [3, 0x3ac79e40]]'
  output2_dram_buffers: '[[1, 0x3c196880], [2, 0x3c1a5da0], [5, 0x3c1b52c0], [5, 0x3c1c47e0], [1, 0x3c1d3d00], [5, 0x3c1e3220], [3, 0x3c1f2740], [3, 0x3c201c60]]'
  output3_dram_buffers: '[[1, 0x3e877a60], [2, 0x3e8b4e80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 7
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 7
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 8
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 16
  output3_mb_c: 7
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 16
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=44
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 8
  op3_loc_r: 6
  input_t: 36
  input_mb_r: 9
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[6, 0x32d1ed80], [6, 0x332431a0], [7, 0x337675c0], [6, 0x33c8b9e0], [7, 0x341afe00], [2, 0x346d4220], [4, 0x34bf8640], [3, 0x3511ca60]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x35a967a0]]'
  output1_dram_buffers: '[[6, 0x38441840]]'
  output2_dram_buffers: '[[6, 0x3ad7c620]]'
  output3_dram_buffers: '[[6, 0x3d6cdec0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 18
  output0_mb_r: 72
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 18
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 18
  output1_mb_r: 72
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 18
  op1_mb_r: 3
  op1_mb_c: 2
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 72
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 18
  op2_mb_r: 12
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 72
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 18
  op3_mb_r: 12
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=45
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 16
  input_mb_r: 6
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x30200a40], [7, 0x30818a60], [4, 0x30e30a80], [2, 0x31448aa0], [1, 0x31a60ac0], [3, 0x32078ae0], [2, 0x32690b00], [1, 0x32ca8b20]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x334d4040]]'
  output1_dram_buffers: '[[7, 0x36cd4860]]'
  output2_dram_buffers: '[[7, 0x39dbcbc0]]'
  output3_dram_buffers: '[[7, 0x3cf1d020]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 768
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 8
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 768
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 8
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 768
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 8
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 768
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 8
  op3_mb_r: 16
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=46
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 48
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x3765a020]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x398f3d80]]'
  output1_dram_buffers: '[[4, 0x3b255540]]'
  output2_dram_buffers: '[[4, 0x3cc54820]]'
  output3_dram_buffers: '[[4, 0x3e662ba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 99
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 16
  op0_mb_r: 11
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 99
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 16
  op1_mb_r: 11
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 99
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 16
  op2_mb_r: 11
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 99
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 16
  op3_mb_r: 11
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=9
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=9
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=9
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=9
# reblock_tm_fork_c_factor_int[3]=1
#Test id=47
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 30
  input_mb_r: 7
  input_mb_c: 2
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x3b1b7b80]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3c4cb4e0]]'
  output1_dram_buffers: '[[3, 0x3dfedba0]]'
  output2_dram_buffers: '[[3, 0x3eb2aee0]]'
  output3_dram_buffers: '[[3, 0x3f565d20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 63
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 10
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 63
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 10
  op1_mb_r: 7
  op1_mb_c: 2
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 63
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 10
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 10
  output3_mb_r: 63
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 10
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=9
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=9
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=9
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=9
# reblock_tm_fork_c_factor_int[3]=1
#Test id=48
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 8
  op3_loc_r: 6
  input_t: 18
  input_mb_r: 5
  input_mb_c: 2
  input_ub_r: 3
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x30663760], [0, 0x30ef5380], [2, 0x31786fa0], [0, 0x32018bc0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x33747f40]]'
  output1_dram_buffers: '[[5, 0x391ef9c0]]'
  output2_dram_buffers: '[[5, 0x3ba032a0]]'
  output3_dram_buffers: '[[5, 0x3dc745a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 60
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 9
  op0_mb_r: 10
  op0_mb_c: 4
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 60
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 9
  op1_mb_r: 6
  op1_mb_c: 4
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 60
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 9
  op2_mb_r: 15
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 60
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 9
  op3_mb_r: 15
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=49
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x3ab2e620], [3, 0x3ab30940], [1, 0x3ab32c60], [4, 0x3ab34f80], [3, 0x3ab372a0], [2, 0x3ab395c0], [5, 0x3ab3b8e0], [6, 0x3ab3dc00], [5, 0x3ab3ff20], [6, 0x3ab42240], [3, 0x3ab44560], [4, 0x3ab46880], [0, 0x3ab48ba0], [7, 0x3ab4aec0], [4, 0x3ab4d1e0], [4, 0x3ab4f500], [6, 0x3ab51820], [1, 0x3ab53b40], [7, 0x3ab55e60], [7, 0x3ab58180], [5, 0x3ab5a4a0], [4, 0x3ab5c7c0], [5, 0x3ab5eae0], [2, 0x3ab60e00], [4, 0x3ab63120], [1, 0x3ab65440], [6, 0x3ab67760], [5, 0x3ab69a80], [5, 0x3ab6bda0], [3, 0x3ab6e0c0], [3, 0x3ab703e0], [1, 0x3ab72700], [3, 0x3ab74a20], [3, 0x3ab76d40], [1, 0x3ab79060], [3, 0x3ab7b380], [7, 0x3ab7d6a0], [3, 0x3ab7f9c0], [2, 0x3ab81ce0], [0, 0x3ab84000]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 8
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3ad4c660], [3, 0x3ad62480], [1, 0x3ad782a0], [4, 0x3ad8e0c0]]'
  output1_dram_buffers: '[[3, 0x3af60780], [3, 0x3af6b6a0], [1, 0x3af765c0], [4, 0x3af814e0], [3, 0x3af8c400], [2, 0x3af97320], [5, 0x3afa2240], [6, 0x3afad160]]'
  output2_dram_buffers: '[[3, 0x3b4ae300], [3, 0x3b4c4120], [1, 0x3b4d9f40], [4, 0x3b4efd60]]'
  output3_dram_buffers: '[[3, 0x3e514520], [3, 0x3e52a340], [1, 0x3e540160], [4, 0x3e555f80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 1
  output0_mb_r: 4
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 5
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 5
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 5
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 4
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 4
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
