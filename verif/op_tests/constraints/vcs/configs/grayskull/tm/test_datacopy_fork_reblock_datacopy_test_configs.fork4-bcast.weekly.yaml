#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 6
  op1_loc_r: 8
  op2_loc_c: 7
  op2_loc_r: 2
  op3_loc_c: 8
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x325835a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 26}, broadcast: {r: 14}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 22}, broadcast: {r: 14}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 61}, broadcast: {r: 14}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 20}, broadcast: {r: 14}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x37be7600], [7, 0x37e3c920], [7, 0x38091c40], [6, 0x382e6f60]]'
  output1_dram_buffers: '[[4, 0x3c273300], [7, 0x3c665d20]]'
  output2_dram_buffers: '[[4, 0x3dc8c860], [7, 0x3e77eb80]]'
  output3_dram_buffers: '[[4, 0x3f7322c0], [7, 0x3f8fd8e0], [7, 0x3fac8f00], [6, 0x3fc94520]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 1
  output0_t: 26
  output0_mb_r: 7
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 3
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 26
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 22
  output1_mb_r: 7
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 22
  op1_mb_r: 7
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 61
  output2_mb_r: 1
  output2_mb_c: 12
  output2_ub_r: 7
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 61
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 20
  output3_mb_r: 7
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 20
  op3_mb_r: 7
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=12
# tm_r_factor[0]=14
# effective_consumer_grid_size_r[0]=14
# effective_consumer_grid_size_c[0]=48
# effective_consumer_grid_size_r_reblock[0]=14
# effective_consumer_grid_size_c_reblock[0]=48
# reblock_tm_fork_r_factor_int[0]=14
# reblock_tm_fork_c_factor_int[0]=48
# tm_c_factor[1]=12
# tm_r_factor[1]=14
# effective_consumer_grid_size_r[1]=28
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=28
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=28
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=12
# tm_r_factor[2]=14
# effective_consumer_grid_size_r[2]=28
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=28
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=28
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=12
# tm_r_factor[3]=14
# effective_consumer_grid_size_r[3]=28
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=28
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=28
# reblock_tm_fork_c_factor_int[3]=24
#Test id=1
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 8
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x3726cc60]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 8}, broadcast: {r: 6}, broadcast: {c: 24}]'
  input1_tms: '[broadcast: {z: 17}, broadcast: {r: 6}, broadcast: {c: 24}]'
  input2_tms: '[broadcast: {z: 26}, broadcast: {r: 6}, broadcast: {c: 24}]'
  input3_tms: '[broadcast: {z: 43}, broadcast: {r: 6}, broadcast: {c: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3abd67a0]]'
  output1_dram_buffers: '[[1, 0x3c705a00]]'
  output2_dram_buffers: '[[1, 0x3d71d1e0]]'
  output3_dram_buffers: '[[1, 0x3e751180]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 6
  output0_mb_c: 24
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 8
  op0_mb_r: 2
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 17
  output1_mb_r: 6
  output1_mb_c: 24
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 17
  op1_mb_r: 6
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 26
  output2_mb_r: 6
  output2_mb_c: 24
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 26
  op2_mb_r: 2
  op2_mb_c: 4
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 43
  output3_mb_r: 6
  output3_mb_c: 24
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 43
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=24
# tm_r_factor[0]=6
# effective_consumer_grid_size_r[0]=18
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=18
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=18
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=24
# tm_r_factor[1]=6
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=24
# tm_r_factor[2]=6
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=72
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=72
# reblock_tm_fork_r_factor_int[2]=6
# reblock_tm_fork_c_factor_int[2]=72
# tm_c_factor[3]=24
# tm_r_factor[3]=6
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=96
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=96
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=96
#Test id=2
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 7
  op0_loc_r: 5
  op1_loc_c: 8
  op1_loc_r: 6
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 9
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x388cabc0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 4
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 39}]'
  input1_tms: '[broadcast: {z: 34}]'
  input2_tms: '[broadcast: {z: 20}]'
  input3_tms: '[broadcast: {z: 62}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x389988c0]]'
  output1_dram_buffers: '[[1, 0x39eef860]]'
  output2_dram_buffers: '[[1, 0x3b5475e0]]'
  output3_dram_buffers: '[[1, 0x3bb1ef20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 39
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 34
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 34
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 20
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 62
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 62
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x30af5180]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 8
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 11}, broadcast: {r: 30}]'
  input1_tms: '[broadcast: {z: 11}, broadcast: {r: 30}]'
  input2_tms: '[broadcast: {z: 43}, broadcast: {r: 30}]'
  input3_tms: '[broadcast: {z: 7}, broadcast: {r: 30}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x320ac680]]'
  output1_dram_buffers: '[[2, 0x323a0ee0], [6, 0x323bf040], [4, 0x323dd1a0], [4, 0x323fb300], [2, 0x32419460], [5, 0x324375c0]]'
  output2_dram_buffers: '[[2, 0x32a23ae0], [6, 0x32b0ed80], [4, 0x32bfa020]]'
  output3_dram_buffers: '[[2, 0x3e42b640], [6, 0x3e4425e0], [4, 0x3e459580], [4, 0x3e470520], [2, 0x3e4874c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 11
  output0_mb_r: 6
  output0_mb_c: 1
  output0_ub_r: 5
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 11
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 11
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 11
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 43
  output2_mb_r: 2
  output2_mb_c: 1
  output2_ub_r: 5
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 43
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 5
  output3_t: 7
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 7
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=30
# effective_consumer_grid_size_r[0]=30
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=30
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=30
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=30
# effective_consumer_grid_size_r[1]=180
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=180
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=180
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=30
# effective_consumer_grid_size_r[2]=90
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=90
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=90
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=30
# effective_consumer_grid_size_r[3]=150
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=150
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=150
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x32bdcc20]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 8
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 28}, broadcast: {c: 80}]'
  input1_tms: '[broadcast: {z: 27}, broadcast: {c: 80}]'
  input2_tms: '[broadcast: {z: 48}, broadcast: {c: 80}]'
  input3_tms: '[broadcast: {z: 31}, broadcast: {c: 80}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x32c7f7c0]]'
  output1_dram_buffers: '[[3, 0x3401c5a0], [1, 0x34956dc0]]'
  output2_dram_buffers: '[[3, 0x359b6f20], [1, 0x361eaf40], [1, 0x36a1ef60], [5, 0x37252f80]]'
  output3_dram_buffers: '[[3, 0x3b5f0ba0], [1, 0x3c0893c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 1
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 5
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 28
  op0_mb_r: 1
  op0_mb_c: 16
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 27
  output1_mb_r: 1
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 27
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 4
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 1
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 5
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 48
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 31
  output3_mb_r: 1
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 31
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=80
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=80
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=80
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=80
# tm_c_factor[1]=80
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=160
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=160
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=160
# tm_c_factor[2]=80
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=320
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=320
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=320
# tm_c_factor[3]=80
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=160
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=160
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=160
#Test id=5
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 5
  op0_loc_r: 3
  op1_loc_c: 8
  op1_loc_r: 3
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x34914e00]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 9
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {r: 72}]'
  input1_tms: '[broadcast: {z: 15}, broadcast: {r: 72}]'
  input2_tms: '[broadcast: {z: 50}, broadcast: {r: 72}]'
  input3_tms: '[broadcast: {z: 6}, broadcast: {r: 72}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34983600]]'
  output1_dram_buffers: '[[4, 0x34c47d20]]'
  output2_dram_buffers: '[[4, 0x370b5ba0]]'
  output3_dram_buffers: '[[4, 0x3ebab740]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 72
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 15
  output1_mb_r: 72
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 15
  op1_mb_r: 9
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 50
  output2_mb_r: 72
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 50
  op2_mb_r: 9
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 72
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 6
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=72
# effective_consumer_grid_size_r[0]=432
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=432
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=432
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=72
# effective_consumer_grid_size_r[1]=72
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=72
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=72
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=72
# effective_consumer_grid_size_r[2]=144
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=144
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=144
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=72
# effective_consumer_grid_size_r[3]=216
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=216
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=216
# reblock_tm_fork_c_factor_int[3]=1
#Test id=6
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 5
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 6
  op2_loc_c: 8
  op2_loc_r: 8
  op3_loc_c: 9
  op3_loc_r: 8
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x31487420]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 46}, broadcast: {c: 18}]'
  input1_tms: '[broadcast: {z: 33}, broadcast: {c: 18}]'
  input2_tms: '[broadcast: {z: 9}, broadcast: {c: 18}]'
  input3_tms: '[broadcast: {z: 51}, broadcast: {c: 18}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x317c24c0]]'
  output1_dram_buffers: '[[0, 0x33631f20]]'
  output2_dram_buffers: '[[0, 0x375ca900]]'
  output3_dram_buffers: '[[0, 0x392aeca0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 46
  output0_mb_r: 1
  output0_mb_c: 18
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 46
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 33
  output1_mb_r: 1
  output1_mb_c: 18
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 33
  op1_mb_r: 1
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 1
  output2_mb_c: 18
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 9
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 51
  output3_mb_r: 1
  output3_mb_c: 18
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 51
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=7
# tm_c_factor[0]=18
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=36
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=36
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=36
# tm_c_factor[1]=18
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=18
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=18
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=18
# tm_c_factor[2]=18
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=18
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=18
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=18
# tm_c_factor[3]=18
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=54
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=54
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=54
#Test id=7
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 8
  op0_loc_r: 7
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[6, 0x39fea560]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 8
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 35}]'
  input1_tms: '[broadcast: {z: 41}]'
  input2_tms: '[broadcast: {z: 27}]'
  input3_tms: '[broadcast: {z: 59}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3a03d300]]'
  output1_dram_buffers: '[[6, 0x3a77fec0]]'
  output2_dram_buffers: '[[6, 0x3af297a0]]'
  output3_dram_buffers: '[[6, 0x3ee6f3c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 35
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 35
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 41
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 41
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 27
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 27
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 59
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 59
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=8
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 2
  op1_loc_r: 1
  op2_loc_c: 3
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x34799e80]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 8
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 39}, broadcast: {c: 84}]'
  input1_tms: '[broadcast: {z: 33}, broadcast: {c: 84}]'
  input2_tms: '[broadcast: {z: 47}, broadcast: {c: 84}]'
  input3_tms: '[broadcast: {z: 50}, broadcast: {c: 84}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3595b320]]'
  output1_dram_buffers: '[[0, 0x3a36f7a0]]'
  output2_dram_buffers: '[[0, 0x3b97a200]]'
  output3_dram_buffers: '[[0, 0x3d9340c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 1
  output0_mb_c: 84
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 39
  op0_mb_r: 1
  op0_mb_c: 14
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 33
  output1_mb_r: 1
  output1_mb_c: 84
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 33
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 47
  output2_mb_r: 1
  output2_mb_c: 84
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 7
  op2_grid_size_r: 1
  op2_t: 47
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 50
  output3_mb_r: 1
  output3_mb_c: 84
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 50
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=84
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=84
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=84
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=84
# tm_c_factor[1]=84
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=84
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=84
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=84
# tm_c_factor[2]=84
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=588
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=588
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=588
# tm_c_factor[3]=84
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=168
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=168
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=168
#Test id=9
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 6
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 5
  op2_loc_c: 8
  op2_loc_r: 9
  op3_loc_c: 9
  op3_loc_r: 8
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x3afa0520]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 8}, broadcast: {r: 42}]'
  input1_tms: '[broadcast: {z: 22}, broadcast: {r: 42}]'
  input2_tms: '[broadcast: {z: 23}, broadcast: {r: 42}]'
  input3_tms: '[broadcast: {z: 55}, broadcast: {r: 42}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3b17eea0]]'
  output1_dram_buffers: '[[6, 0x3b7ae840]]'
  output2_dram_buffers: '[[6, 0x3c7cc120]]'
  output3_dram_buffers: '[[6, 0x3d8692a0], [3, 0x3ec264c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 14
  output0_mb_c: 1
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 8
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 22
  output1_mb_r: 14
  output1_mb_c: 1
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 22
  op1_mb_r: 14
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 23
  output2_mb_r: 7
  output2_mb_c: 1
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 23
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 55
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 55
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=5
# tm_c_factor[0]=1
# tm_r_factor[0]=42
# effective_consumer_grid_size_r[0]=42
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=42
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=42
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=42
# effective_consumer_grid_size_r[1]=42
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=42
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=42
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=42
# effective_consumer_grid_size_r[2]=42
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=42
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=42
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=42
# effective_consumer_grid_size_r[3]=84
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=84
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=84
# reblock_tm_fork_c_factor_int[3]=1
#Test id=10
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 5
  op0_loc_r: 1
  op1_loc_c: 8
  op1_loc_r: 9
  op2_loc_c: 9
  op2_loc_r: 9
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x38560280]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 4
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 2}]'
  input1_tms: '[broadcast: {z: 35}]'
  input2_tms: '[broadcast: {z: 57}]'
  input3_tms: '[broadcast: {z: 5}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x38561b60]]'
  output1_dram_buffers: '[[6, 0x38564740]]'
  output2_dram_buffers: '[[6, 0x38590be0]]'
  output3_dram_buffers: '[[6, 0x38798200]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 35
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 35
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 57
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 57
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 5
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=11
- device: GRAYSKULL
  entries: 64
  op0_loc_c: 4
  op0_loc_r: 6
  op1_loc_c: 8
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x3002ba00]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {c: 60}]'
  input1_tms: '[broadcast: {z: 28}, broadcast: {c: 60}]'
  input2_tms: '[  broadcast: {c: 60}]'
  input3_tms: '[broadcast: {z: 3}, broadcast: {c: 60}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3008dac0]]'
  output1_dram_buffers: '[[0, 0x30b66c40]]'
  output2_dram_buffers: '[[0, 0x3e103420]]'
  output3_dram_buffers: '[[0, 0x3e8c6820]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 60
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 15
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 1
  output1_mb_c: 60
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 28
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 60
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 1
  output3_mb_c: 60
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 3
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 128
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=60
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=240
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=240
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=240
# tm_c_factor[1]=60
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=60
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=60
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=60
# tm_c_factor[2]=60
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=120
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=120
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=120
# tm_c_factor[3]=60
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=60
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=60
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=60
#Test id=12
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 3
  op0_loc_r: 6
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 9
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x30089040]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 9}, broadcast: {c: 150}]'
  input1_tms: '[broadcast: {z: 10}, broadcast: {c: 150}]'
  input2_tms: '[broadcast: {z: 14}, broadcast: {c: 150}]'
  input3_tms: '[  broadcast: {c: 150}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x300bf7a0]]'
  output1_dram_buffers: '[[2, 0x341612a0]]'
  output2_dram_buffers: '[[2, 0x388eb7e0]]'
  output3_dram_buffers: '[[2, 0x3ed7e840]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 1
  output0_mb_c: 150
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 9
  op0_mb_r: 1
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 1
  output1_mb_c: 150
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 10
  op1_mb_r: 1
  op1_mb_c: 15
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 14
  output2_mb_r: 1
  output2_mb_c: 150
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 14
  op2_mb_r: 1
  op2_mb_c: 15
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 150
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 15
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=150
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=450
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=450
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=450
# tm_c_factor[1]=150
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=300
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=300
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=300
# tm_c_factor[2]=150
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=300
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=300
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=300
# tm_c_factor[3]=150
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=300
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=300
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=300
#Test id=13
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 6
  op2_loc_c: 9
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x3091d620]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 8
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 2}, broadcast: {r: 6}, broadcast: {c: 18}]'
  input1_tms: '[broadcast: {z: 10}, broadcast: {r: 6}, broadcast: {c: 18}]'
  input2_tms: '[  broadcast: {r: 6}, broadcast: {c: 18}]'
  input3_tms: '[broadcast: {z: 21}, broadcast: {r: 6}, broadcast: {c: 18}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x30eba120]]'
  output1_dram_buffers: '[[0, 0x31e79380]]'
  output2_dram_buffers: '[[0, 0x3654b820]]'
  output3_dram_buffers: '[[0, 0x36e65b00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 6
  output0_mb_c: 18
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 3
  op0_mb_c: 3
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 6
  output1_mb_c: 18
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 10
  op1_mb_r: 6
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 6
  output2_mb_c: 18
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 3
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 21
  output3_mb_r: 6
  output3_mb_c: 18
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 21
  op3_mb_r: 6
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=18
# tm_r_factor[0]=6
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=36
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=36
# reblock_tm_fork_r_factor_int[0]=6
# reblock_tm_fork_c_factor_int[0]=36
# tm_c_factor[1]=18
# tm_r_factor[1]=6
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=54
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=54
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=54
# tm_c_factor[2]=18
# tm_r_factor[2]=6
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=36
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=36
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=36
# tm_c_factor[3]=18
# tm_r_factor[3]=6
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=18
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=18
# reblock_tm_fork_r_factor_int[3]=6
# reblock_tm_fork_c_factor_int[3]=18
#Test id=14
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 4
  op0_loc_r: 3
  op1_loc_c: 7
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x34b378c0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 2}, broadcast: {r: 5}, broadcast: {c: 24}]'
  input1_tms: '[broadcast: {z: 20}, broadcast: {r: 5}, broadcast: {c: 24}]'
  input2_tms: '[broadcast: {z: 9}, broadcast: {r: 5}, broadcast: {c: 24}]'
  input3_tms: '[broadcast: {z: 20}, broadcast: {r: 5}, broadcast: {c: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x351afa80]]'
  output1_dram_buffers: '[[5, 0x3579f880]]'
  output2_dram_buffers: '[[5, 0x39864340]]'
  output3_dram_buffers: '[[5, 0x3b2450c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 5
  output0_mb_c: 24
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 5
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 5
  output1_mb_c: 24
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 20
  op1_mb_r: 5
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 5
  output2_mb_c: 24
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 5
  op2_t: 9
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 5
  output3_mb_c: 24
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 20
  op3_mb_r: 5
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=24
# tm_r_factor[0]=5
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=72
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=72
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=72
# tm_c_factor[1]=24
# tm_r_factor[1]=5
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=48
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=48
# reblock_tm_fork_r_factor_int[1]=5
# reblock_tm_fork_c_factor_int[1]=48
# tm_c_factor[2]=24
# tm_r_factor[2]=5
# effective_consumer_grid_size_r[2]=25
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=25
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=25
# reblock_tm_fork_c_factor_int[2]=48
# tm_c_factor[3]=24
# tm_r_factor[3]=5
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=5
# reblock_tm_fork_c_factor_int[3]=24
#Test id=15
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 4
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[7, 0x3516d600]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 15}, broadcast: {r: 20}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 60}, broadcast: {r: 20}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 41}, broadcast: {r: 20}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 9}, broadcast: {r: 20}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x36b0a600], [3, 0x36cf6920], [4, 0x36ee2c40], [3, 0x370cef60]]'
  output1_dram_buffers: '[[7, 0x372d56c0], [3, 0x377f5ee0], [4, 0x37d16700], [3, 0x38236f20], [2, 0x38757740], [6, 0x38c77f60]]'
  output2_dram_buffers: '[[7, 0x3e27d6c0], [3, 0x3e7bebe0], [4, 0x3ed00100], [3, 0x3f241620]]'
  output3_dram_buffers: '[[7, 0x3fa0d060]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 15
  output0_mb_r: 1
  output0_mb_c: 6
  output0_ub_r: 5
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 15
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 3
  output1_grid_size_r: 2
  output1_t: 60
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 3
  op1_grid_size_r: 2
  op1_t: 60
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 41
  output2_mb_r: 5
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 3
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 41
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 10
  output3_mb_c: 2
  output3_ub_r: 2
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 9
  op3_mb_r: 10
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=6
# tm_r_factor[0]=20
# effective_consumer_grid_size_r[0]=80
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=80
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=80
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=6
# tm_r_factor[1]=20
# effective_consumer_grid_size_r[1]=40
# effective_consumer_grid_size_c[1]=18
# effective_consumer_grid_size_r_reblock[1]=40
# effective_consumer_grid_size_c_reblock[1]=18
# reblock_tm_fork_r_factor_int[1]=40
# reblock_tm_fork_c_factor_int[1]=18
# tm_c_factor[2]=6
# tm_r_factor[2]=20
# effective_consumer_grid_size_r[2]=40
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=40
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=40
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=6
# tm_r_factor[3]=20
# effective_consumer_grid_size_r[3]=20
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=20
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=20
# reblock_tm_fork_c_factor_int[3]=6
#Test id=16
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 7
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 8
  op3_loc_r: 8
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x30332d00]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 13}, broadcast: {r: 16}, broadcast: {c: 24}]'
  input1_tms: '[broadcast: {z: 29}, broadcast: {r: 16}, broadcast: {c: 24}]'
  input2_tms: '[broadcast: {z: 58}, broadcast: {r: 16}, broadcast: {c: 24}]'
  input3_tms: '[broadcast: {z: 54}, broadcast: {r: 16}, broadcast: {c: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3033b820], [3, 0x30890840], [7, 0x30de5860], [7, 0x3133a880]]'
  output1_dram_buffers: '[[1, 0x3189ba40], [3, 0x33065a60]]'
  output2_dram_buffers: '[[1, 0x34838000], [3, 0x377cc020]]'
  output3_dram_buffers: '[[1, 0x3a760720], [3, 0x3b273740], [7, 0x3bd86760], [7, 0x3c899780], [7, 0x3d3ac7a0], [3, 0x3debf7c0], [7, 0x3e9d27e0], [0, 0x3f4e5800]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 13
  output0_mb_r: 2
  output0_mb_c: 6
  output0_ub_r: 4
  output0_ub_c: 2
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 13
  op0_mb_r: 2
  op0_mb_c: 6
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 29
  output1_mb_r: 8
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 29
  op1_mb_r: 8
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 58
  output2_mb_r: 8
  output2_mb_c: 6
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 58
  op2_mb_r: 8
  op2_mb_c: 6
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 4
  output3_grid_size_r: 2
  output3_t: 54
  output3_mb_r: 8
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 54
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=24
# tm_r_factor[0]=16
# effective_consumer_grid_size_r[0]=32
# effective_consumer_grid_size_c[0]=48
# effective_consumer_grid_size_r_reblock[0]=32
# effective_consumer_grid_size_c_reblock[0]=48
# reblock_tm_fork_r_factor_int[0]=32
# reblock_tm_fork_c_factor_int[0]=48
# tm_c_factor[1]=24
# tm_r_factor[1]=16
# effective_consumer_grid_size_r[1]=32
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=32
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=32
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=24
# tm_r_factor[2]=16
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=16
# reblock_tm_fork_c_factor_int[2]=48
# tm_c_factor[3]=24
# tm_r_factor[3]=16
# effective_consumer_grid_size_r[3]=32
# effective_consumer_grid_size_c[3]=96
# effective_consumer_grid_size_r_reblock[3]=32
# effective_consumer_grid_size_c_reblock[3]=96
# reblock_tm_fork_r_factor_int[3]=32
# reblock_tm_fork_c_factor_int[3]=96
#Test id=17
- device: GRAYSKULL
  entries: 6
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 8
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x351f4940]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 17}, broadcast: {c: 15}]'
  input1_tms: '[broadcast: {z: 61}, broadcast: {c: 15}]'
  input2_tms: '[broadcast: {z: 21}, broadcast: {c: 15}]'
  input3_tms: '[broadcast: {z: 41}, broadcast: {c: 15}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3961ce40]]'
  output1_dram_buffers: '[[4, 0x39974ea0]]'
  output2_dram_buffers: '[[4, 0x3cc4e9e0]]'
  output3_dram_buffers: '[[4, 0x3d48cd80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 1
  output0_mb_c: 15
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 17
  op0_mb_r: 1
  op0_mb_c: 15
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 61
  output1_mb_r: 1
  output1_mb_c: 15
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 61
  op1_mb_r: 1
  op1_mb_c: 15
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 21
  output2_mb_r: 1
  output2_mb_c: 15
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 21
  op2_mb_r: 1
  op2_mb_c: 15
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 41
  output3_mb_r: 1
  output3_mb_c: 15
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 41
  op3_mb_r: 1
  op3_mb_c: 15
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 12
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=15
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=15
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=15
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=15
# tm_c_factor[1]=15
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=15
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=15
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=15
# tm_c_factor[2]=15
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=15
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=15
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=15
# tm_c_factor[3]=15
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=15
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=15
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=15
#Test id=18
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 5
  op0_loc_r: 6
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 9
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x3d419780]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 4
  feeder_loc_r: 8
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 41}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 5}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 26}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 21}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3d9b89e0]]'
  output1_dram_buffers: '[[2, 0x3de97de0]]'
  output2_dram_buffers: '[[2, 0x3e9de460]]'
  output3_dram_buffers: '[[2, 0x3f1f1f00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 41
  output0_mb_r: 1
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 41
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 5
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 5
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 26
  output2_mb_r: 1
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 26
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 21
  output3_mb_r: 1
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 21
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=12
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=12
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=12
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=12
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=12
#Test id=19
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 9
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[7, 0x3c455880]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 17}]'
  input1_tms: '[broadcast: {z: 22}]'
  input2_tms: '[broadcast: {z: 37}]'
  input3_tms: '[broadcast: {z: 59}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3fccf840]]'
  output1_dram_buffers: '[[7, 0x3fee2380]]'
  output2_dram_buffers: '[[7, 0x3ff52960]]'
  output3_dram_buffers: '[[7, 0x3ff9cb00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 17
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 22
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 22
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 37
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 37
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 59
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 59
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
