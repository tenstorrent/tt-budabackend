#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 2
  input_mb_c: 7
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x3683bfc0], [6, 0x36cad7e0], [3, 0x3711f000], [7, 0x37590820], [6, 0x37a02040], [7, 0x37e73860]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x383f6840]]'
  output1_dram_buffers: '[[4, 0x3afaf560]]'
  output2_dram_buffers: '[[4, 0x3ca8a5c0]]'
  output3_dram_buffers: '[[4, 0x3e54ba00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 6
  output0_mb_c: 35
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 6
  output1_mb_c: 35
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 6
  output2_mb_c: 35
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 5
  op2_grid_size_r: 3
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 6
  output3_mb_c: 35
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=5
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=5
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=5
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 7
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x33e7a020], [0, 0x33e8b840], [3, 0x33e9d060], [6, 0x33eae880], [3, 0x33ec00a0], [1, 0x33ed18c0], [2, 0x33ee30e0], [2, 0x33ef4900], [2, 0x33f06120], [1, 0x33f17940]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 10]'
  input1_tms: '[vslice: 10]'
  input2_tms: '[vslice: 10]'
  input3_tms: '[vslice: 10]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3ae0f2e0]]'
  output1_dram_buffers: '[[4, 0x3c08d380]]'
  output2_dram_buffers: '[[4, 0x3ebe26e0], [0, 0x3ec39f00]]'
  output3_dram_buffers: '[[4, 0x3f302b00], [0, 0x3f35a320]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 1
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 10
  op0_mb_r: 1
  op0_mb_c: 16
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 1
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 10
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 1
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 10
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 10
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 10
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=10
# effective_consumer_grid_size_r[0]=10
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=10
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=10
# effective_consumer_grid_size_r[1]=10
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=10
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=10
# effective_consumer_grid_size_r[2]=10
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=10
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=10
# effective_consumer_grid_size_r[3]=10
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=10
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: GRAYSKULL
  entries: 20
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 6
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 10
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x30028260], [3, 0x30354a80], [2, 0x306812a0], [1, 0x309adac0], [2, 0x30cda2e0], [4, 0x31006b00], [4, 0x31333320], [6, 0x3165fb40], [6, 0x3198c360], [1, 0x31cb8b80], [0, 0x31fe53a0], [3, 0x32311bc0], [2, 0x3263e3e0], [4, 0x3296ac00]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 40]'
  input1_tms: '[vslice: 40]'
  input2_tms: '[vslice: 40]'
  input3_tms: '[vslice: 40]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x32c9aac0]]'
  output1_dram_buffers: '[[1, 0x373db780]]'
  output2_dram_buffers: '[[1, 0x3a56f660]]'
  output3_dram_buffers: '[[1, 0x3d29f8e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 40
  output0_mb_r: 7
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 40
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 40
  output1_mb_r: 7
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 40
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 40
  output2_mb_r: 7
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 40
  op2_mb_r: 7
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 40
  output3_mb_r: 7
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 40
  op3_mb_r: 7
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=40
# effective_consumer_grid_size_r[0]=40
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=40
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=7
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=40
# effective_consumer_grid_size_r[1]=40
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=40
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=7
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=40
# effective_consumer_grid_size_r[2]=40
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=40
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=7
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=40
# effective_consumer_grid_size_r[3]=40
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=40
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=7
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 6
  op0_loc_r: 6
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 6
  input_mb_r: 8
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x3588be60]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x39244480]]'
  output1_dram_buffers: '[[6, 0x3b7abac0]]'
  output2_dram_buffers: '[[6, 0x3cf96500]]'
  output3_dram_buffers: '[[6, 0x3e2d2080]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 12
  output0_mb_r: 20
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 12
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 12
  output1_mb_r: 20
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 12
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 12
  output2_mb_r: 20
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 12
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 12
  output3_mb_r: 20
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 12
  op3_mb_r: 10
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=10
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=10
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=10
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 7
  op2_loc_c: 9
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 11
  input_mb_r: 6
  input_mb_c: 4
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x39026ce0], [6, 0x39563700]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 3]'
  input1_tms: '[vslice: 3]'
  input2_tms: '[vslice: 3]'
  input3_tms: '[vslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x39d9a940]]'
  output1_dram_buffers: '[[4, 0x3d18ae80]]'
  output2_dram_buffers: '[[4, 0x3e2cc7a0]]'
  output3_dram_buffers: '[[4, 0x3f4e2820]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 33
  output0_mb_r: 20
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 33
  op0_mb_r: 4
  op0_mb_c: 2
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 33
  output1_mb_r: 20
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 1
  op1_t: 33
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 33
  output2_mb_r: 20
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 33
  op2_mb_r: 5
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 33
  output3_mb_r: 20
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 33
  op3_mb_r: 5
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=6
# reblock_tm_fork_c_factor_int[3]=1
#Test id=5
#- device: GRAYSKULL
#  entries: 2
#  op0_loc_c: 6
#  op0_loc_r: 3
#  op1_loc_c: 7
#  op1_loc_r: 0
#  op2_loc_c: 8
#  op2_loc_r: 4
#  op3_loc_c: 10
#  op3_loc_r: 4
#  input_t: 1
#  input_mb_r: 1
#  input_mb_c: 1
#  input_ub_r: 5
#  input_ub_c: 1
#  input_data_format: 'Bfp8_b'
#  out_data_format: 'Bfp8_b'
#  input_dram_buffers: '[[2, 0x304a9e00], [7, 0x304ac9e0], [2, 0x304af5c0], [4, 0x304b21a0], [1, 0x304b4d80], [3, 0x304b7960], [4, 0x304ba540], [1, 0x304bd120], [2, 0x304bfd00], [4, 0x304c28e0], [1, 0x304c54c0], [1, 0x304c80a0], [7, 0x304cac80], [3, 0x304cd860], [3, 0x304d0440], [5, 0x304d3020], [7, 0x304d5c00], [1, 0x304d87e0], [3, 0x304db3c0], [5, 0x304ddfa0], [0, 0x304e0b80], [0, 0x304e3760], [0, 0x304e6340], [1, 0x304e8f20], [3, 0x304ebb00], [7, 0x304ee6e0], [6, 0x304f12c0], [1, 0x304f3ea0], [5, 0x304f6a80], [1, 0x304f9660], [4, 0x304fc240], [3, 0x304fee20], [7, 0x30501a00], [2, 0x305045e0], [7, 0x305071c0], [5, 0x30509da0], [3, 0x3050c980], [4, 0x3050f560], [1, 0x30512140], [4, 0x30514d20], [5, 0x30517900], [4, 0x3051a4e0], [6, 0x3051d0c0], [2, 0x3051fca0], [5, 0x30522880], [0, 0x30525460], [2, 0x30528040], [5, 0x3052ac20]]'
#  target_device: 0
#  input_count: 1
#  unary_type: datacopy
#  input_grid_size_c: 6
#  input_grid_size_r: 8
#  feeder_loc_c: 0
#  feeder_loc_r: 0
#  math_fidelity: HiFi2
#  untilize_output0: 'false'
#  untilize_output1: 'false'
#  untilize_output2: 'false'
#  untilize_output3: 'false'
#  input0_tms: '[vslice: 20]'
#  input1_tms: '[vslice: 20]'
#  input2_tms: '[vslice: 20]'
#  input3_tms: '[vslice: 20]'
#  ublock_order: r
#  buf_size_mb: 2
#  # Scale output queue grid and mblock size if output is untilized
#  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
#  output0_dram_buffers: '[[2, 0x31709ce0], [7, 0x3174b700]]'
#  output1_dram_buffers: '[[2, 0x34a30300], [7, 0x34a71d20]]'
#  output2_dram_buffers: '[[2, 0x36a681c0], [7, 0x36aa9be0]]'
#  output3_dram_buffers: '[[2, 0x37326600], [7, 0x37368020]]'
#  output0_grid_size_c: 1
#  output0_grid_size_r: 2
#  output0_t: 20
#  output0_mb_r: 1
#  output0_mb_c: 1
#  output0_ub_r: 1
#  output0_ub_c: 6
#  op0_grid_size_c: 1
#  op0_grid_size_r: 2
#  op0_t: 20
#  op0_mb_r: 1
#  op0_mb_c: 1
#  op0_ub_r: 1
#  op0_ub_c: 6
#  output1_grid_size_c: 1
#  output1_grid_size_r: 2
#  output1_t: 20
#  output1_mb_r: 1
#  output1_mb_c: 6
#  output1_ub_r: 1
#  output1_ub_c: 1
#  op1_grid_size_c: 1
#  op1_grid_size_r: 2
#  op1_t: 20
#  op1_mb_r: 1
#  op1_mb_c: 6
#  op1_ub_r: 1
#  op1_ub_c: 1
#  output2_grid_size_c: 2
#  output2_grid_size_r: 1
#  output2_t: 20
#  output2_mb_r: 2
#  output2_mb_c: 1
#  output2_ub_r: 1
#  output2_ub_c: 3
#  op2_grid_size_c: 2
#  op2_grid_size_r: 1
#  op2_t: 20
#  op2_mb_r: 2
#  op2_mb_c: 1
#  op2_ub_r: 1
#  op2_ub_c: 3
#  output3_grid_size_c: 2
#  output3_grid_size_r: 1
#  output3_t: 20
#  output3_mb_r: 2
#  output3_mb_c: 1
#  output3_ub_r: 1
#  output3_ub_c: 3
#  op3_grid_size_c: 2
#  op3_grid_size_r: 1
#  op3_t: 20
#  op3_mb_r: 2
#  op3_mb_c: 1
#  op3_ub_r: 1
#  op3_ub_c: 3
#  # Program vars
#  loop_count: 1
#  queue_wrap_size: 4
#  # Test and stimulus config
#  comparison_config_type: 'AllCloseHw'
#  comparison_config_atol: 0.01
#  comparison_config_rtol: 0.30
#  comparison_config_check_pct: 0.85
#  comparison_config_check_pcc: 0.99
#  comparison_config_verbosity: 'Concise'
#  stimulus_config_type: 'Uniform'
#  stimulus_config_uniform_lower_bound: '-1.0'
#  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=20
# effective_consumer_grid_size_r[0]=40
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=40
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=20
# effective_consumer_grid_size_r[1]=40
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=40
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=5
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=20
# effective_consumer_grid_size_r[2]=20
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=20
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=20
# effective_consumer_grid_size_r[3]=20
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=20
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=6
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 7
  op2_loc_c: 7
  op2_loc_r: 4
  op3_loc_c: 9
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 3
  input_mb_c: 3
  input_ub_r: 4
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x3e13e620], [0, 0x3e1dbe40], [1, 0x3e279660], [6, 0x3e316e80]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3e8526a0], [0, 0x3e8bb6c0], [1, 0x3e9246e0], [6, 0x3e98d700], [6, 0x3e9f6720], [4, 0x3ea5f740]]'
  output1_dram_buffers: '[[5, 0x3f15edc0], [0, 0x3f230de0], [1, 0x3f302e00]]'
  output2_dram_buffers: '[[5, 0x3f684d60], [0, 0x3f722580], [1, 0x3f7bfda0], [6, 0x3f85d5c0]]'
  output3_dram_buffers: '[[5, 0x3fd3b2e0], [0, 0x3fda4300], [1, 0x3fe0d320], [6, 0x3fe76340], [6, 0x3fedf360], [4, 0x3ff48380]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 4
  output0_mb_c: 1
  output0_ub_r: 3
  output0_ub_c: 2
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 4
  output1_mb_c: 2
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 4
  op1_mb_c: 2
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 6
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=7
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 4
  input_mb_c: 3
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x39729900], [0, 0x397c7120], [6, 0x39864940], [7, 0x39902160], [5, 0x3999f980], [4, 0x39a3d1a0], [7, 0x39ada9c0], [1, 0x39b781e0], [6, 0x39c15a00], [5, 0x39cb3220]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 15]'
  input1_tms: '[vslice: 15]'
  input2_tms: '[vslice: 15]'
  input3_tms: '[vslice: 15]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3df16180], [0, 0x3e2299a0]]'
  output1_dram_buffers: '[[6, 0x3e9eb340], [0, 0x3ecfeb60]]'
  output2_dram_buffers: '[[6, 0x3f1f5840], [0, 0x3f509060]]'
  output3_dram_buffers: '[[6, 0x3f86d420], [0, 0x3f973c40], [6, 0x3fa7a460], [7, 0x3fb80c80], [5, 0x3fc874a0], [4, 0x3fd8dcc0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 15
  output0_mb_r: 4
  output0_mb_c: 3
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 15
  op0_mb_r: 4
  op0_mb_c: 3
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 15
  output1_mb_r: 1
  output1_mb_c: 3
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 15
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 15
  output2_mb_r: 2
  output2_mb_c: 3
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 15
  op2_mb_r: 2
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 6
  output3_grid_size_r: 1
  output3_t: 15
  output3_mb_r: 8
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 6
  op3_grid_size_r: 1
  op3_t: 15
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=15
# effective_consumer_grid_size_r[0]=15
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=15
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=15
# effective_consumer_grid_size_r[1]=30
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=30
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=15
# effective_consumer_grid_size_r[2]=30
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=30
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=6
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=15
# effective_consumer_grid_size_r[3]=15
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=15
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=3
#Test id=8
- device: GRAYSKULL
  entries: 20
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 15
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x31090360], [6, 0x31422480], [3, 0x317b45a0], [6, 0x31b466c0], [7, 0x31ed87e0], [2, 0x3226a900], [7, 0x325fca20], [6, 0x3298eb40]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3486a160]]'
  output1_dram_buffers: '[[7, 0x38d95fa0]]'
  output2_dram_buffers: '[[7, 0x3c245ca0]]'
  output3_dram_buffers: '[[7, 0x3e27c620]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 360
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 360
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 2
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 360
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 2
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 360
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=9
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 4
  input_mb_c: 3
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x325483c0], [0, 0x325a41e0], [6, 0x32600000], [6, 0x3265be20], [6, 0x326b7c40], [1, 0x32713a60]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 2
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 7]'
  input1_tms: '[vslice: 7]'
  input2_tms: '[vslice: 7]'
  input3_tms: '[vslice: 7]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3b9f35a0], [0, 0x3ba4f3c0], [6, 0x3baab1e0], [6, 0x3bb07000], [6, 0x3bb62e20], [1, 0x3bbbec40]]'
  output1_dram_buffers: '[[0, 0x3c600bc0], [0, 0x3c7145e0]]'
  output2_dram_buffers: '[[0, 0x3f720620], [0, 0x3f834040]]'
  output3_dram_buffers: '[[0, 0x3fcc53e0], [0, 0x3fdd8e00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 7
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 7
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 7
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 7
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 12
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 7
  op2_mb_r: 12
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 7
  output3_mb_r: 3
  output3_mb_c: 3
  output3_ub_r: 2
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 7
  op3_mb_r: 3
  op3_mb_c: 3
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=7
# effective_consumer_grid_size_r[0]=42
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=42
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=14
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=7
# effective_consumer_grid_size_r[1]=14
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=14
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=7
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=7
# effective_consumer_grid_size_r[3]=14
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=14
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=6
# reblock_tm_fork_c_factor_int[3]=1
#Test id=10
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 5
  op0_loc_r: 3
  op1_loc_c: 7
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 5
  input_mb_c: 2
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x3506fc60], [2, 0x35532880], [7, 0x359f54a0], [4, 0x35eb80c0], [6, 0x3637ace0], [4, 0x3683d900]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 3
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 50]'
  input1_tms: '[vslice: 50]'
  input2_tms: '[vslice: 50]'
  input3_tms: '[vslice: 50]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x37fbaa80]]'
  output1_dram_buffers: '[[1, 0x3a78fe80]]'
  output2_dram_buffers: '[[1, 0x3c60a800]]'
  output3_dram_buffers: '[[1, 0x3e2a8000]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 50
  output0_mb_r: 3
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 50
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 50
  output1_mb_r: 3
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 50
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 50
  output2_mb_r: 3
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 50
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 50
  output3_mb_r: 3
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 50
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=50
# effective_consumer_grid_size_r[0]=50
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=50
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=10
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=50
# effective_consumer_grid_size_r[1]=150
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=150
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=25
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=50
# effective_consumer_grid_size_r[2]=50
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=50
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=10
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=50
# effective_consumer_grid_size_r[3]=50
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=50
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=10
# reblock_tm_fork_c_factor_int[3]=1
#Test id=11
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 12
  input_mb_r: 1
  input_mb_c: 8
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x362d61c0], [5, 0x366a51e0], [2, 0x36a74200], [4, 0x36e43220], [6, 0x37212240], [0, 0x375e1260], [0, 0x379b0280], [2, 0x37d7f2a0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3830b7c0]]'
  output1_dram_buffers: '[[1, 0x3a26c920]]'
  output2_dram_buffers: '[[1, 0x3c2ee900]]'
  output3_dram_buffers: '[[1, 0x3e17b8c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 4
  output0_mb_c: 40
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 4
  op0_t: 24
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 4
  output1_mb_c: 40
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 24
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 24
  output2_mb_r: 4
  output2_mb_c: 40
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 5
  op2_grid_size_r: 2
  op2_t: 24
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 4
  output3_mb_c: 40
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 24
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=5
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=5
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=5
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=12
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 5
  input_mb_r: 9
  input_mb_c: 2
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x34923940], [5, 0x34d6c760], [4, 0x351b5580], [7, 0x355fe3a0], [6, 0x35a471c0], [6, 0x35e8ffe0], [7, 0x362d8e00], [7, 0x36721c20]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 9]'
  input1_tms: '[vslice: 9]'
  input2_tms: '[vslice: 9]'
  input3_tms: '[vslice: 9]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x36b86020]]'
  output1_dram_buffers: '[[1, 0x397276e0]]'
  output2_dram_buffers: '[[1, 0x3ba10f60]]'
  output3_dram_buffers: '[[1, 0x3dd7e2a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 45
  output0_mb_r: 48
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 45
  op0_mb_r: 8
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 45
  output1_mb_r: 48
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 45
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 45
  output2_mb_r: 48
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 45
  op2_mb_r: 16
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 45
  output3_mb_r: 48
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 45
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=9
# effective_consumer_grid_size_r[0]=27
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=27
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=9
# effective_consumer_grid_size_r[1]=27
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=27
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=5
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=9
# effective_consumer_grid_size_r[2]=27
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=27
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=5
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=9
# effective_consumer_grid_size_r[3]=27
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=27
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=5
# reblock_tm_fork_c_factor_int[3]=1
#Test id=13
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 17
  input_mb_r: 16
  input_mb_c: 1
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x317cb640], [7, 0x326e6e60], [2, 0x33602680]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 3]'
  input1_tms: '[vslice: 3]'
  input2_tms: '[vslice: 3]'
  input3_tms: '[vslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x346a9da0]]'
  output1_dram_buffers: '[[0, 0x3761d5a0]]'
  output2_dram_buffers: '[[0, 0x3a50d1e0]]'
  output3_dram_buffers: '[[0, 0x3d262700]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 51
  output0_mb_r: 112
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 51
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 51
  output1_mb_r: 112
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 51
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 51
  output2_mb_r: 112
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 51
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 51
  output3_mb_r: 112
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 51
  op3_mb_r: 14
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 6
  op0_loc_r: 7
  op1_loc_c: 9
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 10
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x31a51d40], [6, 0x31e9ab60], [5, 0x322e3980], [0, 0x3272c7a0], [1, 0x32b755c0], [7, 0x32fbe3e0], [7, 0x33407200], [2, 0x33850020], [6, 0x33c98e40]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 3
  feeder_loc_c: 3
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 9]'
  input1_tms: '[vslice: 9]'
  input2_tms: '[vslice: 9]'
  input3_tms: '[vslice: 9]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x35d6c2a0]]'
  output1_dram_buffers: '[[2, 0x38462820]]'
  output2_dram_buffers: '[[2, 0x3ac766a0]]'
  output3_dram_buffers: '[[2, 0x3d461c80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 3
  output0_mb_c: 30
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 9
  op0_mb_r: 1
  op0_mb_c: 10
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 3
  output1_mb_c: 30
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 9
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 3
  output2_mb_c: 30
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 9
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 3
  output3_mb_c: 30
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 9
  op3_mb_r: 1
  op3_mb_c: 15
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=9
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=9
# effective_consumer_grid_size_r[1]=27
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=27
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=9
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=9
# effective_consumer_grid_size_r[2]=27
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=27
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=9
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=9
# effective_consumer_grid_size_r[3]=27
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=27
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=9
# reblock_tm_fork_c_factor_int[3]=1
#Test id=15
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 3
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x30b8bc00], [2, 0x30bc8b20], [1, 0x30c05a40], [4, 0x30c42960], [3, 0x30c7f880], [2, 0x30cbc7a0], [4, 0x30cf96c0], [1, 0x30d365e0], [3, 0x30d73500], [3, 0x30db0420], [1, 0x30ded340], [5, 0x30e2a260], [5, 0x30e67180], [3, 0x30ea40a0], [0, 0x30ee0fc0], [7, 0x30f1dee0], [5, 0x30f5ae00], [5, 0x30f97d20], [7, 0x30fd4c40], [3, 0x31011b60], [4, 0x3104ea80], [2, 0x3108b9a0], [3, 0x310c88c0], [0, 0x311057e0], [5, 0x31142700], [2, 0x3117f620], [2, 0x311bc540], [4, 0x311f9460], [3, 0x31236380], [3, 0x312732a0], [7, 0x312b01c0], [0, 0x312ed0e0], [3, 0x3132a000], [3, 0x31366f20], [5, 0x313a3e40], [0, 0x313e0d60], [7, 0x3141dc80], [7, 0x3145aba0], [5, 0x31497ac0], [6, 0x314d49e0], [3, 0x31511900], [2, 0x3154e820], [4, 0x3158b740], [3, 0x315c8660], [7, 0x31605580], [4, 0x316424a0], [3, 0x3167f3c0], [1, 0x316bc2e0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3b9c8720]]'
  output1_dram_buffers: '[[3, 0x3d0d3280]]'
  output2_dram_buffers: '[[3, 0x3dd0d500]]'
  output3_dram_buffers: '[[3, 0x3e922ba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 3
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 6
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 3
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 6
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 6
  output2_mb_r: 3
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 6
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 3
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 6
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=16
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 0
  op3_loc_c: 5
  op3_loc_r: 5
  input_t: 2
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x34447880], [0, 0x344c20a0], [5, 0x3453c8c0], [7, 0x345b70e0], [5, 0x34631900], [6, 0x346ac120], [5, 0x34726940], [6, 0x347a1160]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3490ffc0], [0, 0x34af9fe0]]'
  output1_dram_buffers: '[[4, 0x3d3a7040], [0, 0x3d421860], [5, 0x3d49c080], [7, 0x3d5168a0], [5, 0x3d5910c0], [6, 0x3d60b8e0], [5, 0x3d686100], [6, 0x3d700920]]'
  output2_dram_buffers: '[[4, 0x3de7c2a0], [0, 0x3def6ac0], [5, 0x3df712e0], [7, 0x3dfebb00], [5, 0x3e066320], [6, 0x3e0e0b40], [5, 0x3e15b360], [6, 0x3e1d5b80]]'
  output3_dram_buffers: '[[4, 0x3ea303e0], [0, 0x3eabc400], [5, 0x3eb48420], [7, 0x3ebd4440], [5, 0x3ec60460], [6, 0x3ecec480], [5, 0x3ed784a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 4
  output0_mb_r: 1
  output0_mb_c: 7
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 4
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 4
  output1_mb_r: 1
  output1_mb_c: 7
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 4
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 8
  output2_t: 4
  output2_mb_r: 2
  output2_mb_c: 7
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 4
  op2_mb_r: 2
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 7
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 16
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 7
  op3_grid_size_r: 1
  op3_t: 4
  op3_mb_r: 16
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=7
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=7
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=7
#Test id=17
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 13
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x301a4ca0], [2, 0x309e54c0], [3, 0x31225ce0], [1, 0x31a66500], [1, 0x322a6d20], [7, 0x32ae7540]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 39]'
  input1_tms: '[vslice: 39]'
  input2_tms: '[vslice: 39]'
  input3_tms: '[vslice: 39]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x337067c0]]'
  output1_dram_buffers: '[[3, 0x36a5bd40]]'
  output2_dram_buffers: '[[3, 0x39be9300]]'
  output3_dram_buffers: '[[3, 0x3ce621c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 8
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 39
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 39
  output1_mb_r: 8
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 39
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 39
  output2_mb_r: 8
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 39
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 39
  output3_mb_r: 8
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 39
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=39
# effective_consumer_grid_size_r[0]=39
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=39
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=8
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=39
# effective_consumer_grid_size_r[1]=39
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=39
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=8
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=39
# effective_consumer_grid_size_r[2]=78
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=78
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=13
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=39
# effective_consumer_grid_size_r[3]=39
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=39
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=8
# reblock_tm_fork_c_factor_int[3]=2
#Test id=18
- device: GRAYSKULL
  entries: 10
  op0_loc_c: 6
  op0_loc_r: 5
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 13
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x340e17a0], [5, 0x342f19c0], [0, 0x34501be0], [5, 0x34711e00], [5, 0x34922020], [1, 0x34b32240], [3, 0x34d42460], [0, 0x34f52680], [3, 0x351628a0], [7, 0x35372ac0], [6, 0x35582ce0], [7, 0x35792f00]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 52]'
  input1_tms: '[vslice: 52]'
  input2_tms: '[vslice: 52]'
  input3_tms: '[vslice: 52]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x381ba4a0]]'
  output1_dram_buffers: '[[2, 0x3a25d820]]'
  output2_dram_buffers: '[[2, 0x3bebef80]]'
  output3_dram_buffers: '[[2, 0x3dc6d220]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 52
  output0_mb_r: 4
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 52
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 4
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 52
  op1_mb_r: 2
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 52
  output2_mb_r: 4
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 52
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 52
  output3_mb_r: 4
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 52
  op3_mb_r: 2
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 20
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=52
# effective_consumer_grid_size_r[0]=104
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=104
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=52
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=52
# effective_consumer_grid_size_r[1]=104
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=104
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=52
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=52
# effective_consumer_grid_size_r[2]=208
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=208
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=104
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=52
# effective_consumer_grid_size_r[3]=104
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=104
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=52
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: GRAYSKULL
  entries: 20
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 2
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 8
  op3_loc_r: 7
  input_t: 5
  input_mb_r: 1
  input_mb_c: 8
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x38993ba0], [2, 0x38e567c0], [3, 0x393193e0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 3]'
  input1_tms: '[vslice: 3]'
  input2_tms: '[vslice: 3]'
  input3_tms: '[vslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3bc4aa40]]'
  output1_dram_buffers: '[[2, 0x3cf4e4e0]]'
  output2_dram_buffers: '[[2, 0x3de7c140]]'
  output3_dram_buffers: '[[2, 0x3f0b3a20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 15
  output0_mb_r: 1
  output0_mb_c: 24
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 15
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 15
  output1_mb_r: 1
  output1_mb_c: 24
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 1
  op1_t: 15
  op1_mb_r: 1
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 15
  output2_mb_r: 1
  output2_mb_c: 24
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 15
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 15
  output3_mb_r: 1
  output3_mb_c: 24
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 15
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=20
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 9
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x304ffb80], [0, 0x30ab63a0], [2, 0x3106cbc0], [6, 0x316233e0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 6
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 48]'
  input1_tms: '[vslice: 48]'
  input2_tms: '[vslice: 48]'
  input3_tms: '[vslice: 48]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x31c16ba0]]'
  output1_dram_buffers: '[[2, 0x387f4d60]]'
  output2_dram_buffers: '[[2, 0x3a4d2820]]'
  output3_dram_buffers: '[[2, 0x3ddcb7a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 6
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 48
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 48
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 48
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 6
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 48
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 6
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 48
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=48
# effective_consumer_grid_size_r[0]=144
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=144
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=36
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=48
# effective_consumer_grid_size_r[1]=48
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=48
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=48
# effective_consumer_grid_size_r[2]=288
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=288
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=72
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=48
# effective_consumer_grid_size_r[3]=48
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=48
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=1
#Test id=21
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 7
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 2
  input_mb_r: 3
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x3621cb20], [7, 0x36236f40], [6, 0x36251360], [7, 0x3626b780], [5, 0x36285ba0], [2, 0x3629ffc0], [4, 0x362ba3e0], [6, 0x362d4800], [3, 0x362eec20], [7, 0x36309040], [6, 0x36323460], [3, 0x3633d880], [3, 0x36357ca0], [4, 0x363720c0], [4, 0x3638c4e0], [5, 0x363a6900], [4, 0x363c0d20], [5, 0x363db140], [1, 0x363f5560], [6, 0x3640f980]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 5]'
  input1_tms: '[vslice: 5]'
  input2_tms: '[vslice: 5]'
  input3_tms: '[vslice: 5]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x385cd1c0], [7, 0x386d39e0]]'
  output1_dram_buffers: '[[5, 0x39a19140], [7, 0x39b1f960]]'
  output2_dram_buffers: '[[5, 0x3cb23780], [7, 0x3cc29fa0]]'
  output3_dram_buffers: '[[5, 0x3f600c60], [7, 0x3f6afc80], [6, 0x3f75eca0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 3
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 10
  op0_mb_r: 3
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 3
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 10
  op1_mb_r: 3
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 3
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 10
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 3
  output3_t: 10
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 10
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=5
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=5
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=5
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=5
# effective_consumer_grid_size_r[3]=15
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=15
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=22
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x3a924b00], [1, 0x3a96ab20], [3, 0x3a9b0b40], [4, 0x3a9f6b60], [3, 0x3aa3cb80], [2, 0x3aa82ba0], [6, 0x3aac8bc0], [2, 0x3ab0ebe0], [0, 0x3ab54c00], [5, 0x3ab9ac20]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 4]'
  input1_tms: '[vslice: 4]'
  input2_tms: '[vslice: 4]'
  input3_tms: '[vslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3ef25e40], [1, 0x3efd4e60], [3, 0x3f083e80], [4, 0x3f132ea0]]'
  output1_dram_buffers: '[[3, 0x3f2b3fa0], [1, 0x3f411fc0]]'
  output2_dram_buffers: '[[3, 0x3f6de260], [1, 0x3f83c280]]'
  output3_dram_buffers: '[[3, 0x3f9fa620], [1, 0x3fb58640]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 1
  output0_mb_c: 5
  output0_ub_r: 2
  output0_ub_c: 2
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 4
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 4
  output1_mb_r: 1
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 8
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 4
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 4
  output2_mb_r: 1
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 8
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 4
  output3_mb_r: 1
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 4
  op3_mb_r: 1
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=4
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=4
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=23
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 3
  op1_loc_r: 4
  op2_loc_c: 4
  op2_loc_r: 7
  op3_loc_c: 8
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x33c295a0], [7, 0x33dac5c0], [0, 0x33f2f5e0], [7, 0x340b2600], [0, 0x34235620], [0, 0x343b8640], [3, 0x3453b660], [4, 0x346be680], [2, 0x348416a0], [2, 0x349c46c0], [4, 0x34b476e0], [5, 0x34cca700]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 4]'
  input1_tms: '[vslice: 4]'
  input2_tms: '[vslice: 4]'
  input3_tms: '[vslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3acba580]]'
  output1_dram_buffers: '[[0, 0x3befb720]]'
  output2_dram_buffers: '[[0, 0x3d9c75c0]]'
  output3_dram_buffers: '[[0, 0x3eca4240]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 9
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 4
  op0_mb_r: 3
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 9
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 4
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 9
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 4
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 9
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 4
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=4
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=4
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=24
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 5
  op1_loc_r: 7
  op2_loc_c: 8
  op2_loc_r: 7
  op3_loc_c: 9
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 5
  input_mb_c: 3
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x34b82400], [1, 0x35045020], [4, 0x35507c40], [0, 0x359ca860], [3, 0x35e8d480], [5, 0x363500a0], [0, 0x36812cc0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 7
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 35]'
  input1_tms: '[vslice: 35]'
  input2_tms: '[vslice: 35]'
  input3_tms: '[vslice: 35]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x36e3a3c0]]'
  output1_dram_buffers: '[[5, 0x396d2200]]'
  output2_dram_buffers: '[[5, 0x3bcffc60]]'
  output3_dram_buffers: '[[5, 0x3de9aac0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 35
  output0_mb_r: 2
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 35
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 35
  output1_mb_r: 2
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 35
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 35
  output2_mb_r: 2
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 35
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 35
  output3_mb_r: 2
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 35
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=35
# effective_consumer_grid_size_r[0]=35
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=35
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=35
# effective_consumer_grid_size_r[1]=35
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=35
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=5
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=35
# effective_consumer_grid_size_r[2]=35
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=35
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=5
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=35
# effective_consumer_grid_size_r[3]=35
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=35
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=5
# reblock_tm_fork_c_factor_int[3]=3
#Test id=25
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 8
  op0_loc_r: 6
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x36e7af60], [1, 0x37093380], [1, 0x372ab7a0], [2, 0x374c3bc0], [3, 0x376dbfe0], [2, 0x378f4400], [0, 0x37b0c820], [2, 0x37d24c40]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 7
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 44]'
  input1_tms: '[vslice: 44]'
  input2_tms: '[vslice: 44]'
  input3_tms: '[vslice: 44]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x380c5300]]'
  output1_dram_buffers: '[[3, 0x3962e280]]'
  output2_dram_buffers: '[[3, 0x3a82db00]]'
  output3_dram_buffers: '[[3, 0x3e26b360]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 44
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 44
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 44
  output1_mb_r: 8
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 44
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 44
  output2_mb_r: 8
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 44
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 8
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 44
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=44
# effective_consumer_grid_size_r[0]=88
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=88
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=11
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=44
# effective_consumer_grid_size_r[1]=352
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=352
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=44
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=44
# effective_consumer_grid_size_r[2]=44
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=44
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=7
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=44
# effective_consumer_grid_size_r[3]=44
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=44
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=7
# reblock_tm_fork_c_factor_int[3]=1
#Test id=26
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 11
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x35801fa0], [7, 0x35ac77c0], [7, 0x35d8cfe0], [7, 0x36052800], [0, 0x36318020], [3, 0x365dd840], [6, 0x368a3060], [2, 0x36b68880]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 44]'
  input1_tms: '[vslice: 44]'
  input2_tms: '[vslice: 44]'
  input3_tms: '[vslice: 44]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x371e4b40]]'
  output1_dram_buffers: '[[4, 0x392cbd00]]'
  output2_dram_buffers: '[[4, 0x3b438540]]'
  output3_dram_buffers: '[[4, 0x3dbe4060]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 44
  output0_mb_r: 2
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 44
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 44
  output1_mb_r: 2
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 1
  op1_t: 44
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 44
  output2_mb_r: 2
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 44
  op2_mb_r: 2
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 2
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 44
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=44
# effective_consumer_grid_size_r[0]=44
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=44
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=7
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=44
# effective_consumer_grid_size_r[1]=44
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=44
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=7
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=1
# tm_r_factor[2]=44
# effective_consumer_grid_size_r[2]=44
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=44
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=7
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=44
# effective_consumer_grid_size_r[3]=88
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=88
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=11
# reblock_tm_fork_c_factor_int[3]=2
#Test id=27
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 5
  op0_loc_r: 5
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x301006e0], [2, 0x30696700], [0, 0x30c2c720], [0, 0x311c2740], [4, 0x31758760], [4, 0x31cee780], [5, 0x322847a0], [5, 0x3281a7c0]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 3
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 44]'
  input1_tms: '[vslice: 44]'
  input2_tms: '[vslice: 44]'
  input3_tms: '[vslice: 44]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x32defec0]]'
  output1_dram_buffers: '[[3, 0x35ab6e40]]'
  output2_dram_buffers: '[[3, 0x38e00960]]'
  output3_dram_buffers: '[[3, 0x3bd85580]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 44
  output0_mb_r: 8
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 44
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 44
  output1_mb_r: 8
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 44
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 44
  output2_mb_r: 8
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 44
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 8
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 44
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=44
# effective_consumer_grid_size_r[0]=44
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=44
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=11
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=44
# effective_consumer_grid_size_r[1]=88
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=88
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=22
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=44
# effective_consumer_grid_size_r[2]=176
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=176
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=44
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=44
# effective_consumer_grid_size_r[3]=88
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=88
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=22
# reblock_tm_fork_c_factor_int[3]=1
#Test id=28
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 8
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[7, 0x33f5dce0], [7, 0x33fb5500], [6, 0x3400cd20], [4, 0x34064540], [7, 0x340bbd60], [0, 0x34113580], [1, 0x3416ada0], [0, 0x341c25c0], [3, 0x34219de0], [2, 0x34271600], [2, 0x342c8e20], [1, 0x34320640], [6, 0x34377e60], [3, 0x343cf680], [2, 0x34426ea0], [5, 0x3447e6c0], [7, 0x344d5ee0], [5, 0x3452d700], [5, 0x34584f20], [1, 0x345dc740], [5, 0x34633f60], [2, 0x3468b780], [6, 0x346e2fa0], [2, 0x3473a7c0], [1, 0x34791fe0], [7, 0x347e9800], [6, 0x34841020], [1, 0x34898840]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x39b84180], [7, 0x39ce21a0], [6, 0x39e401c0], [4, 0x39f9e1e0], [7, 0x3a0fc200], [0, 0x3a25a220], [1, 0x3a3b8240]]'
  output1_dram_buffers: '[[7, 0x3a9315e0], [7, 0x3aa8f600], [6, 0x3abed620], [4, 0x3ad4b640], [7, 0x3aea9660], [0, 0x3b007680], [1, 0x3b1656a0]]'
  output2_dram_buffers: '[[7, 0x3dd9fb80], [7, 0x3de4eba0], [6, 0x3defdbc0], [4, 0x3dfacbe0], [7, 0x3e05bc00], [0, 0x3e10ac20], [1, 0x3e1b9c40], [0, 0x3e268c60], [3, 0x3e317c80], [2, 0x3e3c6ca0], [2, 0x3e475cc0], [1, 0x3e524ce0], [6, 0x3e5d3d00], [3, 0x3e682d20]]'
  output3_dram_buffers: '[[7, 0x3f57e580], [7, 0x3f6b09a0], [6, 0x3f7e2dc0], [4, 0x3f9151e0], [7, 0x3fa47600], [0, 0x3fb79a20], [1, 0x3fcabe40], [0, 0x3fdde260]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 4
  output0_mb_r: 10
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 4
  op0_mb_r: 10
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 4
  output1_mb_r: 5
  output1_mb_c: 4
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 4
  op1_mb_r: 5
  op1_mb_c: 4
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 7
  output2_t: 4
  output2_mb_r: 2
  output2_mb_c: 2
  output2_ub_r: 5
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 7
  op2_t: 4
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 4
  output3_grid_size_r: 2
  output3_t: 4
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 5
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 4
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=14
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=14
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=14
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=14
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=14
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=14
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=29
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 7
  op2_loc_r: 4
  op3_loc_c: 9
  op3_loc_r: 3
  input_t: 3
  input_mb_r: 6
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x329507e0], [4, 0x32de2800], [3, 0x33274820]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x37593a40]]'
  output1_dram_buffers: '[[3, 0x3b3e9780]]'
  output2_dram_buffers: '[[3, 0x3d5c36e0]]'
  output3_dram_buffers: '[[3, 0x3ed0e240]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 12
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 6
  op0_mb_r: 3
  op0_mb_c: 3
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 12
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 6
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 6
  output2_mb_r: 12
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 6
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 12
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 2
  op3_t: 6
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=30
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 8
  op0_loc_r: 4
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 15
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x365d6300], [4, 0x369a5320], [7, 0x36d74340], [7, 0x37143360], [4, 0x37512380], [7, 0x378e13a0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 7
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 45]'
  input1_tms: '[vslice: 45]'
  input2_tms: '[vslice: 45]'
  input3_tms: '[vslice: 45]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x38c36f80]]'
  output1_dram_buffers: '[[2, 0x3a836420]]'
  output2_dram_buffers: '[[2, 0x3c40af00]]'
  output3_dram_buffers: '[[2, 0x3e5932c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 45
  output0_mb_r: 16
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 45
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 45
  output1_mb_r: 16
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 45
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 45
  output2_mb_r: 16
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 45
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 45
  output3_mb_r: 16
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 45
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=45
# effective_consumer_grid_size_r[0]=45
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=45
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=9
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=45
# effective_consumer_grid_size_r[1]=45
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=45
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=9
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=45
# effective_consumer_grid_size_r[2]=360
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=360
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=60
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=45
# effective_consumer_grid_size_r[3]=45
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=45
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=9
# reblock_tm_fork_c_factor_int[3]=1
#Test id=31
- device: GRAYSKULL
  entries: 28
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 16
  input_mb_c: 1
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x302604c0], [6, 0x30898ce0], [6, 0x30ed1500], [5, 0x31509d20], [0, 0x31b42540], [2, 0x3217ad60], [5, 0x327b3580]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 7
  feeder_loc_c: 3
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 49]'
  input1_tms: '[vslice: 49]'
  input2_tms: '[vslice: 49]'
  input3_tms: '[vslice: 49]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3476b0c0]]'
  output1_dram_buffers: '[[7, 0x37563bc0]]'
  output2_dram_buffers: '[[7, 0x3a499500]]'
  output3_dram_buffers: '[[7, 0x3d270fc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 49
  output0_mb_r: 16
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 49
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 49
  output1_mb_r: 16
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 49
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 49
  output2_mb_r: 16
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 49
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 49
  output3_mb_r: 16
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 49
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=49
# effective_consumer_grid_size_r[0]=49
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=49
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=7
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=49
# effective_consumer_grid_size_r[1]=49
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=49
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=7
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=49
# effective_consumer_grid_size_r[2]=49
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=49
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=7
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=49
# effective_consumer_grid_size_r[3]=392
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=392
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=56
# reblock_tm_fork_c_factor_int[3]=1
#Test id=32
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 8
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 3
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3650ba80], [0, 0x3655a6a0], [3, 0x365a92c0], [7, 0x365f7ee0], [0, 0x36646b00], [4, 0x36695720], [4, 0x366e4340], [5, 0x36732f60]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 8]'
  input1_tms: '[vslice: 8]'
  input2_tms: '[vslice: 8]'
  input3_tms: '[vslice: 8]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x379e78c0], [0, 0x37a850e0], [3, 0x37b22900], [7, 0x37bc0120]]'
  output1_dram_buffers: '[[3, 0x3adcd960], [0, 0x3ae9f980], [3, 0x3af719a0]]'
  output2_dram_buffers: '[[3, 0x3bd983a0], [0, 0x3be6a3c0], [3, 0x3bf3c3e0]]'
  output3_dram_buffers: '[[3, 0x3d305860], [0, 0x3d440880]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 9
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 16
  op0_mb_r: 9
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 16
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 3
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 16
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 3
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 16
  output2_mb_r: 3
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 16
  op2_mb_r: 3
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 3
  output3_ub_c: 2
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 16
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=8
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=8
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=8
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=8
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=33
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[3, 0x387970e0], [4, 0x387a7300], [7, 0x387b7520], [5, 0x387c7740], [0, 0x387d7960], [2, 0x387e7b80], [1, 0x387f7da0], [4, 0x38807fc0], [5, 0x388181e0], [1, 0x38828400], [7, 0x38838620], [1, 0x38848840], [4, 0x38858a60], [4, 0x38868c80], [4, 0x38878ea0], [4, 0x388890c0], [4, 0x388992e0], [2, 0x388a9500]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 2
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 24]'
  input1_tms: '[vslice: 24]'
  input2_tms: '[vslice: 24]'
  input3_tms: '[vslice: 24]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x388bdb20]]'
  output1_dram_buffers: '[[3, 0x389e7d60]]'
  output2_dram_buffers: '[[3, 0x38eb5fc0]]'
  output3_dram_buffers: '[[3, 0x39929ca0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 1
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 24
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 1
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 24
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 24
  output2_mb_r: 1
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 24
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 1
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 24
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=24
# effective_consumer_grid_size_r[0]=24
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=24
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=24
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=24
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=24
# effective_consumer_grid_size_r[3]=24
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=24
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=34
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 7
  op1_loc_c: 6
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 9
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 13
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x39425380], [4, 0x395cbba0], [7, 0x397723c0], [4, 0x39918be0], [1, 0x39abf400], [4, 0x39c65c20], [6, 0x39e0c440], [5, 0x39fb2c60]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 2
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 16]'
  input1_tms: '[vslice: 16]'
  input2_tms: '[vslice: 16]'
  input3_tms: '[vslice: 16]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3b7bfc20]]'
  output1_dram_buffers: '[[4, 0x3d171400]]'
  output2_dram_buffers: '[[4, 0x3e4127e0]]'
  output3_dram_buffers: '[[4, 0x3f25f780]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 26
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 16
  op0_mb_r: 13
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 26
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 16
  op1_mb_r: 13
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 26
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 16
  op2_mb_r: 13
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 26
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 16
  op3_mb_r: 13
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=16
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=16
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=16
# effective_consumer_grid_size_r[2]=32
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=32
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=8
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=16
# effective_consumer_grid_size_r[3]=32
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=32
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=8
# reblock_tm_fork_c_factor_int[3]=1
#Test id=35
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 12
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x372c65a0], [6, 0x373589c0], [1, 0x373eade0], [0, 0x3747d200], [5, 0x3750f620], [4, 0x375a1a40], [3, 0x37633e60], [4, 0x376c6280], [0, 0x377586a0], [0, 0x377eaac0], [4, 0x3787cee0], [3, 0x3790f300], [3, 0x379a1720], [2, 0x37a33b40], [1, 0x37ac5f60], [2, 0x37b58380]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 48]'
  input1_tms: '[vslice: 48]'
  input2_tms: '[vslice: 48]'
  input3_tms: '[vslice: 48]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x37e1ea60]]'
  output1_dram_buffers: '[[6, 0x3a635c60]]'
  output2_dram_buffers: '[[6, 0x3de45440]]'
  output3_dram_buffers: '[[6, 0x3f046800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 12
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 48
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 48
  output1_mb_r: 12
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 48
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 12
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 48
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 48
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=48
# effective_consumer_grid_size_r[0]=48
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=48
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=6
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=48
# effective_consumer_grid_size_r[1]=96
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=96
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=48
# effective_consumer_grid_size_r[2]=192
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=192
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=48
# effective_consumer_grid_size_r[3]=48
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=48
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=6
# reblock_tm_fork_c_factor_int[3]=1
#Test id=36
- device: GRAYSKULL
  entries: 28
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 2
  input_mb_c: 5
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x316d57c0], [7, 0x318800e0], [7, 0x31a2aa00], [1, 0x31bd5320], [0, 0x31d7fc40], [7, 0x31f2a560], [5, 0x320d4e80], [4, 0x3227f7a0], [7, 0x3242a0c0], [0, 0x325d49e0], [2, 0x3277f300], [4, 0x32929c20], [6, 0x32ad4540], [1, 0x32c7ee60]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3599ca00]]'
  output1_dram_buffers: '[[6, 0x38db3d20]]'
  output2_dram_buffers: '[[6, 0x3b29c680]]'
  output3_dram_buffers: '[[6, 0x3cd44fa0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 7
  output0_mb_c: 30
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 7
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 7
  output1_mb_c: 30
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 7
  output2_mb_c: 30
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 15
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 7
  output3_mb_c: 30
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 6
  op3_grid_size_r: 7
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=14
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=14
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=14
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=14
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=14
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=14
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=14
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=14
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=3
#Test id=37
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 7
  op2_loc_c: 7
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 15
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x319b02a0], [6, 0x31a0b940], [4, 0x31a66fe0], [4, 0x31ac2680], [1, 0x31b1dd20], [3, 0x31b793c0], [7, 0x31bd4a60], [5, 0x31c30100], [4, 0x31c8b7a0], [6, 0x31ce6e40], [4, 0x31d424e0], [3, 0x31d9db80]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 36]'
  input1_tms: '[vslice: 36]'
  input2_tms: '[vslice: 36]'
  input3_tms: '[vslice: 36]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3e4e6100]]'
  output1_dram_buffers: '[[5, 0x3ea5cde0]]'
  output2_dram_buffers: '[[5, 0x3f73e7a0]]'
  output3_dram_buffers: '[[5, 0x3fb974e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 36
  output0_mb_r: 15
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 36
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 36
  output1_mb_r: 15
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 36
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 36
  output2_mb_r: 15
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 36
  op2_mb_r: 15
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 36
  output3_mb_r: 15
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 36
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=36
# effective_consumer_grid_size_r[0]=36
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=36
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=6
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=36
# effective_consumer_grid_size_r[1]=36
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=36
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=36
# effective_consumer_grid_size_r[2]=36
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=36
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=6
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=36
# effective_consumer_grid_size_r[3]=180
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=180
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=30
# reblock_tm_fork_c_factor_int[3]=1
#Test id=38
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 7
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[7, 0x3f9eea20], [3, 0x3fa08e40], [0, 0x3fa23260], [0, 0x3fa3d680], [2, 0x3fa57aa0], [5, 0x3fa71ec0], [3, 0x3fa8c2e0], [5, 0x3faa6700]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 3
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3fae5240]]'
  output1_dram_buffers: '[[7, 0x3fbd4400], [3, 0x3fc08c20], [0, 0x3fc3d440], [0, 0x3fc71c60]]'
  output2_dram_buffers: '[[7, 0x3fd65d20], [3, 0x3fdced40]]'
  output3_dram_buffers: '[[7, 0x3ff0ea80], [3, 0x3ff202a0], [0, 0x3ff31ac0], [0, 0x3ff432e0], [2, 0x3ff54b00], [5, 0x3ff66320], [3, 0x3ff77b40], [5, 0x3ff89360], [6, 0x3ff9ab80], [6, 0x3ffac3a0], [6, 0x3ffbdbc0], [1, 0x3ffcf3e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 2
  output0_mb_c: 2
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 4
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 4
  output1_mb_r: 2
  output1_mb_c: 1
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 4
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 4
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 6
  output3_t: 4
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 4
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=2
#Test id=39
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 5
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 4
  input_mb_r: 1
  input_mb_c: 5
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x31145180], [7, 0x316fb9a0], [3, 0x31cb21c0], [3, 0x322689e0], [4, 0x3281f200], [7, 0x32dd5a20], [3, 0x3338c240], [2, 0x33942a60]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 2
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x34856460]]'
  output1_dram_buffers: '[[0, 0x376c1ea0]]'
  output2_dram_buffers: '[[0, 0x3a497100]]'
  output3_dram_buffers: '[[0, 0x3d24b380]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 6
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 5
  op0_grid_size_r: 1
  op0_t: 8
  op0_mb_r: 3
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 6
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 8
  op1_mb_r: 2
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 6
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 8
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 6
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 8
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=40
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x33c95420], [5, 0x33cc1040], [7, 0x33cecc60], [2, 0x33d18880], [1, 0x33d444a0], [1, 0x33d700c0], [5, 0x33d9bce0], [1, 0x33dc7900], [0, 0x33df3520], [3, 0x33e1f140], [1, 0x33e4ad60], [0, 0x33e76980], [2, 0x33ea25a0], [6, 0x33ece1c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 20]'
  input1_tms: '[vslice: 20]'
  input2_tms: '[vslice: 20]'
  input3_tms: '[vslice: 20]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x35fd1840], [5, 0x36029060], [7, 0x36080880], [2, 0x360d80a0], [1, 0x3612f8c0], [1, 0x361870e0], [5, 0x361de900]]'
  output1_dram_buffers: '[[6, 0x36cc4a40]]'
  output2_dram_buffers: '[[6, 0x3905c640], [5, 0x3918ea60]]'
  output3_dram_buffers: '[[6, 0x395b5f20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 7
  output0_t: 20
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 20
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 20
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 7
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 20
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 20
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=20
# effective_consumer_grid_size_r[0]=140
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=140
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=20
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=20
# effective_consumer_grid_size_r[1]=20
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=20
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=20
# effective_consumer_grid_size_r[2]=20
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=20
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=20
# effective_consumer_grid_size_r[3]=20
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=20
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=41
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 9
  op3_loc_r: 0
  input_t: 15
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x31497a00], [6, 0x314b61a0], [6, 0x314d4940], [6, 0x314f30e0], [6, 0x31511880], [1, 0x31530020], [7, 0x3154e7c0], [4, 0x3156cf60], [4, 0x3158b700], [0, 0x315a9ea0], [2, 0x315c8640], [4, 0x315e6de0], [2, 0x31605580], [1, 0x31623d20], [5, 0x316424c0], [7, 0x31660c60], [3, 0x3167f400], [2, 0x3169dba0], [7, 0x316bc340], [1, 0x316daae0], [2, 0x316f9280], [6, 0x31717a20], [7, 0x317361c0], [1, 0x31754960], [3, 0x31773100], [4, 0x317918a0], [2, 0x317b0040], [3, 0x317ce7e0], [7, 0x317ecf80], [0, 0x3180b720], [5, 0x31829ec0], [6, 0x31848660], [1, 0x31866e00], [7, 0x318855a0], [7, 0x318a3d40], [2, 0x318c24e0], [5, 0x318e0c80], [0, 0x318ff420], [6, 0x3191dbc0], [5, 0x3193c360], [4, 0x3195ab00], [7, 0x319792a0], [1, 0x31997a40], [0, 0x319b61e0], [2, 0x319d4980], [7, 0x319f3120], [7, 0x31a118c0], [6, 0x31a30060]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3bb548c0]]'
  output1_dram_buffers: '[[3, 0x3c1c8100]]'
  output2_dram_buffers: '[[3, 0x3ca01040]]'
  output3_dram_buffers: '[[3, 0x3ddffc20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 4
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 30
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 30
  output1_mb_r: 4
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 30
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 30
  output2_mb_r: 4
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 30
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 30
  output3_mb_r: 4
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 30
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=42
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 6
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 2
  input_mb_r: 4
  input_mb_c: 4
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x307eed40], [5, 0x308c0d60], [3, 0x30992d80], [3, 0x30a64da0], [5, 0x30b36dc0], [6, 0x30c08de0], [4, 0x30cdae00]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 7
  feeder_loc_c: 1
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 7]'
  input1_tms: '[vslice: 7]'
  input2_tms: '[vslice: 7]'
  input3_tms: '[vslice: 7]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x31405dc0], [5, 0x315755e0], [3, 0x316e4e00], [3, 0x31854620]]'
  output1_dram_buffers: '[[2, 0x398977c0], [5, 0x39b767e0]]'
  output2_dram_buffers: '[[2, 0x3b58d3a0], [5, 0x3b86c3c0]]'
  output3_dram_buffers: '[[2, 0x3c43ee40], [5, 0x3c71de60]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 1
  output0_t: 14
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 14
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 14
  output1_mb_r: 3
  output1_mb_c: 1
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 14
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 14
  output2_mb_r: 6
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 14
  op2_mb_r: 6
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 14
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 14
  op3_mb_r: 12
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=7
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=7
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=7
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=7
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=43
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 6
  op0_loc_r: 5
  op1_loc_c: 7
  op1_loc_r: 3
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 16
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x31c08ea0], [2, 0x31f14ec0], [5, 0x32220ee0], [5, 0x3252cf00], [1, 0x32838f20], [5, 0x32b44f40], [3, 0x32e50f60]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 7
  feeder_loc_c: 4
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 42]'
  input1_tms: '[vslice: 42]'
  input2_tms: '[vslice: 42]'
  input3_tms: '[vslice: 42]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3484b1c0]]'
  output1_dram_buffers: '[[1, 0x3acd3880]]'
  output2_dram_buffers: '[[1, 0x3c7641e0]]'
  output3_dram_buffers: '[[1, 0x3de15120]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 42
  output0_mb_r: 16
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 42
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 42
  output1_mb_r: 16
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 42
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 42
  output2_mb_r: 16
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 42
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 42
  output3_mb_r: 16
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 42
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=42
# effective_consumer_grid_size_r[0]=84
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=84
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=42
# effective_consumer_grid_size_r[1]=42
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=42
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=42
# effective_consumer_grid_size_r[2]=42
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=42
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=6
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=42
# effective_consumer_grid_size_r[3]=168
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=168
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=24
# reblock_tm_fork_c_factor_int[3]=1
#Test id=44
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 2
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x3366f520], [6, 0x33678140], [7, 0x33680d60], [6, 0x33689980], [7, 0x336925a0], [2, 0x3369b1c0], [4, 0x336a3de0], [3, 0x336aca00], [5, 0x336b5620], [1, 0x336be240], [3, 0x336c6e60], [7, 0x336cfa80], [3, 0x336d86a0], [7, 0x336e12c0], [5, 0x336e9ee0], [1, 0x336f2b00], [4, 0x336fb720], [5, 0x33704340], [6, 0x3370cf60], [1, 0x33715b80], [3, 0x3371e7a0], [1, 0x337273c0], [1, 0x3372ffe0], [0, 0x33738c00], [3, 0x33741820], [4, 0x3374a440], [3, 0x33753060], [2, 0x3375bc80], [6, 0x337648a0], [2, 0x3376d4c0], [1, 0x337760e0], [2, 0x3377ed00], [0, 0x33787920], [4, 0x33790540], [1, 0x33799160], [1, 0x337a1d80]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3380ea80], [6, 0x338432a0], [7, 0x33877ac0], [6, 0x338ac2e0], [7, 0x338e0b00], [2, 0x33915320]]'
  output1_dram_buffers: '[[6, 0x3399ff00], [6, 0x339d4720], [7, 0x33a08f40], [6, 0x33a3d760], [7, 0x33a71f80], [2, 0x33aa67a0]]'
  output2_dram_buffers: '[[6, 0x344a0ba0], [6, 0x344d53c0], [7, 0x34509be0], [6, 0x3453e400], [7, 0x34572c20], [2, 0x345a7440]]'
  output3_dram_buffers: '[[6, 0x3e53b8c0], [6, 0x3e5700e0], [7, 0x3e5a4900], [6, 0x3e5d9120], [7, 0x3e60d940], [2, 0x3e642160]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 2
  output0_mb_r: 4
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 2
  output1_grid_size_r: 3
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 3
  output1_ub_r: 8
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 6
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 3
  output3_t: 2
  output3_mb_r: 2
  output3_mb_c: 3
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=45
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 7
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 6
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x32ddc740], [7, 0x32ff4b60], [4, 0x3320cf80], [2, 0x334253a0], [1, 0x3363d7c0], [3, 0x33855be0], [2, 0x33a6e000], [1, 0x33c86420], [3, 0x33e9e840], [3, 0x340b6c60], [6, 0x342cf080], [5, 0x344e74a0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 22]'
  input1_tms: '[vslice: 22]'
  input2_tms: '[vslice: 22]'
  input3_tms: '[vslice: 22]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x34ef6e40]]'
  output1_dram_buffers: '[[7, 0x375efa20]]'
  output2_dram_buffers: '[[7, 0x3979b420]]'
  output3_dram_buffers: '[[7, 0x3beb6f40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 22
  output0_mb_r: 6
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 22
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 22
  output1_mb_r: 6
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 22
  op1_mb_r: 1
  op1_mb_c: 6
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 22
  output2_mb_r: 6
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 22
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 22
  output3_mb_r: 6
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 22
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=22
# effective_consumer_grid_size_r[0]=22
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=22
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=11
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=22
# effective_consumer_grid_size_r[1]=44
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=44
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=22
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=22
# effective_consumer_grid_size_r[2]=44
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=44
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=22
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=22
# effective_consumer_grid_size_r[3]=66
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=66
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=33
# reblock_tm_fork_c_factor_int[3]=1
#Test id=46
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 13
  input_mb_c: 5
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x34672200], [2, 0x3477a320], [2, 0x34882440], [6, 0x3498a560], [6, 0x34a92680], [7, 0x34b9a7a0], [3, 0x34ca28c0], [0, 0x34daa9e0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 13]'
  input1_tms: '[vslice: 13]'
  input2_tms: '[vslice: 13]'
  input3_tms: '[vslice: 13]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x361d7980]]'
  output1_dram_buffers: '[[4, 0x383cdd60]]'
  output2_dram_buffers: '[[4, 0x39263c40]]'
  output3_dram_buffers: '[[4, 0x3e966380]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 4
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 13
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 13
  output1_mb_r: 4
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 13
  op1_mb_r: 4
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 4
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 13
  op2_mb_r: 2
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 13
  output3_mb_r: 4
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 5
  op3_grid_size_r: 1
  op3_t: 13
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=13
# effective_consumer_grid_size_r[0]=13
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=13
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=13
# effective_consumer_grid_size_r[1]=13
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=13
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=5
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=13
# effective_consumer_grid_size_r[2]=26
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=26
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=8
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=13
# effective_consumer_grid_size_r[3]=13
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=13
# effective_consumer_grid_size_c_reblock[3]=5
# reblock_tm_fork_r_factor_int[3]=5
# reblock_tm_fork_c_factor_int[3]=4
#Test id=47
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 5
  op0_loc_r: 2
  op1_loc_c: 6
  op1_loc_r: 3
  op2_loc_c: 9
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 5
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[3, 0x306fdc80], [0, 0x30ca90a0], [5, 0x312544c0], [0, 0x317ff8e0], [0, 0x31daad00], [6, 0x32356120], [4, 0x32901540], [1, 0x32eac960]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 4
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 24]'
  input1_tms: '[vslice: 24]'
  input2_tms: '[vslice: 24]'
  input3_tms: '[vslice: 24]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33eee580]]'
  output1_dram_buffers: '[[3, 0x36df13e0]]'
  output2_dram_buffers: '[[3, 0x3a330c80]]'
  output3_dram_buffers: '[[3, 0x3d08ee00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 5
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 48
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 48
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 48
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 5
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 48
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 5
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 48
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=24
# effective_consumer_grid_size_r[0]=24
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=24
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=24
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=24
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=24
# effective_consumer_grid_size_r[3]=120
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=120
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=15
# reblock_tm_fork_c_factor_int[3]=1
#Test id=48
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 9
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 15
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x3897b840], [0, 0x38a32560], [2, 0x38ae9280], [0, 0x38b9ffa0], [2, 0x38c56cc0], [1, 0x38d0d9e0], [4, 0x38dc4700], [4, 0x38e7b420], [0, 0x38f32140], [4, 0x38fe8e60], [0, 0x3909fb80], [1, 0x391568a0], [7, 0x3920d5c0], [6, 0x392c42e0], [6, 0x3937b000], [3, 0x39431d20], [6, 0x394e8a40], [0, 0x3959f760]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 45]'
  input1_tms: '[vslice: 45]'
  input2_tms: '[vslice: 45]'
  input3_tms: '[vslice: 45]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3a4ed520]]'
  output1_dram_buffers: '[[5, 0x3d806a80]]'
  output2_dram_buffers: '[[5, 0x3e531520]]'
  output3_dram_buffers: '[[5, 0x3f2b2ba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 45
  output0_mb_r: 12
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 45
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 45
  output1_mb_r: 12
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 45
  op1_mb_r: 4
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 45
  output2_mb_r: 12
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 45
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 45
  output3_mb_r: 12
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 45
  op3_mb_r: 12
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=45
# effective_consumer_grid_size_r[0]=45
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=45
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=9
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=45
# effective_consumer_grid_size_r[1]=135
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=135
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=24
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=45
# effective_consumer_grid_size_r[2]=135
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=135
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=45
# effective_consumer_grid_size_r[3]=45
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=45
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=9
# reblock_tm_fork_c_factor_int[3]=1
#Test id=49
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 6
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 10
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[3, 0x34335de0], [3, 0x343ff700], [1, 0x344c9020], [4, 0x34592940], [3, 0x3465c260]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 50]'
  input1_tms: '[vslice: 50]'
  input2_tms: '[vslice: 50]'
  input3_tms: '[vslice: 50]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3ca18580]]'
  output1_dram_buffers: '[[3, 0x3dc1a8e0]]'
  output2_dram_buffers: '[[3, 0x3ec472e0]]'
  output3_dram_buffers: '[[3, 0x3fb7f380]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 50
  output0_mb_r: 1
  output0_mb_c: 5
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 50
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 50
  output1_mb_r: 1
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 50
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 50
  output2_mb_r: 1
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 50
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 50
  output3_mb_r: 1
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 50
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=50
# effective_consumer_grid_size_r[0]=50
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=50
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=50
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=50
# effective_consumer_grid_size_r[1]=50
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=50
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=50
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=50
# effective_consumer_grid_size_r[2]=50
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=50
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=50
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=50
# effective_consumer_grid_size_r[3]=50
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=50
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=50
# reblock_tm_fork_c_factor_int[3]=1
