#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 2
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x34507000]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 15}, broadcast: {c: 77}]'
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: '[broadcast: {z: 61}, broadcast: {c: 77}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34ba3460]]'
  output1_dram_buffers: '[[4, 0x37f6e180]]'
  output2_dram_buffers: '[[4, 0x38b62e80]]'
  output3_dram_buffers: '[[4, 0x3967fa20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 15
  output0_mb_r: 1
  output0_mb_c: 77
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 15
  op0_mb_r: 1
  op0_mb_c: 11
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 77
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 7
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 11
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 77
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 61
  output3_mb_r: 1
  output3_mb_c: 77
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 61
  op3_mb_r: 1
  op3_mb_c: 11
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=77
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=77
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=77
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=77
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=7
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=7
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=77
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=77
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=77
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=77
#Test id=1
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 1
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x308478c0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 17}, broadcast: {r: 2}, broadcast: {c: 50}]'
  input1_tms: '[broadcast: {z: 6}, broadcast: {r: 2}, broadcast: {c: 50}]'
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x30873aa0]]'
  output1_dram_buffers: '[[4, 0x3aa54620]]'
  output2_dram_buffers: '[[4, 0x3e382160]]'
  output3_dram_buffers: '[[4, 0x3ed5b9a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 2
  output0_mb_c: 50
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 17
  op0_mb_r: 2
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 2
  output1_mb_c: 50
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 6
  op1_mb_r: 2
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 50
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 5
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 50
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=50
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=100
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=100
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=100
# tm_c_factor[1]=50
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=100
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=100
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=100
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=5
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=5
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=5
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 3
  op1_loc_c: 6
  op1_loc_r: 2
  op2_loc_c: 7
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x35c71ee0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 45}, broadcast: {r: 72}, broadcast: {c: 2}]'
  input1_tms: 
  input2_tms: '[broadcast: {z: 51}, broadcast: {r: 72}, broadcast: {c: 2}]'
  input3_tms: '[broadcast: {z: 28}, broadcast: {r: 72}, broadcast: {c: 2}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x35dc3060]]'
  output1_dram_buffers: '[[1, 0x3968b6e0], [3, 0x396f4700], [2, 0x3975d720]]'
  output2_dram_buffers: '[[1, 0x3981ed00], [3, 0x3b77f520]]'
  output3_dram_buffers: '[[1, 0x3dbe5b00], [3, 0x3e1a3b20], [2, 0x3e761b40], [1, 0x3ed1fb60], [2, 0x3f2ddb80], [4, 0x3f89bba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 45
  output0_mb_r: 9
  output0_mb_c: 2
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 45
  op0_mb_r: 9
  op0_mb_c: 2
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 1
  output1_mb_r: 3
  output1_mb_c: 2
  output1_ub_r: 8
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 2
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 51
  output2_mb_r: 6
  output2_mb_c: 2
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 51
  op2_mb_r: 6
  op2_mb_c: 2
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 28
  output3_mb_r: 12
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 28
  op3_mb_r: 12
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=2
# tm_r_factor[0]=72
# effective_consumer_grid_size_r[0]=72
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=72
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=72
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=72
# effective_consumer_grid_size_r[2]=144
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=144
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=144
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=72
# effective_consumer_grid_size_r[3]=432
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=432
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=432
# reblock_tm_fork_c_factor_int[3]=2
#Test id=3
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 5
  op1_loc_c: 6
  op1_loc_r: 5
  op2_loc_c: 7
  op2_loc_r: 3
  op3_loc_c: 8
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x30ed6bc0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 4
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 4}, broadcast: {r: 78}, broadcast: {c: 2}]'
  input1_tms: '[broadcast: {z: 38}, broadcast: {r: 78}, broadcast: {c: 2}]'
  input2_tms: '[broadcast: {z: 38}, broadcast: {r: 78}, broadcast: {c: 2}]'
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x31582960], [1, 0x31749980], [0, 0x319109a0]]'
  output1_dram_buffers: '[[6, 0x31f19ea0], [1, 0x32ffc6c0], [0, 0x340deee0]]'
  output2_dram_buffers: '[[6, 0x357d13e0]]'
  output3_dram_buffers: '[[6, 0x3a2c1dc0], [1, 0x3a3172e0], [0, 0x3a36c800], [7, 0x3a3c1d20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 4
  output0_mb_r: 13
  output0_mb_c: 2
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 4
  op0_mb_r: 13
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 38
  output1_mb_r: 13
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 38
  op1_mb_r: 13
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 38
  output2_mb_r: 13
  output2_mb_c: 2
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 38
  op2_mb_r: 13
  op2_mb_c: 2
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 13
  output3_mb_c: 1
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 13
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=2
# tm_r_factor[0]=78
# effective_consumer_grid_size_r[0]=234
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=234
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=234
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=78
# effective_consumer_grid_size_r[1]=234
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=234
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=234
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=78
# effective_consumer_grid_size_r[2]=78
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=78
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=78
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=4
- device: GRAYSKULL
  entries: 28
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x31b72160]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 2}, broadcast: {r: 20}, broadcast: {c: 8}]'
  input1_tms: 
  input2_tms: [transpose]
  input3_tms: '[broadcast: {z: 19}, broadcast: {r: 20}, broadcast: {c: 8}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x31c123c0]]'
  output1_dram_buffers: '[[4, 0x32ddefa0]]'
  output2_dram_buffers: '[[4, 0x33813360]]'
  output3_dram_buffers: '[[4, 0x34105540]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 20
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 20
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 20
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 5
  op2_mb_c: 4
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 19
  output3_mb_r: 20
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 19
  op3_mb_r: 4
  op3_mb_c: 4
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=8
# tm_r_factor[0]=20
# effective_consumer_grid_size_r[0]=40
# effective_consumer_grid_size_c[0]=16
# effective_consumer_grid_size_r_reblock[0]=40
# effective_consumer_grid_size_c_reblock[0]=16
# reblock_tm_fork_r_factor_int[0]=40
# reblock_tm_fork_c_factor_int[0]=16
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=8
# tm_r_factor[3]=20
# effective_consumer_grid_size_r[3]=20
# effective_consumer_grid_size_c[3]=16
# effective_consumer_grid_size_r_reblock[3]=20
# effective_consumer_grid_size_c_reblock[3]=16
# reblock_tm_fork_r_factor_int[3]=20
# reblock_tm_fork_c_factor_int[3]=16
#Test id=5
- device: GRAYSKULL
  entries: 10
  op0_loc_c: 2
  op0_loc_r: 7
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 9
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x339020a0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 59}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 2}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input2_tms: 
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3393db40]]'
  output1_dram_buffers: '[[2, 0x3e245540]]'
  output2_dram_buffers: '[[2, 0x3e9da1e0]]'
  output3_dram_buffers: '[[2, 0x3f8f9700]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 59
  output0_mb_r: 12
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 59
  op0_mb_r: 3
  op0_mb_c: 6
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 12
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 3
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 12
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 12
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 4
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 20
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=12
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=12
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=48
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=48
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=48
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=6
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 9
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x3143a9a0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 9}, broadcast: {r: 2}, broadcast: {c: 66}]'
  input1_tms: 
  input2_tms: '[broadcast: {z: 9}, broadcast: {r: 2}, broadcast: {c: 66}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3791fe60]]'
  output1_dram_buffers: '[[5, 0x3a508ea0]]'
  output2_dram_buffers: '[[5, 0x3b877680]]'
  output3_dram_buffers: '[[5, 0x3ecf7c40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 2
  output0_mb_c: 66
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 9
  op0_mb_r: 1
  op0_mb_c: 11
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 2
  output1_mb_c: 66
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 11
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 2
  output2_mb_c: 66
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 9
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 66
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 11
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=66
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=66
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=66
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=66
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=66
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=132
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=132
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=132
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=7
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 7
  op3_loc_c: 9
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x35c25900]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 40}, broadcast: {c: 240}]'
  input1_tms: 
  input2_tms: 
  input3_tms: '[broadcast: {z: 11}, broadcast: {c: 240}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3639f960], [0, 0x37821980]]'
  output1_dram_buffers: '[[6, 0x398834a0], [0, 0x398dacc0], [6, 0x399324e0]]'
  output2_dram_buffers: '[[6, 0x3a0319a0], [0, 0x3a0891c0], [6, 0x3a0e09e0]]'
  output3_dram_buffers: '[[6, 0x3a7f4c00], [0, 0x3abb7420], [6, 0x3af79c40]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 40
  output0_mb_r: 1
  output0_mb_c: 15
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 40
  op0_mb_r: 1
  op0_mb_c: 15
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 16
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 3
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 5
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 3
  output3_grid_size_r: 1
  output3_t: 11
  output3_mb_r: 1
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 11
  op3_mb_r: 1
  op3_mb_c: 16
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=240
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=480
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=480
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=480
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=240
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=720
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=720
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=720
#Test id=8
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[7, 0x386d0fa0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 26}, broadcast: {r: 14}]'
  input1_tms: 
  input2_tms: 
  input3_tms: '[broadcast: {z: 41}, broadcast: {r: 14}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x39714340]]'
  output1_dram_buffers: '[[7, 0x3b89e1e0]]'
  output2_dram_buffers: '[[7, 0x3bde27a0]]'
  output3_dram_buffers: '[[7, 0x3d26e5e0], [6, 0x3d30b540]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 26
  output0_mb_r: 14
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 26
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 14
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 14
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 7
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 41
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 41
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=14
# effective_consumer_grid_size_r[0]=14
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=14
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=14
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=14
# effective_consumer_grid_size_r[3]=28
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=28
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=28
# reblock_tm_fork_c_factor_int[3]=1
#Test id=9
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 7
  op0_loc_r: 4
  op1_loc_c: 8
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x306aaae0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 6
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 8}, broadcast: {r: 96}]'
  input1_tms: '[broadcast: {z: 15}, broadcast: {r: 96}]'
  input2_tms: [transpose]
  input3_tms: '[broadcast: {z: 3}, broadcast: {r: 96}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x308d44e0]]'
  output1_dram_buffers: '[[0, 0x3520be40]]'
  output2_dram_buffers: '[[0, 0x3db2a0a0]]'
  output3_dram_buffers: '[[0, 0x3e44fd00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 96
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 8
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 15
  output1_mb_r: 96
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 15
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 96
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 1
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 96
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 3
  op3_mb_r: 16
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=96
# effective_consumer_grid_size_r[0]=96
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=96
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=96
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=96
# effective_consumer_grid_size_r[1]=96
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=96
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=96
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=1
# tm_r_factor[3]=96
# effective_consumer_grid_size_r[3]=96
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=96
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=96
# reblock_tm_fork_c_factor_int[3]=1
#Test id=10
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 6
  op1_loc_c: 6
  op1_loc_r: 7
  op2_loc_c: 7
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x34aaa680]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 2}, broadcast: {r: 24}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 59}, broadcast: {r: 24}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 14}, broadcast: {r: 24}, broadcast: {c: 6}]'
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x34b5bf60], [2, 0x34c96f80]]'
  output1_dram_buffers: '[[1, 0x34e5a540]]'
  output2_dram_buffers: '[[1, 0x397e0180], [2, 0x39c2e9a0], [7, 0x3a07d1c0], [4, 0x3a4cb9e0]]'
  output3_dram_buffers: '[[1, 0x3e5a2c40], [2, 0x3e640460]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 8
  output0_mb_c: 3
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 8
  op0_mb_c: 3
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 59
  output1_mb_r: 12
  output1_mb_c: 2
  output1_ub_r: 2
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 59
  op1_mb_r: 12
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 14
  output2_mb_r: 3
  output2_mb_c: 6
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 14
  op2_mb_r: 3
  op2_mb_c: 6
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 12
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=6
# tm_r_factor[0]=24
# effective_consumer_grid_size_r[0]=24
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=24
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=24
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=6
# tm_r_factor[1]=24
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=24
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=6
# tm_r_factor[2]=24
# effective_consumer_grid_size_r[2]=96
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=96
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=96
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=11
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x30414ba0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 64}, broadcast: {r: 16}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 6}, broadcast: {r: 16}, broadcast: {c: 12}]'
  input2_tms: [transpose]
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x32950840], [5, 0x34c50860], [2, 0x36f50880]]'
  output1_dram_buffers: '[[1, 0x3b581240]]'
  output2_dram_buffers: '[[1, 0x3eb92f40], [5, 0x3ec1ef60], [2, 0x3ecaaf80]]'
  output3_dram_buffers: '[[1, 0x3fba6fa0], [5, 0x3fc78fc0]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 1
  output0_t: 64
  output0_mb_r: 2
  output0_mb_c: 4
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 64
  op0_mb_r: 2
  op0_mb_c: 4
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 16
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 6
  op1_mb_r: 16
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 3
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 8
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 4
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 12
  output3_ub_r: 8
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 12
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=12
# tm_r_factor[0]=16
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=36
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=36
# reblock_tm_fork_r_factor_int[0]=16
# reblock_tm_fork_c_factor_int[0]=36
# tm_c_factor[1]=12
# tm_r_factor[1]=16
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=16
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=12
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 5
  op0_loc_r: 2
  op1_loc_c: 7
  op1_loc_r: 6
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x3165eac0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 46}, broadcast: {r: 22}, broadcast: {c: 14}]'
  input1_tms: [transpose]
  input2_tms: '[broadcast: {z: 59}, broadcast: {r: 22}, broadcast: {c: 14}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3209d540], [5, 0x32fbf660]]'
  output1_dram_buffers: '[[1, 0x371e5b20], [5, 0x37239ec0]]'
  output2_dram_buffers: '[[1, 0x3c189660], [5, 0x3cb3ddc0], [4, 0x3d4f2520], [7, 0x3dea6c80]]'
  output3_dram_buffers: '[[1, 0x3fd18f60], [5, 0x3fd6d300]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 46
  output0_mb_r: 11
  output0_mb_c: 7
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 46
  op0_mb_r: 11
  op0_mb_c: 7
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 11
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 7
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 11
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 59
  output2_mb_r: 11
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 59
  op2_mb_r: 11
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 11
  output3_mb_c: 7
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 11
  op3_mb_c: 7
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=14
# tm_r_factor[0]=22
# effective_consumer_grid_size_r[0]=22
# effective_consumer_grid_size_c[0]=28
# effective_consumer_grid_size_r_reblock[0]=22
# effective_consumer_grid_size_c_reblock[0]=28
# reblock_tm_fork_r_factor_int[0]=22
# reblock_tm_fork_c_factor_int[0]=28
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=14
# tm_r_factor[2]=22
# effective_consumer_grid_size_r[2]=44
# effective_consumer_grid_size_c[2]=28
# effective_consumer_grid_size_r_reblock[2]=44
# effective_consumer_grid_size_c_reblock[2]=28
# reblock_tm_fork_r_factor_int[2]=44
# reblock_tm_fork_c_factor_int[2]=28
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=13
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x37dc5820]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 17}, broadcast: {c: 15}]'
  input1_tms: '[broadcast: {z: 58}, broadcast: {c: 15}]'
  input2_tms: '[broadcast: {z: 26}, broadcast: {c: 15}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3da48be0]]'
  output1_dram_buffers: '[[0, 0x3e8b2a80]]'
  output2_dram_buffers: '[[0, 0x3ed788a0], [7, 0x3eda3340], [2, 0x3edcdde0], [0, 0x3edf8880], [5, 0x3ee23320]]'
  output3_dram_buffers: '[[0, 0x3f438a60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 1
  output0_mb_c: 5
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 17
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 58
  output1_mb_r: 1
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 58
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 5
  output2_grid_size_r: 1
  output2_t: 26
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 5
  op2_grid_size_r: 1
  op2_t: 26
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=15
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=15
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=15
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=15
# tm_c_factor[1]=15
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=15
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=15
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=15
# tm_c_factor[2]=15
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=75
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=75
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=75
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 4
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 19
  input_mb_r: 5
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x3054e700], [6, 0x3109cfa0], [5, 0x31beb840], [0, 0x3273a0e0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x33dfb660]]'
  output1_dram_buffers: '[[2, 0x36d64a20]]'
  output2_dram_buffers: '[[2, 0x39c50a00]]'
  output3_dram_buffers: '[[2, 0x3cbcd6e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 19
  output0_mb_r: 20
  output0_mb_c: 5
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 5
  op0_grid_size_r: 2
  op0_t: 19
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 19
  output1_mb_r: 20
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 19
  op1_mb_r: 5
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 19
  output2_mb_r: 20
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 19
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 19
  output3_mb_r: 20
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 19
  op3_mb_r: 5
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=15
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 7
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x392ac6c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 3}, broadcast: {c: 42}]'
  input1_tms: [transpose]
  input2_tms: 
  input3_tms: '[broadcast: {z: 35}, broadcast: {c: 42}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3e9fb060]]'
  output1_dram_buffers: '[[3, 0x3edd4d60], [2, 0x3ede4280], [1, 0x3edf37a0]]'
  output2_dram_buffers: '[[3, 0x3f07a1c0], [2, 0x3f091160]]'
  output3_dram_buffers: '[[3, 0x3f92b480], [2, 0x3fc4f320]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 1
  output0_mb_c: 14
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 3
  op0_mb_r: 1
  op0_mb_c: 14
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 7
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 35
  output3_mb_r: 1
  output3_mb_c: 7
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 35
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=42
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=42
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=42
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=42
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=42
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=84
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=84
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=84
#Test id=16
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 5
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x394dd900]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 4
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 39}, broadcast: {r: 12}, broadcast: {c: 20}]'
  input1_tms: '[broadcast: {z: 16}, broadcast: {r: 12}, broadcast: {c: 20}]'
  input2_tms: '[broadcast: {z: 16}, broadcast: {r: 12}, broadcast: {c: 20}]'
  input3_tms: '[broadcast: {z: 5}, broadcast: {r: 12}, broadcast: {c: 20}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3c9cdb60], [0, 0x3d3cd180]]'
  output1_dram_buffers: '[[4, 0x3e840bc0]]'
  output2_dram_buffers: '[[4, 0x3f3b5860], [0, 0x3f513880], [5, 0x3f6718a0], [7, 0x3f7cf8c0], [5, 0x3f92d8e0], [6, 0x3fa8b900]]'
  output3_dram_buffers: '[[4, 0x3fd50de0], [0, 0x3fe99000]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 3
  output0_mb_c: 10
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 39
  op0_mb_r: 3
  op0_mb_c: 10
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 12
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 16
  op1_mb_r: 12
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 2
  output2_grid_size_r: 3
  output2_t: 16
  output2_mb_r: 2
  output2_mb_c: 10
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 3
  op2_t: 16
  op2_mb_r: 2
  op2_mb_c: 10
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 5
  op3_mb_r: 12
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=20
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=40
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=40
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=40
# tm_c_factor[1]=20
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=20
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=20
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=20
# tm_c_factor[2]=20
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=36
# effective_consumer_grid_size_c[2]=40
# effective_consumer_grid_size_r_reblock[2]=36
# effective_consumer_grid_size_c_reblock[2]=40
# reblock_tm_fork_r_factor_int[2]=36
# reblock_tm_fork_c_factor_int[2]=40
# tm_c_factor[3]=20
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=40
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=40
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=40
#Test id=17
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x356e3aa0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 21}, broadcast: {r: 72}]'
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: '[broadcast: {z: 43}, broadcast: {r: 72}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x38092cc0], [2, 0x382303e0]]'
  output1_dram_buffers: '[[3, 0x3a817b00], [2, 0x3a81e420], [3, 0x3a824d40], [1, 0x3a82b660], [1, 0x3a831f80], [7, 0x3a8388a0]]'
  output2_dram_buffers: '[[3, 0x3dc976e0], [2, 0x3dca4900], [3, 0x3dcb1b20]]'
  output3_dram_buffers: '[[3, 0x3e575120]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 21
  output0_mb_r: 9
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 21
  op0_mb_r: 9
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 1
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 1
  output2_mb_r: 3
  output2_mb_c: 1
  output2_ub_r: 8
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 1
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 43
  output3_mb_r: 9
  output3_mb_c: 1
  output3_ub_r: 8
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 43
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=72
# effective_consumer_grid_size_r[0]=144
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=144
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=144
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=72
# effective_consumer_grid_size_r[3]=72
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=72
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=72
# reblock_tm_fork_c_factor_int[3]=1
#Test id=18
- device: GRAYSKULL
  entries: 20
  op0_loc_c: 4
  op0_loc_r: 6
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 7
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[2, 0x315e09e0], [5, 0x31a35380], [0, 0x31e89d20], [5, 0x322de6c0], [5, 0x32733060], [1, 0x32b87a00], [3, 0x32fdc3a0], [0, 0x33430d40], [3, 0x338856e0], [7, 0x33cda080]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 5
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 55]'
  input1_tms: [transpose]
  input2_tms: '[vslice: 55]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x36ccc580]]'
  output1_dram_buffers: '[[2, 0x3ccc9200]]'
  output2_dram_buffers: '[[2, 0x3cd9eea0]]'
  output3_dram_buffers: '[[2, 0x3f987a60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 55
  output0_mb_r: 5
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 55
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 5
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 55
  output2_mb_r: 5
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 55
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 5
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=55
# effective_consumer_grid_size_r[0]=55
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=55
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=11
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=55
# effective_consumer_grid_size_r[2]=55
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=55
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=11
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 1
  op0_loc_r: 6
  op1_loc_c: 3
  op1_loc_r: 4
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x30448540]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 27}, broadcast: {c: 30}]'
  input1_tms: 
  input2_tms: '[broadcast: {z: 22}, broadcast: {c: 30}]'
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x30503bc0]]'
  output1_dram_buffers: '[[2, 0x30b61040]]'
  output2_dram_buffers: '[[2, 0x380fad40]]'
  output3_dram_buffers: '[[2, 0x3cb58760]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 27
  output0_mb_r: 1
  output0_mb_c: 30
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 27
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 30
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 22
  output2_mb_r: 1
  output2_mb_c: 30
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 22
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 30
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 5
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=30
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=60
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=60
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=60
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=30
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=60
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=60
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=60
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=5
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=5
#Test id=20
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x393563a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 55}, broadcast: {r: 84}, broadcast: {c: 2}]'
  input1_tms: 
  input2_tms: '[broadcast: {z: 62}, broadcast: {r: 84}, broadcast: {c: 2}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x39ca9dc0], [0, 0x3a6886e0], [2, 0x3b067000], [6, 0x3ba45920]]'
  output1_dram_buffers: '[[2, 0x3c5dfc20], [0, 0x3c63ba40]]'
  output2_dram_buffers: '[[2, 0x3c9b5080], [0, 0x3d4d52a0], [2, 0x3dff54c0], [6, 0x3eb156e0]]'
  output3_dram_buffers: '[[2, 0x3facc5e0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 55
  output0_mb_r: 7
  output0_mb_c: 1
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 55
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 14
  output1_mb_c: 1
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 14
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 62
  output2_mb_r: 7
  output2_mb_c: 1
  output2_ub_r: 3
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 62
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 12
  op3_mb_c: 2
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=2
# tm_r_factor[0]=84
# effective_consumer_grid_size_r[0]=168
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=168
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=168
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=84
# effective_consumer_grid_size_r[2]=336
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=336
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=336
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=21
- device: GRAYSKULL
  entries: 64
  op0_loc_c: 4
  op0_loc_r: 7
  op1_loc_c: 8
  op1_loc_r: 6
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x31187820]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 27}, broadcast: {c: 48}]'
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: '[broadcast: {z: 3}, broadcast: {c: 48}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x31806b00]]'
  output1_dram_buffers: '[[5, 0x3da0eee0]]'
  output2_dram_buffers: '[[5, 0x3e523fc0]]'
  output3_dram_buffers: '[[5, 0x3ed930e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 27
  output0_mb_r: 1
  output0_mb_c: 48
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 27
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 48
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 16
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 48
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 1
  output3_mb_c: 48
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 3
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 128
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=48
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=192
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=192
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=192
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=48
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=96
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=96
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=96
#Test id=22
- device: GRAYSKULL
  entries: 28
  op0_loc_c: 1
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 7
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x31781020]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 39}, broadcast: {r: 48}, broadcast: {c: 2}]'
  input1_tms: [transpose]
  input2_tms: '[broadcast: {z: 2}, broadcast: {r: 48}, broadcast: {c: 2}]'
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x31792ae0]]'
  output1_dram_buffers: '[[3, 0x3e78d340]]'
  output2_dram_buffers: '[[3, 0x3ece2580]]'
  output3_dram_buffers: '[[3, 0x3f791040]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 48
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 39
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 48
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 8
  op1_mb_c: 2
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 48
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 48
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=2
# tm_r_factor[0]=48
# effective_consumer_grid_size_r[0]=96
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=96
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=96
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=48
# effective_consumer_grid_size_r[2]=96
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=96
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=96
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=23
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 6
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x35902f00]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 8}, broadcast: {r: 42}, broadcast: {c: 4}]'
  input1_tms: '[  broadcast: {r: 42}, broadcast: {c: 4}]'
  input2_tms: '[broadcast: {z: 45}, broadcast: {r: 42}, broadcast: {c: 4}]'
  input3_tms: '[broadcast: {z: 19}, broadcast: {r: 42}, broadcast: {c: 4}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x36c58820], [7, 0x37216840]]'
  output1_dram_buffers: '[[0, 0x37b50400], [7, 0x37bac220], [0, 0x37c08040], [7, 0x37c63e60]]'
  output2_dram_buffers: '[[0, 0x39c82200]]'
  output3_dram_buffers: '[[0, 0x3df07900], [7, 0x3e81f120], [0, 0x3f136940]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 7
  output0_mb_c: 2
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 8
  op0_mb_r: 7
  op0_mb_c: 2
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 3
  output1_mb_c: 2
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 2
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 45
  output2_mb_r: 6
  output2_mb_c: 4
  output2_ub_r: 7
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 45
  op2_mb_r: 6
  op2_mb_c: 4
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 3
  output3_t: 19
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 19
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=4
# tm_r_factor[0]=42
# effective_consumer_grid_size_r[0]=42
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=42
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=42
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=4
# tm_r_factor[1]=42
# effective_consumer_grid_size_r[1]=84
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=84
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=84
# reblock_tm_fork_c_factor_int[1]=8
# tm_c_factor[2]=4
# tm_r_factor[2]=42
# effective_consumer_grid_size_r[2]=42
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=42
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=42
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=4
# tm_r_factor[3]=42
# effective_consumer_grid_size_r[3]=126
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=126
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=126
# reblock_tm_fork_c_factor_int[3]=4
#Test id=24
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 8
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x3a840660]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 44}, broadcast: {r: 3}, broadcast: {c: 14}]'
  input1_tms: '[broadcast: {z: 6}, broadcast: {r: 3}, broadcast: {c: 14}]'
  input2_tms: '[broadcast: {z: 45}, broadcast: {r: 3}, broadcast: {c: 14}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3f3175c0], [1, 0x3f4683e0], [4, 0x3f5b9200]]'
  output1_dram_buffers: '[[5, 0x3f80cea0]]'
  output2_dram_buffers: '[[5, 0x3fba3940], [1, 0x3fda8620]]'
  output3_dram_buffers: '[[5, 0x3ffdaa60], [1, 0x3ffe6240]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 44
  output0_mb_r: 1
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 44
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 1
  output1_mb_c: 7
  output1_ub_r: 3
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 6
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 3
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 45
  output2_mb_r: 3
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 45
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 7
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=14
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=14
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=14
# reblock_tm_fork_r_factor_int[0]=9
# reblock_tm_fork_c_factor_int[0]=14
# tm_c_factor[1]=14
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=14
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=14
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=14
# tm_c_factor[2]=14
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=28
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=28
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=28
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=25
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 9
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x34edeba0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 45}, broadcast: {r: 18}, broadcast: {c: 6}]'
  input1_tms: 
  input2_tms: '[broadcast: {z: 33}, broadcast: {r: 18}, broadcast: {c: 6}]'
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x35910a40]]'
  output1_dram_buffers: '[[3, 0x3abfb840]]'
  output2_dram_buffers: '[[3, 0x3c29a4e0]]'
  output3_dram_buffers: '[[3, 0x3fc0d000]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 45
  output0_mb_r: 18
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 45
  op0_mb_r: 2
  op0_mb_c: 6
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 18
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 9
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 33
  output2_mb_r: 18
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 33
  op2_mb_r: 9
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 18
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=6
# tm_r_factor[0]=18
# effective_consumer_grid_size_r[0]=54
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=54
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=54
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=6
# tm_r_factor[2]=18
# effective_consumer_grid_size_r[2]=36
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=36
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=36
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=26
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x30684b20]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 23}, broadcast: {r: 48}]'
  input1_tms: '[broadcast: {z: 19}, broadcast: {r: 48}]'
  input2_tms: [transpose]
  input3_tms: '[broadcast: {z: 7}, broadcast: {r: 48}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x306fb240]]'
  output1_dram_buffers: '[[4, 0x37032d00]]'
  output2_dram_buffers: '[[4, 0x3cf30480]]'
  output3_dram_buffers: '[[4, 0x3d5a32a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 23
  output0_mb_r: 48
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 23
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 19
  output1_mb_r: 48
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 19
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 48
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 7
  output3_mb_r: 48
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 7
  op3_mb_r: 16
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=48
# effective_consumer_grid_size_r[0]=48
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=48
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=48
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=48
# effective_consumer_grid_size_r[1]=48
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=48
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=48
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=1
# tm_r_factor[3]=48
# effective_consumer_grid_size_r[3]=48
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=48
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=48
# reblock_tm_fork_c_factor_int[3]=1
#Test id=27
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 7
  op0_loc_r: 5
  op1_loc_c: 8
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x3ac2dea0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 6
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 43}, broadcast: {c: 80}]'
  input1_tms: '[broadcast: {z: 12}, broadcast: {c: 80}]'
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3c908ca0]]'
  output1_dram_buffers: '[[3, 0x3eb17680], [2, 0x3ef316a0]]'
  output2_dram_buffers: '[[3, 0x3f6d7b60]]'
  output3_dram_buffers: '[[3, 0x3fc048e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 43
  output0_mb_r: 1
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 43
  op0_mb_r: 1
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 12
  output1_mb_r: 1
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 12
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 5
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 16
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=80
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=80
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=80
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=80
# tm_c_factor[1]=80
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=160
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=160
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=160
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=28
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 4
  op2_loc_c: 4
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 7
  input_mb_c: 1
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x35440100]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: [transpose]
  input1_tms: '[vslice: 49]'
  input2_tms: 
  input3_tms: '[vslice: 49]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x358cc5e0]]'
  output1_dram_buffers: '[[7, 0x35b8a480]]'
  output2_dram_buffers: '[[7, 0x3ab38360]]'
  output3_dram_buffers: '[[7, 0x3b24b1c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 49
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 49
  output1_mb_r: 1
  output1_mb_c: 49
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 49
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 49
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 7
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 49
  output3_mb_r: 1
  output3_mb_c: 49
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 49
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=49
# effective_consumer_grid_size_r[1]=49
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=49
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=49
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=7
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=7
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=7
# tm_c_factor[3]=1
# tm_r_factor[3]=49
# effective_consumer_grid_size_r[3]=49
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=49
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=49
# reblock_tm_fork_c_factor_int[3]=1
#Test id=29
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3873aea0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 40}, broadcast: {c: 42}]'
  input1_tms: [transpose]
  input2_tms: '[broadcast: {z: 12}, broadcast: {c: 42}]'
  input3_tms: '[broadcast: {z: 15}, broadcast: {c: 42}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x38a975e0], [4, 0x38c62c00]]'
  output1_dram_buffers: '[[3, 0x38f46a80], [4, 0x38f4a7e0], [3, 0x38f4e540], [7, 0x38f522a0], [2, 0x38f56000], [4, 0x38f59d60]]'
  output2_dram_buffers: '[[3, 0x39cbe3c0]]'
  output3_dram_buffers: '[[3, 0x3eb26120]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 40
  output0_mb_r: 1
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 40
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 6
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 7
  op1_grid_size_c: 6
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 12
  output2_mb_r: 1
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 12
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 15
  output3_mb_r: 1
  output3_mb_c: 14
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 15
  op3_mb_r: 1
  op3_mb_c: 14
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=42
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=84
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=84
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=84
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=42
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=42
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=42
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=42
# tm_c_factor[3]=42
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=42
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=42
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=42
#Test id=30
- device: GRAYSKULL
  entries: 14
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 7
  op2_loc_r: 3
  op3_loc_c: 9
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x36cf4fc0]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 7
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 50}, broadcast: {c: 72}]'
  input1_tms: [transpose]
  input2_tms: 
  input3_tms: '[broadcast: {z: 8}, broadcast: {c: 72}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x375577a0]]'
  output1_dram_buffers: '[[2, 0x3d95dcc0]]'
  output2_dram_buffers: '[[2, 0x3dc1b260]]'
  output3_dram_buffers: '[[2, 0x3ee1b660]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 50
  output0_mb_r: 1
  output0_mb_c: 72
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 50
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 72
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 72
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 1
  output3_mb_c: 72
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 8
  op3_mb_r: 1
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 28
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=72
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=72
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=72
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=72
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=72
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=216
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=216
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=216
#Test id=31
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 1
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[7, 0x38efce40], [6, 0x38f1b860], [6, 0x38f3a280], [5, 0x38f58ca0], [0, 0x38f776c0], [2, 0x38f960e0], [5, 0x38fb4b00], [2, 0x38fd3520], [7, 0x38ff1f40], [2, 0x39010960], [2, 0x3902f380], [0, 0x3904dda0], [3, 0x3906c7c0], [6, 0x3908b1e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 7
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 7]'
  input1_tms: 
  input2_tms: [transpose]
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3c529240], [6, 0x3c5ff860]]'
  output1_dram_buffers: '[[7, 0x3fd2eb80], [6, 0x3fd377a0], [6, 0x3fd403c0], [5, 0x3fd48fe0], [0, 0x3fd51c00], [2, 0x3fd5a820], [5, 0x3fd63440]]'
  output2_dram_buffers: '[[7, 0x3fdcb120], [6, 0x3fde9b40]]'
  output3_dram_buffers: '[[7, 0x3fee0de0], [6, 0x3feff800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 7
  output0_mb_r: 14
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 7
  op0_mb_r: 14
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 1
  output1_mb_r: 2
  output1_mb_c: 2
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 1
  op1_mb_r: 2
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 14
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 14
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 14
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=7
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=7
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=7
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=5
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=32
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 6
  op0_loc_r: 3
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x35ead7a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 41}, broadcast: {r: 12}, broadcast: {c: 15}]'
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: '[broadcast: {z: 38}, broadcast: {r: 12}, broadcast: {c: 15}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x371cec40], [0, 0x37710160], [3, 0x37c51680]]'
  output1_dram_buffers: '[[3, 0x394eeae0], [0, 0x395074c0], [3, 0x3951fea0], [7, 0x39538880]]'
  output2_dram_buffers: '[[3, 0x3a0138c0]]'
  output3_dram_buffers: '[[3, 0x3b10a5e0], [0, 0x3b4b1880], [3, 0x3b858b20], [7, 0x3bbffdc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 41
  output0_mb_r: 2
  output0_mb_c: 5
  output0_ub_r: 2
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 41
  op0_mb_r: 2
  op0_mb_c: 5
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 1
  output1_mb_r: 3
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 15
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 15
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 38
  output3_mb_r: 3
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 38
  op3_mb_r: 3
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=15
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=36
# effective_consumer_grid_size_c[0]=15
# effective_consumer_grid_size_r_reblock[0]=36
# effective_consumer_grid_size_c_reblock[0]=15
# reblock_tm_fork_r_factor_int[0]=36
# reblock_tm_fork_c_factor_int[0]=15
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=15
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=48
# effective_consumer_grid_size_c[3]=15
# effective_consumer_grid_size_r_reblock[3]=48
# effective_consumer_grid_size_c_reblock[3]=15
# reblock_tm_fork_r_factor_int[3]=48
# reblock_tm_fork_c_factor_int[3]=15
#Test id=33
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 9
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x341b7780]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 34}, broadcast: {r: 8}, broadcast: {c: 42}]'
  input1_tms: [transpose]
  input2_tms: 
  input3_tms: '[broadcast: {z: 22}, broadcast: {r: 8}, broadcast: {c: 42}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3420e420], [4, 0x34e42040], [7, 0x35a75c60], [5, 0x366a9880]]'
  output1_dram_buffers: '[[3, 0x380ce300], [4, 0x38148b20], [7, 0x381c3340]]'
  output2_dram_buffers: '[[3, 0x3914f3c0], [4, 0x39206fe0]]'
  output3_dram_buffers: '[[3, 0x3b125a40], [4, 0x3c0f0260]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 34
  output0_mb_r: 4
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 7
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 34
  op0_mb_r: 4
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 14
  output1_ub_r: 8
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 14
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 7
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 22
  output3_mb_r: 4
  output3_mb_c: 7
  output3_ub_r: 2
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 22
  op3_mb_r: 4
  op3_mb_c: 7
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=42
# tm_r_factor[0]=8
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=84
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=84
# reblock_tm_fork_r_factor_int[0]=16
# reblock_tm_fork_c_factor_int[0]=84
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=42
# tm_r_factor[3]=8
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=84
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=84
# reblock_tm_fork_r_factor_int[3]=8
# reblock_tm_fork_c_factor_int[3]=84
#Test id=34
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x3322fb20]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 25}, broadcast: {r: 84}, broadcast: {c: 2}]'
  input1_tms: [transpose]
  input2_tms: [transpose]
  input3_tms: '[broadcast: {z: 12}, broadcast: {r: 84}, broadcast: {c: 2}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3cbd07a0], [4, 0x3d04cec0], [7, 0x3d4c95e0], [4, 0x3d945d00]]'
  output1_dram_buffers: '[[4, 0x3e113320]]'
  output2_dram_buffers: '[[4, 0x3f183340], [4, 0x3f1df160]]'
  output3_dram_buffers: '[[4, 0x3f643fe0], [4, 0x3f86b400], [7, 0x3fa92820], [4, 0x3fcb9c40]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 25
  output0_mb_r: 7
  output0_mb_c: 1
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 25
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 14
  output1_mb_c: 2
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 14
  op1_mb_c: 2
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 14
  output2_mb_c: 1
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 12
  output3_mb_r: 6
  output3_mb_c: 1
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 12
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=2
# tm_r_factor[0]=84
# effective_consumer_grid_size_r[0]=168
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=168
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=168
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=84
# effective_consumer_grid_size_r[3]=168
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=168
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=168
# reblock_tm_fork_c_factor_int[3]=4
#Test id=35
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x3026d9a0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 9}, broadcast: {r: 2}, broadcast: {c: 84}]'
  input1_tms: '[broadcast: {z: 50}, broadcast: {r: 2}, broadcast: {c: 84}]'
  input2_tms: '[broadcast: {z: 28}, broadcast: {r: 2}, broadcast: {c: 84}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x30290da0], [6, 0x30b2ddc0], [1, 0x313cade0]]'
  output1_dram_buffers: '[[6, 0x31c94280]]'
  output2_dram_buffers: '[[6, 0x3ac63cc0], [6, 0x3d495ce0]]'
  output3_dram_buffers: '[[6, 0x3fd1f0c0], [6, 0x3fe8e8e0]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 1
  output0_mb_c: 14
  output0_ub_r: 2
  output0_ub_c: 2
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 9
  op0_mb_r: 1
  op0_mb_c: 14
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 50
  output1_mb_r: 2
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 7
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 50
  op1_mb_r: 2
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 2
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 28
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 14
  output3_ub_r: 2
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 14
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=84
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=252
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=252
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=252
# tm_c_factor[1]=84
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=84
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=84
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=84
# tm_c_factor[2]=84
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=168
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=168
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=168
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=36
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 6
  op0_loc_r: 6
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 8
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x3353a8c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 21}, broadcast: {r: 12}]'
  input1_tms: '[broadcast: {z: 64}, broadcast: {r: 12}]'
  input2_tms: '[broadcast: {z: 39}, broadcast: {r: 12}]'
  input3_tms: '[broadcast: {z: 15}, broadcast: {r: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x349b02a0]]'
  output1_dram_buffers: '[[6, 0x366ed0a0]]'
  output2_dram_buffers: '[[6, 0x3742ad20]]'
  output3_dram_buffers: '[[6, 0x3e303140]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 21
  output0_mb_r: 12
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 21
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 64
  output1_mb_r: 2
  output1_mb_c: 1
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 64
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 39
  output2_mb_r: 4
  output2_mb_c: 1
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 39
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 15
  output3_mb_r: 6
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 15
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=1
#Test id=37
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 5
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 9
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x3005e2c0]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 21}, broadcast: {r: 14}, broadcast: {c: 10}]'
  input1_tms: '[  broadcast: {r: 14}, broadcast: {c: 10}]'
  input2_tms: 
  input3_tms: '[broadcast: {z: 5}, broadcast: {r: 14}, broadcast: {c: 10}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x30092880]]'
  output1_dram_buffers: '[[5, 0x3bb43860]]'
  output2_dram_buffers: '[[5, 0x3c442760]]'
  output3_dram_buffers: '[[5, 0x3ce77ac0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 21
  output0_mb_r: 14
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 21
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 14
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 14
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 5
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 14
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 5
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=10
# tm_r_factor[0]=14
# effective_consumer_grid_size_r[0]=28
# effective_consumer_grid_size_c[0]=20
# effective_consumer_grid_size_r_reblock[0]=28
# effective_consumer_grid_size_c_reblock[0]=20
# reblock_tm_fork_r_factor_int[0]=28
# reblock_tm_fork_c_factor_int[0]=20
# tm_c_factor[1]=10
# tm_r_factor[1]=14
# effective_consumer_grid_size_r[1]=28
# effective_consumer_grid_size_c[1]=20
# effective_consumer_grid_size_r_reblock[1]=28
# effective_consumer_grid_size_c_reblock[1]=20
# reblock_tm_fork_r_factor_int[1]=28
# reblock_tm_fork_c_factor_int[1]=20
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=10
# tm_r_factor[3]=14
# effective_consumer_grid_size_r[3]=28
# effective_consumer_grid_size_c[3]=10
# effective_consumer_grid_size_r_reblock[3]=28
# effective_consumer_grid_size_c_reblock[3]=10
# reblock_tm_fork_r_factor_int[3]=28
# reblock_tm_fork_c_factor_int[3]=10
#Test id=38
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 2
  op1_loc_r: 7
  op2_loc_c: 4
  op2_loc_r: 4
  op3_loc_c: 8
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x307d8d40]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 21}, broadcast: {r: 4}, broadcast: {c: 32}]'
  input1_tms: [transpose]
  input2_tms: '[broadcast: {z: 27}, broadcast: {r: 4}, broadcast: {c: 32}]'
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x35213c80]]'
  output1_dram_buffers: '[[7, 0x37650080]]'
  output2_dram_buffers: '[[7, 0x38665fe0]]'
  output3_dram_buffers: '[[7, 0x3a330ae0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 21
  output0_mb_r: 4
  output0_mb_c: 32
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 21
  op0_mb_r: 4
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 32
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 27
  output2_mb_r: 4
  output2_mb_c: 32
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 27
  op2_mb_r: 2
  op2_mb_c: 8
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 4
  output3_mb_c: 32
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 8
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=32
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=32
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=32
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=32
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=32
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=128
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=128
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=128
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=39
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 7
  op1_loc_c: 5
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 8
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x3a2d0ba0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 55}, broadcast: {c: 112}]'
  input1_tms: [transpose]
  input2_tms: '[  broadcast: {c: 112}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3a7ed9a0], [7, 0x3b5165c0], [3, 0x3c23f1e0], [3, 0x3cf67e00]]'
  output1_dram_buffers: '[[0, 0x3e47eca0]]'
  output2_dram_buffers: '[[0, 0x3f3bed80], [7, 0x3f4395a0]]'
  output3_dram_buffers: '[[0, 0x3fc74520], [7, 0x3fcb1940], [3, 0x3fceed60], [3, 0x3fd2c180]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 1
  output0_t: 55
  output0_mb_r: 1
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 55
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 14
  output1_ub_r: 1
  output1_ub_c: 8
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 14
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 14
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 14
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 4
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 14
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 14
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=112
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=448
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=448
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=448
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=112
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=224
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=224
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=224
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=40
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 7
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x36aa07e0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 6
  feeder_loc_r: 7
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 30}, broadcast: {r: 7}, broadcast: {c: 26}]'
  input1_tms: [transpose]
  input2_tms: 
  input3_tms: '[broadcast: {z: 21}, broadcast: {r: 7}, broadcast: {c: 26}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x36e530c0], [5, 0x385a6ee0]]'
  output1_dram_buffers: '[[6, 0x39deb0e0], [5, 0x39e23f00], [7, 0x39e5cd20], [2, 0x39e95b40], [1, 0x39ece960], [1, 0x39f07780], [5, 0x39f405a0]]'
  output2_dram_buffers: '[[6, 0x3ba1ea00]]'
  output3_dram_buffers: '[[6, 0x3c51e580]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 7
  output0_mb_c: 13
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 30
  op0_mb_r: 7
  op0_mb_c: 13
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 13
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 13
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 7
  output2_mb_c: 13
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 7
  op2_mb_c: 13
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 21
  output3_mb_r: 7
  output3_mb_c: 13
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 21
  op3_mb_r: 7
  op3_mb_c: 13
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=26
# tm_r_factor[0]=7
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=52
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=52
# reblock_tm_fork_r_factor_int[0]=7
# reblock_tm_fork_c_factor_int[0]=52
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=7
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=7
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=26
# tm_r_factor[3]=7
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=26
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=26
# reblock_tm_fork_r_factor_int[3]=7
# reblock_tm_fork_c_factor_int[3]=26
#Test id=41
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 7
  op1_loc_r: 7
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3443a600]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 36}, broadcast: {r: 14}, broadcast: {c: 15}]'
  input1_tms: '[broadcast: {z: 3}, broadcast: {r: 14}, broadcast: {c: 15}]'
  input2_tms: '[broadcast: {z: 63}, broadcast: {r: 14}, broadcast: {c: 15}]'
  input3_tms: '[broadcast: {z: 2}, broadcast: {r: 14}, broadcast: {c: 15}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3443cca0], [6, 0x34f010c0], [6, 0x359c54e0], [6, 0x36489900], [6, 0x36f4dd20], [1, 0x37a12140]]'
  output1_dram_buffers: '[[3, 0x384ee060]]'
  output2_dram_buffers: '[[3, 0x38a651a0], [6, 0x3b013fc0], [6, 0x3d5c2de0]]'
  output3_dram_buffers: '[[3, 0x3fc0e980]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 2
  output0_t: 36
  output0_mb_r: 7
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 5
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 36
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 14
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 3
  op1_mb_r: 14
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 3
  output2_grid_size_r: 1
  output2_t: 63
  output2_mb_r: 7
  output2_mb_c: 5
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 63
  op2_mb_r: 7
  op2_mb_c: 5
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 14
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 14
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=15
# tm_r_factor[0]=14
# effective_consumer_grid_size_r[0]=28
# effective_consumer_grid_size_c[0]=45
# effective_consumer_grid_size_r_reblock[0]=28
# effective_consumer_grid_size_c_reblock[0]=45
# reblock_tm_fork_r_factor_int[0]=28
# reblock_tm_fork_c_factor_int[0]=45
# tm_c_factor[1]=15
# tm_r_factor[1]=14
# effective_consumer_grid_size_r[1]=14
# effective_consumer_grid_size_c[1]=15
# effective_consumer_grid_size_r_reblock[1]=14
# effective_consumer_grid_size_c_reblock[1]=15
# reblock_tm_fork_r_factor_int[1]=14
# reblock_tm_fork_c_factor_int[1]=15
# tm_c_factor[2]=15
# tm_r_factor[2]=14
# effective_consumer_grid_size_r[2]=14
# effective_consumer_grid_size_c[2]=45
# effective_consumer_grid_size_r_reblock[2]=14
# effective_consumer_grid_size_c_reblock[2]=45
# reblock_tm_fork_r_factor_int[2]=14
# reblock_tm_fork_c_factor_int[2]=45
# tm_c_factor[3]=15
# tm_r_factor[3]=14
# effective_consumer_grid_size_r[3]=14
# effective_consumer_grid_size_c[3]=15
# effective_consumer_grid_size_r_reblock[3]=14
# effective_consumer_grid_size_c_reblock[3]=15
# reblock_tm_fork_r_factor_int[3]=14
# reblock_tm_fork_c_factor_int[3]=15
#Test id=42
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 7
  op2_loc_c: 7
  op2_loc_r: 6
  op3_loc_c: 9
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x314b1260]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 7}, broadcast: {c: 98}]'
  input1_tms: '[broadcast: {z: 22}, broadcast: {c: 98}]'
  input2_tms: '[broadcast: {z: 6}, broadcast: {c: 98}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x314d29a0]]'
  output1_dram_buffers: '[[2, 0x34066940]]'
  output2_dram_buffers: '[[2, 0x3cdcb680]]'
  output3_dram_buffers: '[[2, 0x3f6c1200]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 7
  output0_mb_r: 1
  output0_mb_c: 98
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 7
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 22
  output1_mb_r: 1
  output1_mb_c: 98
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 22
  op1_mb_r: 1
  op1_mb_c: 14
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 6
  output2_mb_r: 1
  output2_mb_c: 98
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 6
  op2_mb_r: 1
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 98
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=98
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=196
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=196
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=196
# tm_c_factor[1]=98
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=98
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=98
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=98
# tm_c_factor[2]=98
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=196
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=196
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=196
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=43
- device: GRAYSKULL
  entries: 56
  op0_loc_c: 6
  op0_loc_r: 5
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 10
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x39321a00], [2, 0x39793220], [5, 0x39c04a40], [5, 0x3a076260], [1, 0x3a4e7a80]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 5]'
  input1_tms: [transpose]
  input2_tms: '[hslice: 5]'
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3c8762c0]]'
  output1_dram_buffers: '[[1, 0x3dfe9f80]]'
  output2_dram_buffers: '[[1, 0x3e4d3a60]]'
  output3_dram_buffers: '[[1, 0x3fb4c5e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 4
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 5
  op0_mb_r: 2
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 2
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 4
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 5
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 4
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 112
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=5
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=10
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=10
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=5
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=10
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=10
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=44
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 6
  op0_loc_r: 7
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[6, 0x32e73ea0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 56}, broadcast: {r: 16}, broadcast: {c: 3}]'
  input1_tms: 
  input2_tms: '[broadcast: {z: 5}, broadcast: {r: 16}, broadcast: {c: 3}]'
  input3_tms: '[broadcast: {z: 2}, broadcast: {r: 16}, broadcast: {c: 3}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x33034500]]'
  output1_dram_buffers: '[[6, 0x3b01b680]]'
  output2_dram_buffers: '[[6, 0x3b882d20]]'
  output3_dram_buffers: '[[6, 0x3d3a7280]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 56
  output0_mb_r: 16
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 56
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 16
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 16
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 5
  op2_mb_r: 4
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 16
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 16
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=3
# tm_r_factor[0]=16
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=9
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=9
# reblock_tm_fork_r_factor_int[0]=16
# reblock_tm_fork_c_factor_int[0]=9
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=3
# tm_r_factor[2]=16
# effective_consumer_grid_size_r[2]=64
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=64
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=64
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=3
# tm_r_factor[3]=16
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=16
# reblock_tm_fork_c_factor_int[3]=3
#Test id=45
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 7
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x30614980]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 6
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 32}, broadcast: {r: 60}, broadcast: {c: 2}]'
  input1_tms: [transpose]
  input2_tms: '[broadcast: {z: 9}, broadcast: {r: 60}, broadcast: {c: 2}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x308d5ae0]]'
  output1_dram_buffers: '[[7, 0x3c05c8a0]]'
  output2_dram_buffers: '[[7, 0x3c654460]]'
  output3_dram_buffers: '[[7, 0x3f9d72c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 60
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 32
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 60
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 15
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 60
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 9
  op2_mb_r: 15
  op2_mb_c: 2
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 60
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 10
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=2
# tm_r_factor[0]=60
# effective_consumer_grid_size_r[0]=120
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=120
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=120
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=2
# tm_r_factor[2]=60
# effective_consumer_grid_size_r[2]=60
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=60
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=60
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=46
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 8
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x373e33c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 17}, broadcast: {r: 52}]'
  input1_tms: 
  input2_tms: '[broadcast: {z: 46}, broadcast: {r: 52}]'
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3a75b9a0]]'
  output1_dram_buffers: '[[4, 0x3b7e6ae0]]'
  output2_dram_buffers: '[[4, 0x3c8fa8a0], [2, 0x3d332cc0], [2, 0x3dd6b0e0], [6, 0x3e7a3500]]'
  output3_dram_buffers: '[[4, 0x3f505ce0], [2, 0x3f53eb00], [2, 0x3f577920], [6, 0x3f5b0740]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 13
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 17
  op0_mb_r: 13
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 13
  output1_mb_c: 1
  output1_ub_r: 4
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 13
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 46
  output2_mb_r: 13
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 46
  op2_mb_r: 13
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 13
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 13
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=52
# effective_consumer_grid_size_r[0]=52
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=52
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=52
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=52
# effective_consumer_grid_size_r[2]=208
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=208
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=208
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=47
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 6
  op1_loc_r: 6
  op2_loc_c: 7
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x350b1e60]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 60}, broadcast: {r: 2}, broadcast: {c: 84}]'
  input1_tms: 
  input2_tms: '[broadcast: {z: 2}, broadcast: {r: 2}, broadcast: {c: 84}]'
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x37838a00], [0, 0x3a349a20]]'
  output1_dram_buffers: '[[3, 0x3cfe3980]]'
  output2_dram_buffers: '[[3, 0x3d6dfd00], [0, 0x3d7d4d20], [5, 0x3d8c9d40]]'
  output3_dram_buffers: '[[3, 0x3ec49340], [0, 0x3ed00f60]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 60
  output0_mb_r: 2
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 60
  op0_mb_r: 2
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 2
  output1_mb_c: 14
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 2
  op1_mb_c: 14
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 3
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 14
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 14
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=84
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=168
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=168
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=168
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=84
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=252
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=252
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=252
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=48
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 8
  op3_loc_r: 2
  input_t: 15
  input_mb_r: 8
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x31295c20], [0, 0x31e02c40], [2, 0x3296fc60], [0, 0x334dcc80]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: [transpose]
  input2_tms: 
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x34ea7080]]'
  output1_dram_buffers: '[[5, 0x38322aa0]]'
  output2_dram_buffers: '[[5, 0x3a0e28e0]]'
  output3_dram_buffers: '[[5, 0x3dc93b40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 48
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 30
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 15
  output1_mb_r: 48
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 15
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 15
  output2_mb_r: 48
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 8
  op2_t: 15
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 15
  output3_mb_r: 48
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 15
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=49
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x38fd3cc0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 39}, broadcast: {c: 24}]'
  input1_tms: '[broadcast: {z: 29}, broadcast: {c: 24}]'
  input2_tms: 
  input3_tms: [transpose]
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3f5edec0]]'
  output1_dram_buffers: '[[3, 0x3fb4f0e0], [3, 0x3fc4cd00], [1, 0x3fd4a920]]'
  output2_dram_buffers: '[[3, 0x3fe4a380]]'
  output3_dram_buffers: '[[3, 0x3ff21c60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 1
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 39
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 29
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 29
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=24
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=24
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=72
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=72
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=72
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
