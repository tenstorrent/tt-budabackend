#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x37fc17a0]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 45}]'
  input1_tms: '[broadcast: {z: 30}]'
  input2_tms: '[broadcast: {z: 5}]'
  input3_tms: '[broadcast: {z: 48}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x39d4c9c0]]'
  output1_dram_buffers: '[[4, 0x3e315840]]'
  output2_dram_buffers: '[[4, 0x3f2565c0]]'
  output3_dram_buffers: '[[4, 0x3f4f00a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 45
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 45
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 30
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 30
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 5
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 48
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 7
  op0_loc_r: 4
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x30ff87e0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 4
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 30}, broadcast: {r: 32}]'
  input1_tms: '[broadcast: {z: 35}, broadcast: {r: 32}]'
  input2_tms: '[broadcast: {z: 7}, broadcast: {r: 32}]'
  input3_tms: '[broadcast: {z: 18}, broadcast: {r: 32}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x31011580]]'
  output1_dram_buffers: '[[4, 0x35c476c0]]'
  output2_dram_buffers: '[[4, 0x3b565180]]'
  output3_dram_buffers: '[[4, 0x3cf53e20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 32
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 30
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 35
  output1_mb_r: 32
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 35
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 32
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 7
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 32
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 18
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=32
# effective_consumer_grid_size_r[0]=32
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=32
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=32
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=32
# effective_consumer_grid_size_r[1]=32
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=32
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=32
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=32
# effective_consumer_grid_size_r[2]=128
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=128
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=128
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=32
# effective_consumer_grid_size_r[3]=32
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=32
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=32
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 2
  op1_loc_c: 8
  op1_loc_r: 2
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x37c585c0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 6
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 43}]'
  input1_tms: '[broadcast: {z: 35}]'
  input2_tms: '[broadcast: {z: 9}]'
  input3_tms: '[broadcast: {z: 38}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x392c5500]]'
  output1_dram_buffers: '[[1, 0x3e31ea60]]'
  output2_dram_buffers: '[[1, 0x3f0ded40]]'
  output3_dram_buffers: '[[1, 0x3f5ccf20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 43
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 43
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 35
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 35
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 9
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 38
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 38
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 5
  op1_loc_c: 8
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x307ed520]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 18}, broadcast: {r: 12}, broadcast: {c: 30}]'
  input1_tms: '[broadcast: {z: 23}, broadcast: {r: 12}, broadcast: {c: 30}]'
  input2_tms: '[broadcast: {z: 60}, broadcast: {r: 12}, broadcast: {c: 30}]'
  input3_tms: '[broadcast: {z: 52}, broadcast: {r: 12}, broadcast: {c: 30}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x30d97e40], [1, 0x31235260], [0, 0x316d2680], [7, 0x31b6faa0], [1, 0x3200cec0], [1, 0x324aa2e0]]'
  output1_dram_buffers: '[[6, 0x32971d40], [1, 0x33b21f60]]'
  output2_dram_buffers: '[[6, 0x352ff5e0], [1, 0x38123e00]]'
  output3_dram_buffers: '[[6, 0x3afe5300], [1, 0x3d7e2b20]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 3
  output0_t: 18
  output0_mb_r: 4
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 5
  op0_grid_size_c: 2
  op0_grid_size_r: 3
  op0_t: 18
  op0_mb_r: 4
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 23
  output1_mb_r: 3
  output1_mb_c: 10
  output1_ub_r: 2
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 23
  op1_mb_r: 3
  op1_mb_c: 10
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 60
  output2_mb_r: 6
  output2_mb_c: 15
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 60
  op2_mb_r: 6
  op2_mb_c: 15
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 52
  output3_mb_r: 12
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 52
  op3_mb_r: 12
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=30
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=36
# effective_consumer_grid_size_c[0]=60
# effective_consumer_grid_size_r_reblock[0]=36
# effective_consumer_grid_size_c_reblock[0]=60
# reblock_tm_fork_r_factor_int[0]=36
# reblock_tm_fork_c_factor_int[0]=60
# tm_c_factor[1]=30
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=30
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=30
# reblock_tm_fork_r_factor_int[1]=24
# reblock_tm_fork_c_factor_int[1]=30
# tm_c_factor[2]=30
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=30
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=30
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=30
# tm_c_factor[3]=30
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=60
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=60
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=60
#Test id=4
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x3e07f600]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 33}]'
  input1_tms: '[broadcast: {z: 46}]'
  input2_tms: '[broadcast: {z: 8}]'
  input3_tms: '[broadcast: {z: 15}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3f96a440]]'
  output1_dram_buffers: '[[4, 0x3ff40720]]'
  output2_dram_buffers: '[[4, 0x3ff937e0]]'
  output3_dram_buffers: '[[4, 0x3ffd98c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 33
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 33
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 46
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 46
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 8
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 15
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 15
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=5
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 7
  op0_loc_r: 2
  op1_loc_c: 8
  op1_loc_r: 6
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x38479620]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 6
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 55}, broadcast: {r: 84}]'
  input1_tms: '[broadcast: {z: 23}, broadcast: {r: 84}]'
  input2_tms: '[broadcast: {z: 61}, broadcast: {r: 84}]'
  input3_tms: '[broadcast: {z: 14}, broadcast: {r: 84}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3881ec80]]'
  output1_dram_buffers: '[[2, 0x3ee85bc0]]'
  output2_dram_buffers: '[[2, 0x3f2b9b80]]'
  output3_dram_buffers: '[[2, 0x3fd57e00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 55
  output0_mb_r: 84
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 55
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 23
  output1_mb_r: 84
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 23
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 61
  output2_mb_r: 84
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 61
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 14
  output3_mb_r: 84
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 14
  op3_mb_r: 14
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=84
# effective_consumer_grid_size_r[0]=252
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=252
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=252
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=84
# effective_consumer_grid_size_r[1]=168
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=168
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=168
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=84
# effective_consumer_grid_size_r[2]=252
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=252
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=252
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=84
# effective_consumer_grid_size_r[3]=252
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=252
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=252
# reblock_tm_fork_c_factor_int[3]=1
#Test id=6
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 8
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x3e7942c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 39}, broadcast: {c: 72}]'
  input1_tms: '[  broadcast: {c: 72}]'
  input2_tms: '[broadcast: {z: 10}, broadcast: {c: 72}]'
  input3_tms: '[broadcast: {z: 26}, broadcast: {c: 72}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3e7cf420], [0, 0x3edcee40]]'
  output1_dram_buffers: '[[5, 0x3f407780]]'
  output2_dram_buffers: '[[5, 0x3f470be0], [0, 0x3f577400], [1, 0x3f67dc20]]'
  output3_dram_buffers: '[[5, 0x3f7d39a0], [0, 0x3fa7e1c0], [1, 0x3fd289e0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 1
  output0_mb_c: 9
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 39
  op0_mb_r: 1
  op0_mb_c: 9
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 9
  output1_ub_r: 1
  output1_ub_c: 8
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 9
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 3
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 1
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 10
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 3
  output3_grid_size_r: 1
  output3_t: 26
  output3_mb_r: 1
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 26
  op3_mb_r: 1
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=72
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=144
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=144
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=144
# tm_c_factor[1]=72
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=72
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=72
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=72
# tm_c_factor[2]=72
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=216
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=216
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=216
# tm_c_factor[3]=72
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=216
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=216
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=216
#Test id=7
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 2
  op0_loc_r: 7
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[6, 0x324ab3a0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 7}, broadcast: {r: 12}, broadcast: {c: 4}]'
  input1_tms: '[broadcast: {z: 36}, broadcast: {r: 12}, broadcast: {c: 4}]'
  input2_tms: '[broadcast: {z: 27}, broadcast: {r: 12}, broadcast: {c: 4}]'
  input3_tms: '[broadcast: {z: 26}, broadcast: {r: 12}, broadcast: {c: 4}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x32602020]]'
  output1_dram_buffers: '[[6, 0x335e65c0]]'
  output2_dram_buffers: '[[6, 0x38789440]]'
  output3_dram_buffers: '[[6, 0x3c4c9c80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 7
  output0_mb_r: 12
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 7
  op0_mb_r: 4
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 36
  output1_mb_r: 12
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 36
  op1_mb_r: 12
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 27
  output2_mb_r: 12
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 27
  op2_mb_r: 12
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 26
  output3_mb_r: 12
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 26
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=4
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=4
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=8
# tm_c_factor[2]=4
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=4
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=24
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=24
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=24
# reblock_tm_fork_c_factor_int[3]=4
#Test id=8
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 5
  op0_loc_r: 0
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x30345aa0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 4
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 3}, broadcast: {r: 6}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 37}, broadcast: {r: 6}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 37}, broadcast: {r: 6}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 9}, broadcast: {r: 6}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x30709c60]]'
  output1_dram_buffers: '[[7, 0x311196a0]]'
  output2_dram_buffers: '[[7, 0x37ba9400]]'
  output3_dram_buffers: '[[7, 0x3e634f40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 6
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 3
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 37
  output1_mb_r: 6
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 37
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 37
  output2_mb_r: 6
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 37
  op2_mb_r: 6
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 6
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 9
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=6
# tm_r_factor[0]=6
# effective_consumer_grid_size_r[0]=18
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=18
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=18
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=6
# tm_r_factor[1]=6
# effective_consumer_grid_size_r[1]=18
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=18
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=18
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=6
# tm_r_factor[2]=6
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=6
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=6
# tm_r_factor[3]=6
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=6
#Test id=9
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 1
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 5
  op2_loc_r: 5
  op3_loc_c: 9
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x32616300]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 63}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 6}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 17}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 33}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x35fdbee0], [0, 0x3642a700], [6, 0x36878f20]]'
  output1_dram_buffers: '[[0, 0x38dd7e80]]'
  output2_dram_buffers: '[[0, 0x39b6bd40], [0, 0x39c4af60], [6, 0x39d2a180], [6, 0x39e093a0]]'
  output3_dram_buffers: '[[0, 0x3e5640e0], [0, 0x3e7a5900], [6, 0x3e9e7120]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 1
  output0_t: 63
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 63
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 1
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 6
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 4
  output2_grid_size_r: 1
  output2_t: 17
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 17
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 3
  output3_grid_size_r: 1
  output3_t: 33
  output3_mb_r: 1
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 33
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=12
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=36
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=36
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=36
# tm_c_factor[1]=12
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=12
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=48
# tm_c_factor[3]=12
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=36
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=36
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=36
#Test id=10
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 8
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x315e3100]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 16}]'
  input1_tms: '[broadcast: {z: 61}]'
  input2_tms: '[broadcast: {z: 38}]'
  input3_tms: '[broadcast: {z: 28}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x362057e0]]'
  output1_dram_buffers: '[[1, 0x3b32ca20]]'
  output2_dram_buffers: '[[1, 0x3f2b9980]]'
  output3_dram_buffers: '[[1, 0x3fb38680]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 16
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 61
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 61
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 38
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 38
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 28
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=11
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 6
  op1_loc_c: 9
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x33b94400]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 6
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 26}, broadcast: {r: 70}]'
  input1_tms: '[broadcast: {z: 18}, broadcast: {r: 70}]'
  input2_tms: '[broadcast: {z: 50}, broadcast: {r: 70}]'
  input3_tms: '[broadcast: {z: 9}, broadcast: {r: 70}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3679c540]]'
  output1_dram_buffers: '[[1, 0x38cca3a0], [5, 0x3922c5c0]]'
  output2_dram_buffers: '[[1, 0x3cfaaa20]]'
  output3_dram_buffers: '[[1, 0x3f9e0720]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 26
  output0_mb_r: 10
  output0_mb_c: 1
  output0_ub_r: 7
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 26
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 18
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 18
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 50
  output2_mb_r: 14
  output2_mb_c: 1
  output2_ub_r: 5
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 50
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 14
  output3_mb_c: 1
  output3_ub_r: 5
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 9
  op3_mb_r: 14
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=70
# effective_consumer_grid_size_r[0]=70
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=70
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=70
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=70
# effective_consumer_grid_size_r[1]=140
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=140
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=140
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=70
# effective_consumer_grid_size_r[2]=70
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=70
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=70
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=70
# effective_consumer_grid_size_r[3]=70
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=70
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=70
# reblock_tm_fork_c_factor_int[3]=1
#Test id=12
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x349263e0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 52}, broadcast: {r: 10}, broadcast: {c: 20}]'
  input1_tms: '[broadcast: {z: 28}, broadcast: {r: 10}, broadcast: {c: 20}]'
  input2_tms: '[broadcast: {z: 26}, broadcast: {r: 10}, broadcast: {c: 20}]'
  input3_tms: '[broadcast: {z: 2}, broadcast: {r: 10}, broadcast: {c: 20}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x34d68a20]]'
  output1_dram_buffers: '[[1, 0x36bc0d20], [5, 0x36e25540], [4, 0x37089d60], [7, 0x372ee580], [6, 0x37552da0]]'
  output2_dram_buffers: '[[1, 0x3b5d7200]]'
  output3_dram_buffers: '[[1, 0x3d517ec0], [5, 0x3d543ae0], [4, 0x3d56f700], [7, 0x3d59b320], [6, 0x3d5c6f40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 52
  output0_mb_r: 5
  output0_mb_c: 5
  output0_ub_r: 2
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 52
  op0_mb_r: 5
  op0_mb_c: 5
  op0_ub_r: 2
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 5
  output1_t: 28
  output1_mb_r: 1
  output1_mb_c: 10
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 28
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 26
  output2_mb_r: 10
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 26
  op2_mb_r: 10
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 5
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 5
  output3_ub_r: 2
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=20
# tm_r_factor[0]=10
# effective_consumer_grid_size_r[0]=10
# effective_consumer_grid_size_c[0]=20
# effective_consumer_grid_size_r_reblock[0]=10
# effective_consumer_grid_size_c_reblock[0]=20
# reblock_tm_fork_r_factor_int[0]=10
# reblock_tm_fork_c_factor_int[0]=20
# tm_c_factor[1]=20
# tm_r_factor[1]=10
# effective_consumer_grid_size_r[1]=50
# effective_consumer_grid_size_c[1]=20
# effective_consumer_grid_size_r_reblock[1]=50
# effective_consumer_grid_size_c_reblock[1]=20
# reblock_tm_fork_r_factor_int[1]=50
# reblock_tm_fork_c_factor_int[1]=20
# tm_c_factor[2]=20
# tm_r_factor[2]=10
# effective_consumer_grid_size_r[2]=10
# effective_consumer_grid_size_c[2]=20
# effective_consumer_grid_size_r_reblock[2]=10
# effective_consumer_grid_size_c_reblock[2]=20
# reblock_tm_fork_r_factor_int[2]=10
# reblock_tm_fork_c_factor_int[2]=20
# tm_c_factor[3]=20
# tm_r_factor[3]=10
# effective_consumer_grid_size_r[3]=50
# effective_consumer_grid_size_c[3]=20
# effective_consumer_grid_size_r_reblock[3]=50
# effective_consumer_grid_size_c_reblock[3]=20
# reblock_tm_fork_r_factor_int[3]=50
# reblock_tm_fork_c_factor_int[3]=20
#Test id=13
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 1
  op1_loc_c: 8
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x35b23b60]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 57}, broadcast: {r: 32}]'
  input1_tms: '[broadcast: {z: 38}, broadcast: {r: 32}]'
  input2_tms: '[broadcast: {z: 29}, broadcast: {r: 32}]'
  input3_tms: '[broadcast: {z: 51}, broadcast: {r: 32}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3644ae80]]'
  output1_dram_buffers: '[[0, 0x37596b20]]'
  output2_dram_buffers: '[[0, 0x39ccd3c0]]'
  output3_dram_buffers: '[[0, 0x3d3cb600]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 57
  output0_mb_r: 32
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 57
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 38
  output1_mb_r: 32
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 38
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 29
  output2_mb_r: 32
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 29
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 51
  output3_mb_r: 32
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 51
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=32
# effective_consumer_grid_size_r[0]=32
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=32
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=32
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=32
# effective_consumer_grid_size_r[1]=32
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=32
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=32
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=32
# effective_consumer_grid_size_r[2]=128
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=128
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=128
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=32
# effective_consumer_grid_size_r[3]=64
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=64
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=64
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 7
  op2_loc_r: 7
  op3_loc_c: 9
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x30499ee0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 19}, broadcast: {r: 30}, broadcast: {c: 6}]'
  input1_tms: '[  broadcast: {r: 30}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 2}, broadcast: {r: 30}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 7}, broadcast: {r: 30}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3069a7e0]]'
  output1_dram_buffers: '[[2, 0x3a9c0740]]'
  output2_dram_buffers: '[[2, 0x3b25eaa0]]'
  output3_dram_buffers: '[[2, 0x3c3f2a80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 19
  output0_mb_r: 30
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 19
  op0_mb_r: 5
  op0_mb_c: 3
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 30
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 15
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 30
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 6
  op2_mb_c: 3
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 7
  output3_mb_r: 30
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 7
  op3_mb_r: 15
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=6
# tm_r_factor[0]=30
# effective_consumer_grid_size_r[0]=60
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=60
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=60
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=6
# tm_r_factor[1]=30
# effective_consumer_grid_size_r[1]=60
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=60
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=60
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=6
# tm_r_factor[2]=30
# effective_consumer_grid_size_r[2]=30
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=30
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=30
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=6
# tm_r_factor[3]=30
# effective_consumer_grid_size_r[3]=60
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=60
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=60
# reblock_tm_fork_c_factor_int[3]=12
#Test id=15
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 2
  op1_loc_r: 2
  op2_loc_c: 7
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x35dc8300]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 5}, broadcast: {r: 2}, broadcast: {c: 80}]'
  input1_tms: '[broadcast: {z: 51}, broadcast: {r: 2}, broadcast: {c: 80}]'
  input2_tms: '[broadcast: {z: 25}, broadcast: {r: 2}, broadcast: {c: 80}]'
  input3_tms: '[broadcast: {z: 8}, broadcast: {r: 2}, broadcast: {c: 80}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x361fbd40]]'
  output1_dram_buffers: '[[3, 0x3aaa9d40], [2, 0x3ae26560], [1, 0x3b1a2d80], [4, 0x3b51f5a0], [3, 0x3b89bdc0]]'
  output2_dram_buffers: '[[3, 0x3f0fa7a0], [2, 0x3f5403c0]]'
  output3_dram_buffers: '[[3, 0x3f9dc840], [2, 0x3fa8b860], [1, 0x3fb3a880], [4, 0x3fbe98a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 2
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 5
  op0_mb_r: 2
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 5
  output1_grid_size_r: 1
  output1_t: 51
  output1_mb_r: 1
  output1_mb_c: 16
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 5
  op1_grid_size_r: 1
  op1_t: 51
  op1_mb_r: 1
  op1_mb_c: 16
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 25
  output2_mb_r: 2
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 8
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 25
  op2_mb_r: 2
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 8
  output3_mb_r: 1
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 4
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 8
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=80
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=80
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=80
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=80
# tm_c_factor[1]=80
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=400
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=400
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=400
# tm_c_factor[2]=80
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=160
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=160
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=160
# tm_c_factor[3]=80
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=160
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=160
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=160
#Test id=16
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 2
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x33eb50c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 42}, broadcast: {r: 60}]'
  input1_tms: '[broadcast: {z: 39}, broadcast: {r: 60}]'
  input2_tms: '[broadcast: {z: 56}, broadcast: {r: 60}]'
  input3_tms: '[broadcast: {z: 40}, broadcast: {r: 60}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x342ab1c0], [0, 0x358339e0]]'
  output1_dram_buffers: '[[4, 0x36de1f40]]'
  output2_dram_buffers: '[[4, 0x398af800], [0, 0x3b565820]]'
  output3_dram_buffers: '[[4, 0x3d5656a0], [0, 0x3e9e76c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 42
  output0_mb_r: 15
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 42
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 39
  output1_mb_r: 12
  output1_mb_c: 1
  output1_ub_r: 5
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 39
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 56
  output2_mb_r: 6
  output2_mb_c: 1
  output2_ub_r: 5
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 56
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 40
  output3_mb_r: 15
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 40
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=60
# effective_consumer_grid_size_r[0]=120
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=120
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=120
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=60
# effective_consumer_grid_size_r[1]=60
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=60
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=60
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=60
# effective_consumer_grid_size_r[2]=120
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=120
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=120
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=60
# effective_consumer_grid_size_r[3]=120
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=120
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=120
# reblock_tm_fork_c_factor_int[3]=1
#Test id=17
- device: GRAYSKULL
  entries: 28
  op0_loc_c: 8
  op0_loc_r: 0
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x304dc3e0]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 3}, broadcast: {r: 80}]'
  input1_tms: '[broadcast: {z: 14}, broadcast: {r: 80}]'
  input2_tms: '[broadcast: {z: 32}, broadcast: {r: 80}]'
  input3_tms: '[  broadcast: {r: 80}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x306a8560]]'
  output1_dram_buffers: '[[3, 0x3154f680]]'
  output2_dram_buffers: '[[3, 0x354f5ec0]]'
  output3_dram_buffers: '[[3, 0x3e844bc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 80
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 3
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 14
  output1_mb_r: 80
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 14
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 32
  output2_mb_r: 80
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 32
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 80
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 10
  op3_mb_c: 1
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=80
# effective_consumer_grid_size_r[0]=80
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=80
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=80
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=80
# effective_consumer_grid_size_r[1]=80
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=80
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=80
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=80
# effective_consumer_grid_size_r[2]=80
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=80
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=80
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=80
# effective_consumer_grid_size_r[3]=80
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=80
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=80
# reblock_tm_fork_c_factor_int[3]=1
#Test id=18
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 6
  op0_loc_r: 7
  op1_loc_c: 7
  op1_loc_r: 5
  op2_loc_c: 8
  op2_loc_r: 0
  op3_loc_c: 9
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x3884d360]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 30}, broadcast: {r: 7}]'
  input1_tms: '[broadcast: {z: 56}, broadcast: {r: 7}]'
  input2_tms: '[broadcast: {z: 41}, broadcast: {r: 7}]'
  input3_tms: '[broadcast: {z: 9}, broadcast: {r: 7}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x39f3ee60]]'
  output1_dram_buffers: '[[2, 0x3b6587c0]]'
  output2_dram_buffers: '[[2, 0x3dac3820]]'
  output3_dram_buffers: '[[2, 0x3e227bc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 7
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 30
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 56
  output1_mb_r: 7
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 56
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 41
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 7
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 41
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 9
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=7
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=7
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=7
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=7
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=7
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=7
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=7
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=7
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 3
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x311c5f00]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 50}, broadcast: {c: 60}]'
  input1_tms: '[broadcast: {z: 44}, broadcast: {c: 60}]'
  input2_tms: '[broadcast: {z: 51}, broadcast: {c: 60}]'
  input3_tms: '[broadcast: {z: 47}, broadcast: {c: 60}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x311f0300]]'
  output1_dram_buffers: '[[2, 0x35918e00], [2, 0x3609de20], [3, 0x36822e40], [5, 0x36fa7e60], [3, 0x3772ce80], [5, 0x37eb1ea0]]'
  output2_dram_buffers: '[[2, 0x38717d60]]'
  output3_dram_buffers: '[[2, 0x3c85eb60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 50
  output0_mb_r: 1
  output0_mb_c: 15
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 50
  op0_mb_r: 1
  op0_mb_c: 15
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 6
  output1_grid_size_r: 1
  output1_t: 44
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 6
  op1_grid_size_r: 1
  op1_t: 44
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 51
  output2_mb_r: 1
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 51
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 47
  output3_mb_r: 1
  output3_mb_c: 15
  output3_ub_r: 1
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 47
  op3_mb_r: 1
  op3_mb_c: 15
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=60
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=60
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=60
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=60
# tm_c_factor[1]=60
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=360
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=360
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=360
# tm_c_factor[2]=60
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=60
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=60
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=60
# tm_c_factor[3]=60
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=60
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=60
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=60
#Test id=20
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x3893d280]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 13}, broadcast: {r: 21}]'
  input1_tms: '[broadcast: {z: 27}, broadcast: {r: 21}]'
  input2_tms: '[broadcast: {z: 58}, broadcast: {r: 21}]'
  input3_tms: '[broadcast: {z: 33}, broadcast: {r: 21}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x38cecf80]]'
  output1_dram_buffers: '[[2, 0x39003980], [0, 0x3905c320], [2, 0x390b4cc0], [6, 0x3910d660], [4, 0x39166000], [4, 0x391be9a0], [2, 0x39217340]]'
  output2_dram_buffers: '[[2, 0x393a8840]]'
  output3_dram_buffers: '[[2, 0x39ab7fa0], [0, 0x39bb4a40], [2, 0x39cb14e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 3
  output0_mb_c: 1
  output0_ub_r: 7
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 13
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 27
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 27
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 58
  output2_mb_r: 7
  output2_mb_c: 1
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 58
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 3
  output3_t: 33
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 33
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=21
# effective_consumer_grid_size_r[0]=21
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=21
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=21
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=21
# effective_consumer_grid_size_r[1]=147
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=147
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=147
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=21
# effective_consumer_grid_size_r[2]=21
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=21
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=21
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=21
# effective_consumer_grid_size_r[3]=63
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=63
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=63
# reblock_tm_fork_c_factor_int[3]=1
#Test id=21
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 4
  op2_loc_r: 6
  op3_loc_c: 8
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x310468e0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 61}, broadcast: {r: 12}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 18}, broadcast: {r: 12}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 18}, broadcast: {r: 12}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 33}, broadcast: {r: 12}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3178ed20]]'
  output1_dram_buffers: '[[5, 0x3809ab60]]'
  output2_dram_buffers: '[[5, 0x39fabaa0]]'
  output3_dram_buffers: '[[5, 0x3c1c94a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 61
  output0_mb_r: 12
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 61
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 18
  output1_mb_r: 12
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 18
  op1_mb_r: 12
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 12
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 2
  op2_t: 18
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 33
  output3_mb_r: 12
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 33
  op3_mb_r: 6
  op3_mb_c: 3
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=6
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=36
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=36
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=36
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=6
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=6
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=18
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=18
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=18
# tm_c_factor[3]=6
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=12
#Test id=22
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 8
  op0_loc_r: 4
  op1_loc_c: 9
  op1_loc_r: 5
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x302406c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 7
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 4}, broadcast: {r: 120}]'
  input1_tms: '[broadcast: {z: 2}, broadcast: {r: 120}]'
  input2_tms: '[broadcast: {z: 54}, broadcast: {r: 120}]'
  input3_tms: '[broadcast: {z: 56}, broadcast: {r: 120}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x30397e20], [1, 0x30446e40], [3, 0x304f5e60]]'
  output1_dram_buffers: '[[3, 0x305d86e0], [1, 0x3065bb00]]'
  output2_dram_buffers: '[[3, 0x30755b40], [1, 0x30cdf360], [3, 0x31268b80], [4, 0x317f23a0], [3, 0x31d7bbc0]]'
  output3_dram_buffers: '[[3, 0x330726c0], [1, 0x33ecd6e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 4
  output0_mb_r: 5
  output0_mb_c: 1
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 4
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 12
  output1_mb_c: 1
  output1_ub_r: 5
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 5
  output2_t: 54
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 54
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 56
  output3_mb_r: 15
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 56
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=120
# effective_consumer_grid_size_r[0]=360
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=360
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=360
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=120
# effective_consumer_grid_size_r[1]=240
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=240
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=240
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=120
# effective_consumer_grid_size_r[2]=600
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=600
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=600
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=120
# effective_consumer_grid_size_r[3]=240
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=240
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=240
# reblock_tm_fork_c_factor_int[3]=1
#Test id=23
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 3
  op1_loc_c: 6
  op1_loc_r: 3
  op2_loc_c: 7
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x3591a440]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 24}, broadcast: {r: 8}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 55}, broadcast: {r: 8}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 22}, broadcast: {r: 8}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 13}, broadcast: {r: 8}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x35db9ba0], [7, 0x36791bc0]]'
  output1_dram_buffers: '[[0, 0x388257c0], [7, 0x3936cfe0], [0, 0x39eb4800], [7, 0x3a9fc020]]'
  output2_dram_buffers: '[[0, 0x3b79a540]]'
  output3_dram_buffers: '[[0, 0x3e995720], [7, 0x3ec3ff40], [0, 0x3eeea760], [7, 0x3f194f80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 24
  output0_mb_r: 1
  output0_mb_c: 6
  output0_ub_r: 4
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 24
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 55
  output1_mb_r: 1
  output1_mb_c: 3
  output1_ub_r: 2
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 55
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 22
  output2_mb_r: 4
  output2_mb_c: 6
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 22
  op2_mb_r: 4
  op2_mb_c: 6
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 13
  output3_mb_r: 4
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 13
  op3_mb_r: 4
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=12
# tm_r_factor[0]=8
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=16
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=12
# tm_r_factor[1]=8
# effective_consumer_grid_size_r[1]=32
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=32
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=32
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=12
# tm_r_factor[2]=8
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=8
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=12
# tm_r_factor[3]=8
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=16
# reblock_tm_fork_c_factor_int[3]=24
#Test id=24
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 8
  op0_loc_r: 2
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x3b8431e0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 7
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 42}]'
  input1_tms: '[broadcast: {z: 19}]'
  input2_tms: '[broadcast: {z: 7}]'
  input3_tms: '[broadcast: {z: 57}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3bc02d00]]'
  output1_dram_buffers: '[[5, 0x3c4ffa60]]'
  output2_dram_buffers: '[[5, 0x3ca85a20]]'
  output3_dram_buffers: '[[5, 0x3cb9bb40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 42
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 42
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 19
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 19
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 7
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 57
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 57
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=25
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 7
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x374a6340]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 32}, broadcast: {c: 42}]'
  input1_tms: '[broadcast: {z: 14}, broadcast: {c: 42}]'
  input2_tms: '[broadcast: {z: 18}, broadcast: {c: 42}]'
  input3_tms: '[broadcast: {z: 33}, broadcast: {c: 42}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x38761a40]]'
  output1_dram_buffers: '[[3, 0x3a196cc0]]'
  output2_dram_buffers: '[[3, 0x3af39260], [1, 0x3b5aee80]]'
  output3_dram_buffers: '[[3, 0x3d88ecc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 1
  output0_mb_c: 14
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 32
  op0_mb_r: 1
  op0_mb_c: 14
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 14
  output1_mb_r: 1
  output1_mb_c: 14
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 14
  op1_mb_r: 1
  op1_mb_c: 14
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 1
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 7
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 18
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 33
  output3_mb_r: 1
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 7
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 33
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=42
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=42
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=42
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=42
# tm_c_factor[1]=42
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=42
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=42
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=42
# tm_c_factor[2]=42
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=84
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=84
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=84
# tm_c_factor[3]=42
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=42
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=42
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=42
#Test id=26
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 5
  op1_loc_c: 8
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x36362fa0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 6
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 54}]'
  input1_tms: '[broadcast: {z: 46}]'
  input2_tms: '[broadcast: {z: 46}]'
  input3_tms: '[broadcast: {z: 39}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x36efdf00]]'
  output1_dram_buffers: '[[4, 0x3ac1cc20]]'
  output2_dram_buffers: '[[4, 0x3afc9420]]'
  output3_dram_buffers: '[[4, 0x3cfa7260]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 54
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 54
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 46
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 46
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 46
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 46
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 39
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 39
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=27
- device: GRAYSKULL
  entries: 28
  op0_loc_c: 5
  op0_loc_r: 1
  op1_loc_c: 7
  op1_loc_r: 5
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 9
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x31dd6ca0]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 34}]'
  input1_tms: '[broadcast: {z: 30}]'
  input2_tms: '[broadcast: {z: 4}]'
  input3_tms: '[broadcast: {z: 28}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3a5f7da0]]'
  output1_dram_buffers: '[[3, 0x3d5ec320]]'
  output2_dram_buffers: '[[3, 0x3ea27440]]'
  output3_dram_buffers: '[[3, 0x3edfd720]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 34
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 34
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 30
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 30
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 28
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=28
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 5
  op0_loc_r: 6
  op1_loc_c: 9
  op1_loc_r: 7
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x38f41ea0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 4
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 5}, broadcast: {r: 36}]'
  input1_tms: '[broadcast: {z: 9}, broadcast: {r: 36}]'
  input2_tms: '[broadcast: {z: 15}, broadcast: {r: 36}]'
  input3_tms: '[broadcast: {z: 8}, broadcast: {r: 36}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x395ef6a0]]'
  output1_dram_buffers: '[[7, 0x39e47ba0]]'
  output2_dram_buffers: '[[7, 0x3a400240]]'
  output3_dram_buffers: '[[7, 0x3b146700]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 36
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 5
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 36
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 9
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 15
  output2_mb_r: 36
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 15
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 36
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 8
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=36
# effective_consumer_grid_size_r[0]=36
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=36
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=36
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=36
# effective_consumer_grid_size_r[1]=36
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=36
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=36
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=36
# effective_consumer_grid_size_r[2]=108
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=108
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=108
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=36
# effective_consumer_grid_size_r[3]=144
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=144
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=144
# reblock_tm_fork_c_factor_int[3]=1
#Test id=29
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 3
  op1_loc_r: 6
  op2_loc_c: 4
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x3beb94e0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 32}]'
  input1_tms: '[broadcast: {z: 37}]'
  input2_tms: '[broadcast: {z: 48}]'
  input3_tms: '[broadcast: {z: 53}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3bf20300]]'
  output1_dram_buffers: '[[3, 0x3cb15220]]'
  output2_dram_buffers: '[[3, 0x3f23bf40]]'
  output3_dram_buffers: '[[3, 0x3fba3640]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 32
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 37
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 37
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 48
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 53
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 53
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=30
- device: GRAYSKULL
  entries: 20
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 6
  op3_loc_c: 9
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x3007bea0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 36}, broadcast: {c: 60}]'
  input1_tms: '[broadcast: {z: 11}, broadcast: {c: 60}]'
  input2_tms: '[broadcast: {z: 34}, broadcast: {c: 60}]'
  input3_tms: '[broadcast: {z: 3}, broadcast: {c: 60}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x305bb580]]'
  output1_dram_buffers: '[[2, 0x35e4ae80]]'
  output2_dram_buffers: '[[2, 0x38680300]]'
  output3_dram_buffers: '[[2, 0x3dd0e800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 36
  output0_mb_r: 1
  output0_mb_c: 60
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 36
  op0_mb_r: 1
  op0_mb_c: 15
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 11
  output1_mb_r: 1
  output1_mb_c: 60
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 11
  op1_mb_r: 1
  op1_mb_c: 15
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 34
  output2_mb_r: 1
  output2_mb_c: 60
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 34
  op2_mb_r: 1
  op2_mb_c: 15
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 1
  output3_mb_c: 60
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 3
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=60
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=120
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=120
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=120
# tm_c_factor[1]=60
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=60
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=60
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=60
# tm_c_factor[2]=60
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=240
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=240
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=240
# tm_c_factor[3]=60
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=120
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=120
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=120
#Test id=31
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 8
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x30ecadc0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 5}, broadcast: {r: 28}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 10}, broadcast: {r: 28}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 12}, broadcast: {r: 28}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 3}, broadcast: {r: 28}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x30ed7420]]'
  output1_dram_buffers: '[[7, 0x336d6020]]'
  output2_dram_buffers: '[[7, 0x386e4960]]'
  output3_dram_buffers: '[[7, 0x3e7b0e60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 28
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 5
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 28
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 10
  op1_mb_r: 14
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 12
  output2_mb_r: 28
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 12
  op2_mb_r: 2
  op2_mb_c: 3
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 28
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 3
  op3_mb_r: 7
  op3_mb_c: 3
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=6
# tm_r_factor[0]=28
# effective_consumer_grid_size_r[0]=28
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=28
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=28
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=6
# tm_r_factor[1]=28
# effective_consumer_grid_size_r[1]=56
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=56
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=56
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=6
# tm_r_factor[2]=28
# effective_consumer_grid_size_r[2]=56
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=56
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=56
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=6
# tm_r_factor[3]=28
# effective_consumer_grid_size_r[3]=56
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=56
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=56
# reblock_tm_fork_c_factor_int[3]=12
#Test id=32
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 5
  op1_loc_c: 7
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x301a9860]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 42}, broadcast: {r: 16}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 24}, broadcast: {r: 16}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 5}, broadcast: {r: 16}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 5}, broadcast: {r: 16}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x301dd040], [0, 0x32451060], [3, 0x346c5080], [7, 0x369390a0]]'
  output1_dram_buffers: '[[3, 0x38bb1700], [0, 0x39f61720], [3, 0x3b311740], [7, 0x3c6c1760]]'
  output2_dram_buffers: '[[3, 0x3dc4a9a0], [0, 0x3e47e9c0]]'
  output3_dram_buffers: '[[3, 0x3ef45180], [0, 0x3f7791a0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 42
  output0_mb_r: 4
  output0_mb_c: 6
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 42
  op0_mb_r: 4
  op0_mb_c: 6
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 24
  output1_mb_r: 8
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 24
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 16
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 5
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 5
  output3_mb_r: 1
  output3_mb_c: 12
  output3_ub_r: 8
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 5
  op3_mb_r: 1
  op3_mb_c: 12
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=12
# tm_r_factor[0]=16
# effective_consumer_grid_size_r[0]=32
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=32
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=32
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=12
# tm_r_factor[1]=16
# effective_consumer_grid_size_r[1]=32
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=32
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=32
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=12
# tm_r_factor[2]=16
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=24
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=24
# reblock_tm_fork_r_factor_int[2]=16
# reblock_tm_fork_c_factor_int[2]=24
# tm_c_factor[3]=12
# tm_r_factor[3]=16
# effective_consumer_grid_size_r[3]=32
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=32
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=32
# reblock_tm_fork_c_factor_int[3]=12
#Test id=33
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 7
  op2_loc_r: 6
  op3_loc_c: 8
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x3648c8a0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 41}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 19}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 8}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 55}, broadcast: {r: 12}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x36501a20], [4, 0x3719e640], [7, 0x37e3b260], [5, 0x38ad7e80]]'
  output1_dram_buffers: '[[3, 0x39a2ab20], [4, 0x3a002f40], [7, 0x3a5db360], [5, 0x3abb3780]]'
  output2_dram_buffers: '[[3, 0x3b1e0780], [4, 0x3b6cc7a0]]'
  output3_dram_buffers: '[[3, 0x3bbbe9c0], [4, 0x3dd951e0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 41
  output0_mb_r: 3
  output0_mb_c: 2
  output0_ub_r: 2
  output0_ub_c: 3
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 41
  op0_mb_r: 3
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 19
  output1_mb_r: 1
  output1_mb_c: 6
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 19
  op1_mb_r: 1
  op1_mb_c: 6
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 8
  output2_mb_r: 1
  output2_mb_c: 12
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 8
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 55
  output3_mb_r: 6
  output3_mb_c: 2
  output3_ub_r: 2
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 55
  op3_mb_r: 6
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=12
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=24
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=24
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=24
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=12
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=24
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=12
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=12
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=24
#Test id=34
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x316a7580]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 29}, broadcast: {r: 16}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 32}, broadcast: {r: 16}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 29}, broadcast: {r: 16}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 44}, broadcast: {r: 16}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x31974fc0]]'
  output1_dram_buffers: '[[4, 0x347a7680]]'
  output2_dram_buffers: '[[4, 0x385a0460]]'
  output3_dram_buffers: '[[4, 0x3b337d80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 29
  output0_mb_r: 16
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 29
  op0_mb_r: 8
  op0_mb_c: 6
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 32
  output1_mb_r: 16
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 32
  op1_mb_r: 16
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 29
  output2_mb_r: 16
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 29
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 16
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 44
  op3_mb_r: 8
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=12
# tm_r_factor[0]=16
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=16
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=12
# tm_r_factor[1]=16
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=16
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=12
# tm_r_factor[2]=16
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=24
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=24
# reblock_tm_fork_r_factor_int[2]=16
# reblock_tm_fork_c_factor_int[2]=24
# tm_c_factor[3]=12
# tm_r_factor[3]=16
# effective_consumer_grid_size_r[3]=32
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=32
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=32
# reblock_tm_fork_c_factor_int[3]=24
#Test id=35
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 7
  op2_loc_r: 4
  op3_loc_c: 9
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[6, 0x3969ee00]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 60}, broadcast: {r: 14}]'
  input1_tms: '[broadcast: {z: 24}, broadcast: {r: 14}]'
  input2_tms: '[broadcast: {z: 38}, broadcast: {r: 14}]'
  input3_tms: '[broadcast: {z: 5}, broadcast: {r: 14}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3c628dc0]]'
  output1_dram_buffers: '[[6, 0x3eda2080], [6, 0x3edbc4a0], [1, 0x3edd68c0], [0, 0x3edf0ce0], [5, 0x3ee0b100], [4, 0x3ee25520], [3, 0x3ee3f940]]'
  output2_dram_buffers: '[[6, 0x3fe07d00], [6, 0x3fe994a0]]'
  output3_dram_buffers: '[[6, 0x3ff802a0], [6, 0x3ff93500]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 60
  output0_mb_r: 14
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 60
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 24
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 24
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 38
  output2_mb_r: 7
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 38
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 5
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 5
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=14
# effective_consumer_grid_size_r[0]=14
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=14
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=14
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=14
# effective_consumer_grid_size_r[1]=98
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=98
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=98
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=14
# effective_consumer_grid_size_r[2]=28
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=28
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=28
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=14
# effective_consumer_grid_size_r[3]=28
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=28
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=28
# reblock_tm_fork_c_factor_int[3]=1
#Test id=36
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 7
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[6, 0x355ae560]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 7
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 9}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 17}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 63}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 33}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x37312b60]]'
  output1_dram_buffers: '[[6, 0x3803fe20]]'
  output2_dram_buffers: '[[6, 0x399c2500]]'
  output3_dram_buffers: '[[6, 0x3df29460]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 1
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 9
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 17
  output1_mb_r: 1
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 17
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 63
  output2_mb_r: 1
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 63
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 33
  output3_mb_r: 1
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 33
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=12
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=12
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=12
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=48
# tm_c_factor[3]=12
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=24
#Test id=37
- device: GRAYSKULL
  entries: 10
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 8
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x301127a0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {c: 192}]'
  input1_tms: '[broadcast: {z: 3}, broadcast: {c: 192}]'
  input2_tms: '[broadcast: {z: 48}, broadcast: {c: 192}]'
  input3_tms: '[broadcast: {z: 14}, broadcast: {c: 192}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x301ca660]]'
  output1_dram_buffers: '[[5, 0x305c5160]]'
  output2_dram_buffers: '[[5, 0x31184560]]'
  output3_dram_buffers: '[[5, 0x3c89ab80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 192
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 1
  output1_mb_c: 192
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 3
  op1_mb_r: 1
  op1_mb_c: 16
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 1
  output2_mb_c: 192
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 48
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 14
  output3_mb_r: 1
  output3_mb_c: 192
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 14
  op3_mb_r: 1
  op3_mb_c: 12
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 20
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=192
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=384
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=384
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=384
# tm_c_factor[1]=192
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=384
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=384
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=384
# tm_c_factor[2]=192
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=384
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=384
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=384
# tm_c_factor[3]=192
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=768
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=768
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=768
#Test id=38
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x30ba2de0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 52}, broadcast: {r: 96}]'
  input1_tms: '[broadcast: {z: 55}, broadcast: {r: 96}]'
  input2_tms: '[broadcast: {z: 26}, broadcast: {r: 96}]'
  input3_tms: '[broadcast: {z: 23}, broadcast: {r: 96}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x310686e0]]'
  output1_dram_buffers: '[[7, 0x360a1820]]'
  output2_dram_buffers: '[[7, 0x3b4b4f80]]'
  output3_dram_buffers: '[[7, 0x3dcb0ee0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 52
  output0_mb_r: 96
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 52
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 55
  output1_mb_r: 96
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 55
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 26
  output2_mb_r: 96
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 26
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 23
  output3_mb_r: 96
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 23
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=96
# effective_consumer_grid_size_r[0]=192
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=192
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=192
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=96
# effective_consumer_grid_size_r[1]=384
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=384
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=384
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=96
# effective_consumer_grid_size_r[2]=96
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=96
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=96
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=96
# effective_consumer_grid_size_r[3]=192
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=192
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=192
# reblock_tm_fork_c_factor_int[3]=1
#Test id=39
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 5
  op0_loc_r: 5
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x30707ea0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {r: 30}, broadcast: {c: 10}]'
  input1_tms: '[broadcast: {z: 4}, broadcast: {r: 30}, broadcast: {c: 10}]'
  input2_tms: '[  broadcast: {r: 30}, broadcast: {c: 10}]'
  input3_tms: '[broadcast: {z: 3}, broadcast: {r: 30}, broadcast: {c: 10}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x30729a60]]'
  output1_dram_buffers: '[[0, 0x31bd5b40]]'
  output2_dram_buffers: '[[0, 0x376804c0]]'
  output3_dram_buffers: '[[0, 0x39c23ee0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 30
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 1
  op0_mb_r: 5
  op0_mb_c: 10
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 30
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 4
  op1_mb_r: 10
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 30
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 10
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 30
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 3
  op3_mb_r: 5
  op3_mb_c: 10
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=10
# tm_r_factor[0]=30
# effective_consumer_grid_size_r[0]=90
# effective_consumer_grid_size_c[0]=10
# effective_consumer_grid_size_r_reblock[0]=90
# effective_consumer_grid_size_c_reblock[0]=10
# reblock_tm_fork_r_factor_int[0]=90
# reblock_tm_fork_c_factor_int[0]=10
# tm_c_factor[1]=10
# tm_r_factor[1]=30
# effective_consumer_grid_size_r[1]=90
# effective_consumer_grid_size_c[1]=10
# effective_consumer_grid_size_r_reblock[1]=90
# effective_consumer_grid_size_c_reblock[1]=10
# reblock_tm_fork_r_factor_int[1]=90
# reblock_tm_fork_c_factor_int[1]=10
# tm_c_factor[2]=10
# tm_r_factor[2]=30
# effective_consumer_grid_size_r[2]=90
# effective_consumer_grid_size_c[2]=10
# effective_consumer_grid_size_r_reblock[2]=90
# effective_consumer_grid_size_c_reblock[2]=10
# reblock_tm_fork_r_factor_int[2]=90
# reblock_tm_fork_c_factor_int[2]=10
# tm_c_factor[3]=10
# tm_r_factor[3]=30
# effective_consumer_grid_size_r[3]=90
# effective_consumer_grid_size_c[3]=10
# effective_consumer_grid_size_r_reblock[3]=90
# effective_consumer_grid_size_c_reblock[3]=10
# reblock_tm_fork_r_factor_int[3]=90
# reblock_tm_fork_c_factor_int[3]=10
#Test id=40
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x3008e5c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 3}, broadcast: {r: 30}, broadcast: {c: 4}]'
  input1_tms: '[broadcast: {z: 32}, broadcast: {r: 30}, broadcast: {c: 4}]'
  input2_tms: '[broadcast: {z: 31}, broadcast: {r: 30}, broadcast: {c: 4}]'
  input3_tms: '[  broadcast: {r: 30}, broadcast: {c: 4}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x300972c0]]'
  output1_dram_buffers: '[[6, 0x30c054e0]]'
  output2_dram_buffers: '[[6, 0x385f1500]]'
  output3_dram_buffers: '[[6, 0x3fc233e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 30
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 3
  op0_mb_r: 10
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 32
  output1_mb_r: 30
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 32
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 31
  output2_mb_r: 30
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 31
  op2_mb_r: 15
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 30
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 5
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=4
# tm_r_factor[0]=30
# effective_consumer_grid_size_r[0]=30
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=30
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=30
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=4
# tm_r_factor[1]=30
# effective_consumer_grid_size_r[1]=150
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=150
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=150
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=4
# tm_r_factor[2]=30
# effective_consumer_grid_size_r[2]=30
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=30
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=30
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=4
# tm_r_factor[3]=30
# effective_consumer_grid_size_r[3]=30
# effective_consumer_grid_size_c[3]=16
# effective_consumer_grid_size_r_reblock[3]=30
# effective_consumer_grid_size_c_reblock[3]=16
# reblock_tm_fork_r_factor_int[3]=30
# reblock_tm_fork_c_factor_int[3]=16
#Test id=41
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 6
  op0_loc_r: 6
  op1_loc_c: 7
  op1_loc_r: 6
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x324757a0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 28}, broadcast: {r: 16}, broadcast: {c: 8}]'
  input1_tms: '[broadcast: {z: 27}, broadcast: {r: 16}, broadcast: {c: 8}]'
  input2_tms: '[broadcast: {z: 10}, broadcast: {r: 16}, broadcast: {c: 8}]'
  input3_tms: '[broadcast: {z: 50}, broadcast: {r: 16}, broadcast: {c: 8}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x32bfade0]]'
  output1_dram_buffers: '[[3, 0x33debc40], [6, 0x3454dc60]]'
  output2_dram_buffers: '[[3, 0x34df7de0], [6, 0x34f55e00], [6, 0x350b3e20], [6, 0x35211e40]]'
  output3_dram_buffers: '[[3, 0x3bb13f00], [6, 0x3c1e9f20], [6, 0x3c8bff40], [6, 0x3cf95f60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 16
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 28
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 27
  output1_mb_r: 4
  output1_mb_c: 4
  output1_ub_r: 4
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 27
  op1_mb_r: 4
  op1_mb_c: 4
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 10
  output2_mb_r: 2
  output2_mb_c: 4
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 10
  op2_mb_r: 2
  op2_mb_c: 4
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 50
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 4
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 50
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=8
# tm_r_factor[0]=16
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=16
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=8
# tm_r_factor[1]=16
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=16
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=16
# reblock_tm_fork_r_factor_int[1]=16
# reblock_tm_fork_c_factor_int[1]=16
# tm_c_factor[2]=8
# tm_r_factor[2]=16
# effective_consumer_grid_size_r[2]=64
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=64
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=64
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=8
# tm_r_factor[3]=16
# effective_consumer_grid_size_r[3]=32
# effective_consumer_grid_size_c[3]=16
# effective_consumer_grid_size_r_reblock[3]=32
# effective_consumer_grid_size_c_reblock[3]=16
# reblock_tm_fork_r_factor_int[3]=32
# reblock_tm_fork_c_factor_int[3]=16
#Test id=42
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x38c49180]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 24}, broadcast: {r: 16}, broadcast: {c: 10}]'
  input1_tms: '[broadcast: {z: 58}, broadcast: {r: 16}, broadcast: {c: 10}]'
  input2_tms: '[broadcast: {z: 22}, broadcast: {r: 16}, broadcast: {c: 10}]'
  input3_tms: '[broadcast: {z: 52}, broadcast: {r: 16}, broadcast: {c: 10}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3a1d74c0], [5, 0x3a5f14e0]]'
  output1_dram_buffers: '[[2, 0x3b8c7300], [5, 0x3c2b0b20]]'
  output2_dram_buffers: '[[2, 0x3cd1c060], [5, 0x3cefd480], [3, 0x3d0de8a0], [3, 0x3d2bfcc0]]'
  output3_dram_buffers: '[[2, 0x3d9b4280], [5, 0x3de25aa0], [3, 0x3e2972c0], [3, 0x3e708ae0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 24
  output0_mb_r: 8
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 24
  op0_mb_r: 8
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 58
  output1_mb_r: 16
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 58
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 22
  output2_mb_r: 1
  output2_mb_c: 5
  output2_ub_r: 8
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 22
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 52
  output3_mb_r: 8
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 52
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=10
# tm_r_factor[0]=16
# effective_consumer_grid_size_r[0]=32
# effective_consumer_grid_size_c[0]=10
# effective_consumer_grid_size_r_reblock[0]=32
# effective_consumer_grid_size_c_reblock[0]=10
# reblock_tm_fork_r_factor_int[0]=32
# reblock_tm_fork_c_factor_int[0]=10
# tm_c_factor[1]=10
# tm_r_factor[1]=16
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=20
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=20
# reblock_tm_fork_r_factor_int[1]=16
# reblock_tm_fork_c_factor_int[1]=20
# tm_c_factor[2]=10
# tm_r_factor[2]=16
# effective_consumer_grid_size_r[2]=32
# effective_consumer_grid_size_c[2]=20
# effective_consumer_grid_size_r_reblock[2]=32
# effective_consumer_grid_size_c_reblock[2]=20
# reblock_tm_fork_r_factor_int[2]=32
# reblock_tm_fork_c_factor_int[2]=20
# tm_c_factor[3]=10
# tm_r_factor[3]=16
# effective_consumer_grid_size_r[3]=32
# effective_consumer_grid_size_c[3]=20
# effective_consumer_grid_size_r_reblock[3]=32
# effective_consumer_grid_size_c_reblock[3]=20
# reblock_tm_fork_r_factor_int[3]=32
# reblock_tm_fork_c_factor_int[3]=20
#Test id=43
- device: GRAYSKULL
  entries: 10
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 7
  op2_loc_c: 8
  op2_loc_r: 7
  op3_loc_c: 9
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x301ae9e0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 59}, broadcast: {r: 12}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 6}, broadcast: {r: 12}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 61}, broadcast: {r: 12}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 47}, broadcast: {r: 12}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x301fbba0]]'
  output1_dram_buffers: '[[1, 0x356ba580]]'
  output2_dram_buffers: '[[1, 0x361e9e00]]'
  output3_dram_buffers: '[[1, 0x3ba9b1e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 59
  output0_mb_r: 12
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 59
  op0_mb_r: 6
  op0_mb_c: 3
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 12
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 6
  op1_mb_r: 4
  op1_mb_c: 2
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 61
  output2_mb_r: 12
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 61
  op2_mb_r: 3
  op2_mb_c: 3
  op2_ub_r: 4
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 47
  output3_mb_r: 12
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 2
  op3_t: 47
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 20
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=6
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=6
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=18
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=18
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=18
# tm_c_factor[2]=6
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=6
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=24
# effective_consumer_grid_size_c[3]=18
# effective_consumer_grid_size_r_reblock[3]=24
# effective_consumer_grid_size_c_reblock[3]=18
# reblock_tm_fork_r_factor_int[3]=24
# reblock_tm_fork_c_factor_int[3]=18
#Test id=44
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 6
  op1_loc_c: 9
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x365ebd00]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 29}, broadcast: {r: 48}]'
  input1_tms: '[broadcast: {z: 52}, broadcast: {r: 48}]'
  input2_tms: '[broadcast: {z: 6}, broadcast: {r: 48}]'
  input3_tms: '[broadcast: {z: 33}, broadcast: {r: 48}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3763a4e0], [6, 0x37c2cd00]]'
  output1_dram_buffers: '[[6, 0x395d1dc0]]'
  output2_dram_buffers: '[[6, 0x3e063320], [6, 0x3e100b40], [7, 0x3e19e360], [6, 0x3e23bb80]]'
  output3_dram_buffers: '[[6, 0x3efb8780], [6, 0x3f31aba0], [7, 0x3f67cfc0], [6, 0x3f9df3e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 29
  output0_mb_r: 4
  output0_mb_c: 1
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 29
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 16
  output1_mb_c: 1
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 52
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 6
  output2_mb_r: 4
  output2_mb_c: 1
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 6
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 33
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 33
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=48
# effective_consumer_grid_size_r[0]=96
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=96
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=96
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=48
# effective_consumer_grid_size_r[1]=48
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=48
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=48
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=48
# effective_consumer_grid_size_r[2]=192
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=192
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=192
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=48
# effective_consumer_grid_size_r[3]=192
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=192
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=192
# reblock_tm_fork_c_factor_int[3]=1
#Test id=45
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 4
  op0_loc_r: 6
  op1_loc_c: 8
  op1_loc_r: 2
  op2_loc_c: 10
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x3f044b40]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 59}]'
  input1_tms: '[broadcast: {z: 52}]'
  input2_tms: '[broadcast: {z: 13}]'
  input3_tms: '[broadcast: {z: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3f0689c0]]'
  output1_dram_buffers: '[[7, 0x3f60f0e0]]'
  output2_dram_buffers: '[[7, 0x3fb119a0]]'
  output3_dram_buffers: '[[7, 0x3fcef8a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 59
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 59
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 52
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 13
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 12
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 12
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=46
- device: GRAYSKULL
  entries: 48
  op0_loc_c: 4
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 7
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x3020ef20]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 9}, broadcast: {r: 6}, broadcast: {c: 8}]'
  input1_tms: '[broadcast: {z: 9}, broadcast: {r: 6}, broadcast: {c: 8}]'
  input2_tms: '[broadcast: {z: 7}, broadcast: {r: 6}, broadcast: {c: 8}]'
  input3_tms: '[broadcast: {z: 2}, broadcast: {r: 6}, broadcast: {c: 8}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x30306ea0]]'
  output1_dram_buffers: '[[4, 0x354ce540]]'
  output2_dram_buffers: '[[4, 0x3a7bae00]]'
  output3_dram_buffers: '[[4, 0x3e75f2a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 6
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 9
  op0_mb_r: 2
  op0_mb_c: 4
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 6
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 9
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 6
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 7
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 6
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=8
# tm_r_factor[0]=6
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=6
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=8
# tm_r_factor[1]=6
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=16
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=16
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=16
# tm_c_factor[2]=8
# tm_r_factor[2]=6
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=8
# tm_r_factor[3]=6
# effective_consumer_grid_size_r[3]=18
# effective_consumer_grid_size_c[3]=16
# effective_consumer_grid_size_r_reblock[3]=18
# effective_consumer_grid_size_c_reblock[3]=16
# reblock_tm_fork_r_factor_int[3]=18
# reblock_tm_fork_c_factor_int[3]=16
#Test id=47
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 6
  op0_loc_r: 6
  op1_loc_c: 8
  op1_loc_r: 3
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x31a59d40]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 5
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 2}, broadcast: {r: 15}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 8}, broadcast: {r: 15}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 43}, broadcast: {r: 15}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 19}, broadcast: {r: 15}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x31aa7620], [0, 0x31dbae40]]'
  output1_dram_buffers: '[[3, 0x3237a940]]'
  output2_dram_buffers: '[[3, 0x33c54260], [0, 0x356c8a80], [5, 0x3713d2a0], [0, 0x38bb1ac0], [0, 0x3a6262e0]]'
  output3_dram_buffers: '[[3, 0x3c1de600], [0, 0x3df17a20]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 15
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 5
  output1_mb_c: 12
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 8
  op1_mb_r: 5
  op1_mb_c: 12
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 5
  output2_t: 43
  output2_mb_r: 3
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 43
  op2_mb_r: 3
  op2_mb_c: 12
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 19
  output3_mb_r: 15
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 19
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=12
# tm_r_factor[0]=15
# effective_consumer_grid_size_r[0]=15
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=15
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=15
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=12
# tm_r_factor[1]=15
# effective_consumer_grid_size_r[1]=15
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=15
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=15
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=12
# tm_r_factor[2]=15
# effective_consumer_grid_size_r[2]=75
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=75
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=75
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=12
# tm_r_factor[3]=15
# effective_consumer_grid_size_r[3]=15
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=15
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=15
# reblock_tm_fork_c_factor_int[3]=24
#Test id=48
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 5
  op1_loc_c: 7
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x3500be40]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 4
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 37}, broadcast: {r: 4}, broadcast: {c: 16}]'
  input1_tms: '[broadcast: {z: 4}, broadcast: {r: 4}, broadcast: {c: 16}]'
  input2_tms: '[broadcast: {z: 39}, broadcast: {r: 4}, broadcast: {c: 16}]'
  input3_tms: '[broadcast: {z: 56}, broadcast: {r: 4}, broadcast: {c: 16}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x35209f40], [0, 0x35718f60], [2, 0x35c27f80], [0, 0x36136fa0]]'
  output1_dram_buffers: '[[5, 0x36777540]]'
  output2_dram_buffers: '[[5, 0x3702cbe0], [0, 0x37581c00], [2, 0x37ad6c20], [0, 0x3802bc40]]'
  output3_dram_buffers: '[[5, 0x3d1e8b20], [0, 0x3e138b40]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 37
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 37
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 4
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 4
  op1_mb_r: 4
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 39
  output2_mb_r: 1
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 4
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 39
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 4
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 56
  output3_mb_r: 2
  output3_mb_c: 4
  output3_ub_r: 2
  output3_ub_c: 2
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 56
  op3_mb_r: 2
  op3_mb_c: 4
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=16
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=32
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=32
# reblock_tm_fork_r_factor_int[0]=8
# reblock_tm_fork_c_factor_int[0]=32
# tm_c_factor[1]=16
# tm_r_factor[1]=4
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=16
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=16
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=16
# tm_c_factor[2]=16
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=32
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=32
# reblock_tm_fork_r_factor_int[2]=8
# reblock_tm_fork_c_factor_int[2]=32
# tm_c_factor[3]=16
# tm_r_factor[3]=4
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=32
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=32
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=32
#Test id=49
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x32886fe0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 52}, broadcast: {c: 42}]'
  input1_tms: '[broadcast: {z: 16}, broadcast: {c: 42}]'
  input2_tms: '[broadcast: {z: 9}, broadcast: {c: 42}]'
  input3_tms: '[broadcast: {z: 22}, broadcast: {c: 42}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x36bccb60], [3, 0x37205380], [1, 0x3783dba0]]'
  output1_dram_buffers: '[[3, 0x3a131180]]'
  output2_dram_buffers: '[[3, 0x3f048320]]'
  output3_dram_buffers: '[[3, 0x3f5d6e20]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 1
  output0_t: 52
  output0_mb_r: 1
  output0_mb_c: 14
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 52
  op0_mb_r: 1
  op0_mb_c: 14
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 1
  output1_mb_c: 14
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 16
  op1_mb_r: 1
  op1_mb_c: 14
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 1
  output2_mb_c: 14
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 9
  op2_mb_r: 1
  op2_mb_c: 14
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 22
  output3_mb_r: 1
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 7
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 22
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=42
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=126
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=126
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=126
# tm_c_factor[1]=42
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=42
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=42
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=42
# tm_c_factor[2]=42
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=42
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=42
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=42
# tm_c_factor[3]=42
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=42
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=42
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=42
