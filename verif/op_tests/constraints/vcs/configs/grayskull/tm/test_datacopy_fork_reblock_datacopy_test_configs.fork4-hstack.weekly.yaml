#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 2
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x3808d820], [7, 0x380c2040], [7, 0x380f6860], [6, 0x3812b080], [1, 0x3815f8a0], [3, 0x381940c0], [6, 0x381c88e0], [6, 0x381fd100], [3, 0x38231920], [5, 0x38266140], [1, 0x3829a960], [5, 0x382cf180], [5, 0x383039a0], [4, 0x383381c0], [6, 0x3836c9e0], [7, 0x383a1200], [4, 0x383d5a20], [5, 0x3840a240], [7, 0x3843ea60], [2, 0x38473280], [6, 0x384a7aa0], [0, 0x384dc2c0], [6, 0x38510ae0], [7, 0x38545300]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3dcdcf40], [7, 0x3dd45f60], [7, 0x3ddaef80], [6, 0x3de17fa0], [1, 0x3de80fc0], [3, 0x3dee9fe0], [6, 0x3df53000], [6, 0x3dfbc020], [3, 0x3e025040], [5, 0x3e08e060], [1, 0x3e0f7080], [5, 0x3e1600a0]]'
  output1_dram_buffers: '[[4, 0x3ec5ef20], [7, 0x3ecc7f40], [7, 0x3ed30f60], [6, 0x3ed99f80], [1, 0x3ee02fa0], [3, 0x3ee6bfc0], [6, 0x3eed4fe0], [6, 0x3ef3e000], [3, 0x3efa7020], [5, 0x3f010040], [1, 0x3f079060], [5, 0x3f0e2080]]'
  output2_dram_buffers: '[[4, 0x3f466ea0], [7, 0x3f4cfec0], [7, 0x3f538ee0], [6, 0x3f5a1f00], [1, 0x3f60af20], [3, 0x3f673f40], [6, 0x3f6dcf60], [6, 0x3f745f80], [3, 0x3f7aefa0], [5, 0x3f817fc0], [1, 0x3f880fe0], [5, 0x3f8ea000]]'
  output3_dram_buffers: '[[4, 0x3fa397e0], [7, 0x3faa2800], [7, 0x3fb0b820], [6, 0x3fb74840], [1, 0x3fbdd860], [3, 0x3fc46880], [6, 0x3fcaf8a0], [6, 0x3fd188c0], [3, 0x3fd818e0], [5, 0x3fdea900], [1, 0x3fe53920], [5, 0x3febc940]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 6
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 12
  output0_ub_r: 2
  output0_ub_c: 4
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 2
  op0_ub_c: 4
  output1_grid_size_c: 2
  output1_grid_size_r: 6
  output1_t: 1
  output1_mb_r: 2
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 2
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 2
  output2_grid_size_r: 6
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 8
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 2
  output3_grid_size_r: 6
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: GRAYSKULL
  entries: 72
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 8
  op3_loc_r: 6
  input_t: 2
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[1, 0x30113120], [4, 0x30d8bd40], [0, 0x31a04960], [6, 0x3267d580]]'
  target_device: 0
  input_count: 18
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x335f8180]]'
  output1_dram_buffers: '[[1, 0x367eb6e0]]'
  output2_dram_buffers: '[[1, 0x39b6e980]]'
  output3_dram_buffers: '[[1, 0x3ce0fb80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 2
  output0_mb_c: 88
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 11
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 2
  output1_mb_c: 88
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 11
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 88
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 88
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 11
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 144
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=2
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 8
  input_t: 64
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x3064cc00], [3, 0x30e6cc20], [7, 0x3168cc40], [7, 0x31eacc60]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3659a8c0]]'
  output1_dram_buffers: '[[1, 0x39093ec0]]'
  output2_dram_buffers: '[[1, 0x3b947540]]'
  output3_dram_buffers: '[[1, 0x3ddb7e80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 16
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 8
  op0_t: 32
  op0_mb_r: 2
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 32
  output1_mb_r: 16
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 32
  op1_mb_r: 2
  op1_mb_c: 4
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 32
  output2_mb_r: 16
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 32
  op2_mb_r: 8
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 32
  output3_mb_r: 16
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 32
  op3_mb_r: 1
  op3_mb_c: 8
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=8
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 8
  op1_loc_c: 6
  op1_loc_r: 6
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 7
  input_t: 36
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x302d2940], [6, 0x31bf5960]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x33600f40]]'
  output1_dram_buffers: '[[2, 0x3684f9a0]]'
  output2_dram_buffers: '[[2, 0x39b12880]]'
  output3_dram_buffers: '[[2, 0x3cd7c2c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 18
  output0_mb_r: 1
  output0_mb_c: 176
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 18
  op0_mb_r: 1
  op0_mb_c: 11
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 18
  output1_mb_r: 1
  output1_mb_c: 176
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 18
  op1_mb_r: 1
  op1_mb_c: 11
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 1
  output2_mb_c: 176
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 18
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 1
  output3_mb_c: 176
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 18
  op3_mb_r: 1
  op3_mb_c: 11
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=4
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 56
  input_mb_r: 12
  input_mb_c: 6
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x306332e0], [1, 0x30e32b00], [1, 0x31632320], [5, 0x31e31b40], [7, 0x32631360], [3, 0x32e30b80]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33797880]]'
  output1_dram_buffers: '[[3, 0x36f4be20]]'
  output2_dram_buffers: '[[3, 0x39fe83c0]]'
  output3_dram_buffers: '[[3, 0x3cffc5e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 36
  output0_mb_c: 24
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 28
  op0_mb_r: 3
  op0_mb_c: 4
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 36
  output1_mb_c: 24
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 28
  op1_mb_r: 3
  op1_mb_c: 6
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 36
  output2_mb_c: 24
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 28
  op2_mb_r: 6
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 36
  output3_mb_c: 24
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 28
  op3_mb_r: 3
  op3_mb_c: 6
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=5
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 6
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 20
  input_mb_r: 1
  input_mb_c: 9
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x32b6dfe0], [5, 0x32cdba00], [6, 0x32e49420], [4, 0x32fb6e40]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 2
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3abef840]]'
  output1_dram_buffers: '[[4, 0x3ca95440]]'
  output2_dram_buffers: '[[4, 0x3edfa160]]'
  output3_dram_buffers: '[[4, 0x3f4ba640]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 4
  output0_mb_c: 18
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 10
  op0_mb_r: 1
  op0_mb_c: 9
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 4
  output1_mb_c: 18
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 10
  op1_mb_r: 2
  op1_mb_c: 9
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 4
  output2_mb_c: 18
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 10
  op2_mb_r: 4
  op2_mb_c: 9
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 10
  output3_mb_r: 4
  output3_mb_c: 18
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 4
  op3_t: 10
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=6
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 8
  op3_loc_c: 10
  op3_loc_r: 9
  input_t: 30
  input_mb_r: 1
  input_mb_c: 13
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x326db9e0], [3, 0x3333c600]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x35cbc820]]'
  output1_dram_buffers: '[[0, 0x3abe9980]]'
  output2_dram_buffers: '[[0, 0x3c713940]]'
  output3_dram_buffers: '[[0, 0x3e5b7800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 15
  output0_mb_r: 1
  output0_mb_c: 208
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 15
  op0_mb_r: 1
  op0_mb_c: 13
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 15
  output1_mb_r: 1
  output1_mb_c: 208
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 15
  op1_mb_r: 1
  op1_mb_c: 13
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 15
  output2_mb_r: 1
  output2_mb_c: 208
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 15
  op2_mb_r: 1
  op2_mb_c: 13
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 15
  output3_mb_r: 1
  output3_mb_c: 208
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 15
  op3_mb_r: 1
  op3_mb_c: 13
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=7
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 26
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x30342920], [6, 0x30762d40], [2, 0x30b83160], [2, 0x30fa3580], [0, 0x313c39a0], [0, 0x317e3dc0], [4, 0x31c041e0], [4, 0x32024600], [4, 0x32444a20], [7, 0x32864e40], [6, 0x32c85260], [6, 0x330a5680]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x336a5180]]'
  output1_dram_buffers: '[[6, 0x36aabd40]]'
  output2_dram_buffers: '[[6, 0x39cbe080]]'
  output3_dram_buffers: '[[6, 0x3ce6b580]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 6
  output0_mb_c: 80
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 6
  op0_t: 13
  op0_mb_r: 1
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 13
  output1_mb_r: 6
  output1_mb_c: 80
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 13
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 6
  output2_mb_c: 80
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 13
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 13
  output3_mb_r: 6
  output3_mb_c: 80
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 13
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=8
- device: GRAYSKULL
  entries: 12
  op0_loc_c: 1
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 8
  op3_loc_r: 9
  input_t: 58
  input_mb_r: 1
  input_mb_c: 13
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x309bb1a0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x333b4360]]'
  output1_dram_buffers: '[[0, 0x359c3aa0]]'
  output2_dram_buffers: '[[0, 0x37dabd00]]'
  output3_dram_buffers: '[[0, 0x3a1f35c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 29
  output0_mb_r: 1
  output0_mb_c: 52
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 29
  op0_mb_r: 1
  op0_mb_c: 13
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 29
  output1_mb_r: 1
  output1_mb_c: 52
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 29
  op1_mb_r: 1
  op1_mb_c: 13
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 29
  output2_mb_r: 1
  output2_mb_c: 52
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 29
  op2_mb_r: 1
  op2_mb_c: 13
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 29
  output3_mb_r: 1
  output3_mb_c: 52
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 29
  op3_mb_r: 1
  op3_mb_c: 13
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=8
#Test id=9
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 6
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[6, 0x31fb3fe0], [3, 0x323e4800], [5, 0x32815020], [7, 0x32c45840], [1, 0x33076060], [4, 0x334a6880], [5, 0x338d70a0], [0, 0x33d078c0], [2, 0x341380e0], [1, 0x34568900]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x34a1bd60]]'
  output1_dram_buffers: '[[6, 0x376bad40]]'
  output2_dram_buffers: '[[6, 0x3a628fe0]]'
  output3_dram_buffers: '[[6, 0x3d37e7a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 5
  output0_mb_c: 176
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 5
  op0_t: 3
  op0_mb_r: 1
  op0_mb_c: 11
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 5
  output1_mb_c: 176
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 5
  op1_t: 3
  op1_mb_r: 1
  op1_mb_c: 11
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 5
  output2_mb_c: 176
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 5
  op2_t: 3
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 5
  output3_mb_c: 176
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 5
  op3_t: 3
  op3_mb_r: 1
  op3_mb_c: 11
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=10
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 8
  op2_loc_c: 8
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 22
  input_mb_r: 1
  input_mb_c: 15
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x31b88480], [2, 0x326018a0], [0, 0x3307acc0], [3, 0x33af40e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3510d6a0]]'
  output1_dram_buffers: '[[6, 0x37fc01c0]]'
  output2_dram_buffers: '[[6, 0x3aba0800]]'
  output3_dram_buffers: '[[6, 0x3d5d6460]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 11
  output0_mb_r: 2
  output0_mb_c: 240
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 11
  op0_mb_r: 1
  op0_mb_c: 15
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 11
  output1_mb_r: 2
  output1_mb_c: 240
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 2
  op1_t: 11
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 11
  output2_mb_r: 2
  output2_mb_c: 240
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 11
  op2_mb_r: 1
  op2_mb_c: 15
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 11
  output3_mb_r: 2
  output3_mb_c: 240
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 11
  op3_mb_r: 1
  op3_mb_c: 15
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=11
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 8
  op3_loc_r: 2
  input_t: 64
  input_mb_r: 1
  input_mb_c: 9
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x34644da0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x367f6c60]]'
  output1_dram_buffers: '[[0, 0x3a55c640]]'
  output2_dram_buffers: '[[0, 0x3c3f2840]]'
  output3_dram_buffers: '[[0, 0x3e148120]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 32
  output0_mb_r: 1
  output0_mb_c: 108
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 32
  op0_mb_r: 1
  op0_mb_c: 9
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 32
  output1_mb_r: 1
  output1_mb_c: 108
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 32
  op1_mb_r: 1
  op1_mb_c: 9
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 32
  output2_mb_r: 1
  output2_mb_c: 108
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 32
  op2_mb_r: 1
  op2_mb_c: 9
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 32
  output3_mb_r: 1
  output3_mb_c: 108
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 32
  op3_mb_r: 1
  op3_mb_c: 9
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=8
#Test id=12
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 8
  op3_loc_r: 5
  input_t: 48
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x32ee24a0], [0, 0x331ee4c0], [7, 0x334fa4e0], [3, 0x33806500], [0, 0x33b12520], [4, 0x33e1e540], [7, 0x3412a560], [2, 0x34436580], [5, 0x347425a0], [0, 0x34a4e5c0], [5, 0x34d5a5e0], [4, 0x35066600]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x36874340]]'
  output1_dram_buffers: '[[2, 0x38f35620]]'
  output2_dram_buffers: '[[2, 0x3b409380]]'
  output3_dram_buffers: '[[2, 0x3d8f7de0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 24
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 24
  op0_mb_r: 6
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 24
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 24
  op1_mb_r: 8
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 24
  output2_mb_r: 24
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 8
  op2_t: 24
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 24
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 2
  op3_t: 24
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=13
- device: GRAYSKULL
  entries: 56
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 9
  op3_loc_c: 10
  op3_loc_r: 8
  input_t: 12
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x32433fa0], [1, 0x32c337c0], [4, 0x33432fe0], [6, 0x33c32800]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x36f214e0]]'
  output1_dram_buffers: '[[0, 0x39d93a80]]'
  output2_dram_buffers: '[[0, 0x3bf85700]]'
  output3_dram_buffers: '[[0, 0x3df83c00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 12
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 6
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 12
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 6
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 6
  output2_mb_r: 12
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 6
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 12
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 6
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 112
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=14
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 48
  input_mb_r: 1
  input_mb_c: 13
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x301ad7c0], [2, 0x307ddde0], [0, 0x30e0e400], [1, 0x3143ea20], [4, 0x31a6f040], [0, 0x3209f660], [6, 0x326cfc80], [5, 0x32d002a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x333d00a0]]'
  output1_dram_buffers: '[[5, 0x36a41f80]]'
  output2_dram_buffers: '[[5, 0x39c05360]]'
  output3_dram_buffers: '[[5, 0x3cdb6500]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 20
  output0_mb_c: 52
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 24
  op0_mb_r: 5
  op0_mb_c: 13
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 20
  output1_mb_c: 52
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 24
  op1_mb_r: 5
  op1_mb_c: 13
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 24
  output2_mb_r: 20
  output2_mb_c: 52
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 4
  op2_t: 24
  op2_mb_r: 1
  op2_mb_c: 13
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 20
  output3_mb_c: 52
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 5
  op3_t: 24
  op3_mb_r: 4
  op3_mb_c: 13
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=2
#Test id=15
- device: GRAYSKULL
  entries: 32
  op0_loc_c: 2
  op0_loc_r: 7
  op1_loc_c: 6
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 32
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x345ec4a0], [3, 0x347f44c0], [4, 0x349fc4e0], [3, 0x34c04500], [2, 0x34e0c520], [6, 0x35014540], [6, 0x3521c560], [1, 0x35424580], [0, 0x3562c5a0], [5, 0x358345c0], [5, 0x35a3c5e0], [5, 0x35c44600], [1, 0x35e4c620], [3, 0x36054640], [0, 0x3625c660], [0, 0x36464680]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x37698fe0]]'
  output1_dram_buffers: '[[7, 0x39a9c480]]'
  output2_dram_buffers: '[[7, 0x3bc6f960]]'
  output3_dram_buffers: '[[7, 0x3dd6cac0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 8
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 16
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 8
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 16
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 8
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 16
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 8
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 8
  op3_t: 16
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=16
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 8
  op3_loc_c: 8
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x33b5efc0], [3, 0x33b60160], [7, 0x33b61300], [7, 0x33b624a0], [7, 0x33b63640], [3, 0x33b647e0], [7, 0x33b65980], [0, 0x33b66b20], [0, 0x33b67cc0], [5, 0x33b68e60], [5, 0x33b6a000], [6, 0x33b6b1a0], [3, 0x33b6c340], [5, 0x33b6d4e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3ec405a0], [3, 0x3ec41740], [7, 0x3ec428e0], [7, 0x3ec43a80], [7, 0x3ec44c20], [3, 0x3ec45dc0], [7, 0x3ec46f60], [0, 0x3ec48100], [0, 0x3ec492a0], [5, 0x3ec4a440], [5, 0x3ec4b5e0], [6, 0x3ec4c780], [3, 0x3ec4d920], [5, 0x3ec4eac0]]'
  output1_dram_buffers: '[[1, 0x3ed16f40], [3, 0x3ed180e0], [7, 0x3ed19280], [7, 0x3ed1a420], [7, 0x3ed1b5c0], [3, 0x3ed1c760], [7, 0x3ed1d900], [0, 0x3ed1eaa0], [0, 0x3ed1fc40], [5, 0x3ed20de0], [5, 0x3ed21f80], [6, 0x3ed23120], [3, 0x3ed242c0], [5, 0x3ed25460]]'
  output2_dram_buffers: '[[1, 0x3f5b3040], [3, 0x3f5baae0]]'
  output3_dram_buffers: '[[1, 0x3fa08980], [3, 0x3fa09260], [7, 0x3fa09b40], [7, 0x3fa0a420], [7, 0x3fa0ad00], [3, 0x3fa0b5e0], [7, 0x3fa0bec0], [0, 0x3fa0c7a0], [0, 0x3fa0d080], [5, 0x3fa0d960], [5, 0x3fa0e240], [6, 0x3fa0eb20], [3, 0x3fa0f400], [5, 0x3fa0fce0], [1, 0x3fa105c0], [2, 0x3fa10ea0], [2, 0x3fa11780], [7, 0x3fa12060], [1, 0x3fa12940], [6, 0x3fa13220], [3, 0x3fa13b00], [0, 0x3fa143e0], [1, 0x3fa14cc0], [0, 0x3fa155a0], [3, 0x3fa15e80], [1, 0x3fa16760], [3, 0x3fa17040], [0, 0x3fa17920]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 7
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 2
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 7
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 7
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 2
  op1_grid_size_r: 7
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 2
  output2_ub_r: 7
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 4
  output3_grid_size_r: 7
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 7
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=17
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 40
  input_mb_r: 1
  input_mb_c: 5
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x3a128f00], [4, 0x3a324c20]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 9
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3ade1660]]'
  output1_dram_buffers: '[[4, 0x3cc091c0]]'
  output2_dram_buffers: '[[4, 0x3d77a8a0]]'
  output3_dram_buffers: '[[4, 0x3e45aec0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 20
  output0_mb_r: 1
  output0_mb_c: 100
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 1
  op0_t: 20
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 1
  output1_mb_c: 100
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 20
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 1
  output2_mb_c: 100
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 20
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 1
  output3_mb_c: 100
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 20
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=18
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 4
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 3
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x34870420], [5, 0x348d1c40], [4, 0x34933460], [1, 0x34994c80], [7, 0x349f64a0], [4, 0x34a57cc0], [7, 0x34ab94e0], [3, 0x34b1ad00], [7, 0x34b7c520], [6, 0x34bddd40], [0, 0x34c3f560], [6, 0x34ca0d80]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3807e5e0]]'
  output1_dram_buffers: '[[2, 0x3b82b640]]'
  output2_dram_buffers: '[[2, 0x3d6f6ce0]]'
  output3_dram_buffers: '[[2, 0x3f466800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 18
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 9
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 18
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 3
  op1_t: 2
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 18
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 3
  op2_t: 2
  op2_mb_r: 6
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 18
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 6
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=19
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 1
  input_t: 14
  input_mb_r: 1
  input_mb_c: 12
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[7, 0x328f7120], [0, 0x32c4c340], [3, 0x32fa1560], [5, 0x332f6780], [3, 0x3364b9a0], [2, 0x339a0bc0], [2, 0x33cf5de0], [5, 0x3404b000], [1, 0x343a0220], [0, 0x346f5440], [3, 0x34a4a660], [7, 0x34d9f880]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hstack: 2]'
  input1_tms: '[hstack: 2]'
  input2_tms: '[hstack: 2]'
  input3_tms: '[hstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x35e2f4a0]]'
  output1_dram_buffers: '[[7, 0x38709120]]'
  output2_dram_buffers: '[[7, 0x3afc38a0]]'
  output3_dram_buffers: '[[7, 0x3d7cd4e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 7
  output0_mb_r: 30
  output0_mb_c: 48
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 6
  op0_t: 7
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 7
  output1_mb_r: 30
  output1_mb_c: 48
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 10
  op1_t: 7
  op1_mb_r: 3
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 30
  output2_mb_c: 48
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 7
  op2_mb_r: 5
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 7
  output3_mb_r: 30
  output3_mb_c: 48
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 7
  op3_mb_r: 5
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=10
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=10
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
