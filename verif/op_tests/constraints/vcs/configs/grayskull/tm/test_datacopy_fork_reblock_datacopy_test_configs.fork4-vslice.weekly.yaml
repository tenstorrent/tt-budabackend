#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 3
  op1_loc_c: 7
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x39749720], [7, 0x3976a440], [7, 0x3978b160], [6, 0x397abe80], [1, 0x397ccba0], [3, 0x397ed8c0], [6, 0x3980e5e0], [6, 0x3982f300], [3, 0x39850020], [5, 0x39870d40], [1, 0x39891a60], [5, 0x398b2780], [5, 0x398d34a0], [4, 0x398f41c0], [6, 0x39914ee0], [7, 0x39935c00], [4, 0x39956920], [5, 0x39977640], [7, 0x39998360], [2, 0x399b9080], [6, 0x399d9da0], [0, 0x399faac0], [6, 0x39a1b7e0], [7, 0x39a3c500], [5, 0x39a5d220], [0, 0x39a7df40], [3, 0x39a9ec60], [1, 0x39abf980], [7, 0x39ae06a0], [5, 0x39b013c0], [7, 0x39b220e0], [7, 0x39b42e00], [2, 0x39b63b20], [4, 0x39b84840], [2, 0x39ba5560], [5, 0x39bc6280], [7, 0x39be6fa0], [0, 0x39c07cc0], [3, 0x39c289e0], [0, 0x39c49700], [2, 0x39c6a420], [1, 0x39c8b140], [5, 0x39cabe60], [4, 0x39cccb80], [3, 0x39ced8a0], [1, 0x39d0e5c0], [3, 0x39d2f2e0], [0, 0x39d50000], [4, 0x39d70d20], [5, 0x39d91a40], [6, 0x39db2760], [7, 0x39dd3480], [4, 0x39df41a0], [5, 0x39e14ec0], [1, 0x39e35be0], [2, 0x39e56900], [1, 0x39e77620], [2, 0x39e98340], [6, 0x39eb9060], [5, 0x39ed9d80]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 10
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 10]'
  input1_tms: '[vslice: 10]'
  input2_tms: '[vslice: 10]'
  input3_tms: '[vslice: 10]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3a534580], [7, 0x3a6be1a0], [7, 0x3a847dc0], [6, 0x3a9d19e0], [1, 0x3ab5b600]]'
  output1_dram_buffers: '[[4, 0x3be8f980], [7, 0x3bfd7ba0], [7, 0x3c11fdc0], [6, 0x3c267fe0], [1, 0x3c3b0200], [3, 0x3c4f8420]]'
  output2_dram_buffers: '[[4, 0x3e7dea80], [7, 0x3e9686a0], [7, 0x3eaf22c0], [6, 0x3ec7bee0], [1, 0x3ee05b00]]'
  output3_dram_buffers: '[[4, 0x3f4f07e0], [7, 0x3f638a00], [7, 0x3f780c20], [6, 0x3f8c8e40], [1, 0x3fa11060], [3, 0x3fb59280]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 5
  output0_t: 10
  output0_mb_r: 1
  output0_mb_c: 3
  output0_ub_r: 3
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 10
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 2
  output1_grid_size_r: 3
  output1_t: 10
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 10
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 5
  output2_t: 10
  output2_mb_r: 1
  output2_mb_c: 6
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 10
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 3
  output3_t: 10
  output3_mb_r: 5
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 10
  op3_mb_r: 5
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=10
# effective_consumer_grid_size_r[0]=50
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=50
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=10
# effective_consumer_grid_size_r[1]=30
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=30
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=10
# effective_consumer_grid_size_r[2]=50
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=50
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=5
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=10
# effective_consumer_grid_size_r[3]=30
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=30
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 6
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 3
  input_mb_c: 4
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x3131c340], [4, 0x31385360], [0, 0x313ee380], [6, 0x314573a0], [2, 0x314c03c0], [2, 0x315293e0], [4, 0x31592400], [5, 0x315fb420]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x36eaf340], [4, 0x36f81360], [0, 0x37053380], [6, 0x371253a0]]'
  output1_dram_buffers: '[[1, 0x3c6340e0], [4, 0x3c6c0100], [0, 0x3c74c120], [6, 0x3c7d8140], [2, 0x3c864160], [2, 0x3c8f0180]]'
  output2_dram_buffers: '[[1, 0x3daf06a0], [4, 0x3dc946c0]]'
  output3_dram_buffers: '[[1, 0x3f68a7e0], [4, 0x3f82e800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 4
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 3
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 8
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 12
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 12
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 2
  output3_mb_r: 12
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 2
  op3_mb_r: 12
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=7
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 5
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 5
  op3_loc_c: 10
  op3_loc_r: 7
  input_t: 2
  input_mb_r: 13
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x39cea8a0], [3, 0x39dbdcc0], [7, 0x39e910e0], [7, 0x39f64500], [5, 0x3a037920], [4, 0x3a10ad40], [5, 0x3a1de160], [5, 0x3a2b1580]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 3
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 26]'
  input1_tms: '[vslice: 26]'
  input2_tms: '[vslice: 26]'
  input3_tms: '[vslice: 26]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3cdd6ee0]]'
  output1_dram_buffers: '[[1, 0x3d575480]]'
  output2_dram_buffers: '[[1, 0x3ef10080]]'
  output3_dram_buffers: '[[1, 0x3f7b1800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 52
  output0_mb_r: 16
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 52
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 16
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 52
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 52
  output2_mb_r: 16
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 52
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 52
  output3_mb_r: 16
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 52
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=26
# effective_consumer_grid_size_r[0]=104
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=104
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=26
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=26
# effective_consumer_grid_size_r[1]=26
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=26
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=8
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=26
# effective_consumer_grid_size_r[2]=104
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=104
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=26
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=26
# effective_consumer_grid_size_r[3]=26
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=26
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=8
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 8
  op0_loc_r: 5
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 5
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 10
  input_mb_c: 1
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x30452920], [6, 0x30aab940], [4, 0x31104960], [4, 0x3175d980], [2, 0x31db69a0], [5, 0x3240f9c0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 3
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 60]'
  input1_tms: '[vslice: 60]'
  input2_tms: '[vslice: 60]'
  input3_tms: '[vslice: 60]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x32acb3a0]]'
  output1_dram_buffers: '[[2, 0x3573bd80]]'
  output2_dram_buffers: '[[2, 0x3807b440]]'
  output3_dram_buffers: '[[2, 0x3b644040]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 60
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 60
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 60
  output1_mb_r: 8
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 60
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 60
  output2_mb_r: 8
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 60
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 60
  output3_mb_r: 8
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 60
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=60
# effective_consumer_grid_size_r[0]=60
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=60
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=10
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=60
# effective_consumer_grid_size_r[1]=60
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=60
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=10
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=60
# effective_consumer_grid_size_r[2]=240
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=240
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=40
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=60
# effective_consumer_grid_size_r[3]=120
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=120
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=20
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 7
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 13
  input_mb_c: 3
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x3024aaa0], [1, 0x304c46c0], [1, 0x3073e2e0], [5, 0x309b7f00], [7, 0x30c31b20], [3, 0x30eab740], [4, 0x31125360], [5, 0x3139ef80], [0, 0x31618ba0], [2, 0x318927c0], [7, 0x31b0c3e0], [0, 0x31d86000], [6, 0x31fffc20], [2, 0x32279840], [0, 0x324f3460], [4, 0x3276d080], [5, 0x329e6ca0], [3, 0x32c608c0], [1, 0x32eda4e0], [7, 0x33154100]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 10
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 4]'
  input1_tms: '[vslice: 4]'
  input2_tms: '[vslice: 4]'
  input3_tms: '[vslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x334f0a40]]'
  output1_dram_buffers: '[[3, 0x366fe060]]'
  output2_dram_buffers: '[[3, 0x398e4b40]]'
  output3_dram_buffers: '[[3, 0x3ccbab00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 65
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 5
  op0_t: 4
  op0_mb_r: 13
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 65
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 5
  op1_t: 4
  op1_mb_r: 13
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 65
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 5
  op2_t: 4
  op2_mb_r: 13
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 65
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 5
  op3_t: 4
  op3_mb_r: 13
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=20
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=20
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=4
# effective_consumer_grid_size_r[1]=20
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=20
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=20
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=20
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=4
# effective_consumer_grid_size_r[3]=20
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=20
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=5
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 6
  op3_loc_c: 8
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x38a34d80], [5, 0x38b29da0], [6, 0x38c1edc0], [4, 0x38d13de0], [5, 0x38e08e00], [7, 0x38efde20], [6, 0x38ff2e40], [3, 0x390e7e60], [3, 0x391dce80], [1, 0x392d1ea0], [1, 0x393c6ec0], [7, 0x394bbee0], [6, 0x395b0f00], [0, 0x396a5f20], [1, 0x3979af40], [5, 0x3988ff60], [3, 0x39984f80], [6, 0x39a79fa0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 9
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 9]'
  input1_tms: '[vslice: 9]'
  input2_tms: '[vslice: 9]'
  input3_tms: '[vslice: 9]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3a91f8c0], [5, 0x3ad6e0e0], [6, 0x3b1bc900], [4, 0x3b60b120]]'
  output1_dram_buffers: '[[4, 0x3c30fe40], [5, 0x3c585e60], [6, 0x3c7fbe80], [4, 0x3ca71ea0], [5, 0x3cce7ec0], [7, 0x3cf5dee0], [6, 0x3d1d3f00]]'
  output2_dram_buffers: '[[4, 0x3d578b00], [5, 0x3d9c7320], [6, 0x3de15b40], [4, 0x3e264360]]'
  output3_dram_buffers: '[[4, 0x3e776440], [5, 0x3ebc4c60], [6, 0x3f013480], [4, 0x3f461ca0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 18
  output0_mb_r: 7
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 18
  op0_mb_r: 7
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 18
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 18
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 4
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 7
  output2_mb_c: 1
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 18
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 4
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 18
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=9
# effective_consumer_grid_size_r[0]=36
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=36
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=9
# effective_consumer_grid_size_r[1]=63
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=63
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=7
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=9
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=9
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=6
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x34e6ede0], [3, 0x34e96400], [5, 0x34ebda20], [0, 0x34ee5040], [1, 0x34f0c660], [5, 0x34f33c80], [5, 0x34f5b2a0], [3, 0x34f828c0], [0, 0x34fa9ee0], [7, 0x34fd1500], [4, 0x34ff8b20], [7, 0x35020140], [0, 0x35047760], [7, 0x3506ed80], [0, 0x350963a0], [1, 0x350bd9c0], [1, 0x350e4fe0], [6, 0x3510c600], [0, 0x35133c20], [4, 0x3515b240]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 10
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 5]'
  input1_tms: '[vslice: 5]'
  input2_tms: '[vslice: 5]'
  input3_tms: '[vslice: 5]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x35bc81c0], [3, 0x35c4b5e0], [5, 0x35ccea00], [0, 0x35d51e20], [1, 0x35dd5240], [5, 0x35e58660]]'
  output1_dram_buffers: '[[0, 0x371101c0], [3, 0x371935e0], [5, 0x37216a00], [0, 0x37299e20], [1, 0x3731d240], [5, 0x373a0660]]'
  output2_dram_buffers: '[[0, 0x3b4161a0], [3, 0x3b4995c0], [5, 0x3b51c9e0], [0, 0x3b59fe00], [1, 0x3b623220], [5, 0x3b6a6640]]'
  output3_dram_buffers: '[[0, 0x3fcaea00], [3, 0x3fd73820], [5, 0x3fe38640], [0, 0x3fefd460]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 5
  output0_mb_r: 1
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 5
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 5
  output1_mb_r: 1
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 5
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 3
  output2_grid_size_r: 2
  output2_t: 5
  output2_mb_r: 3
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 3
  op2_grid_size_r: 2
  op2_t: 5
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 4
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 1
  output3_mb_c: 3
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 5
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=5
# effective_consumer_grid_size_r[0]=30
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=30
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=5
# effective_consumer_grid_size_r[1]=30
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=30
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=5
# effective_consumer_grid_size_r[2]=10
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=10
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=5
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=7
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 4
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x31b7b800], [6, 0x31d1f820], [2, 0x31ec3840], [2, 0x32067860], [0, 0x3220b880], [0, 0x323af8a0], [4, 0x325538c0], [4, 0x326f78e0], [4, 0x3289b900], [7, 0x32a3f920], [6, 0x32be3940], [6, 0x32d87960], [5, 0x32f2b980], [6, 0x330cf9a0], [7, 0x332739c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x37ca3dc0], [6, 0x37eb0de0], [2, 0x380bde00], [2, 0x382cae20], [0, 0x384d7e40], [0, 0x386e4e60], [4, 0x388f1e80], [4, 0x38afeea0], [4, 0x38d0bec0], [7, 0x38f18ee0], [6, 0x39125f00], [6, 0x39332f20]]'
  output1_dram_buffers: '[[6, 0x3b3b48e0], [6, 0x3b512900], [2, 0x3b670920], [2, 0x3b7ce940], [0, 0x3b92c960], [0, 0x3ba8a980], [4, 0x3bbe89a0], [4, 0x3bd469c0], [4, 0x3bea49e0], [7, 0x3c002a00], [6, 0x3c160a20], [6, 0x3c2bea40], [5, 0x3c41ca60], [6, 0x3c57aa80], [7, 0x3c6d8aa0], [2, 0x3c836ac0], [7, 0x3c994ae0], [7, 0x3caf2b00]]'
  output2_dram_buffers: '[[6, 0x3cc563a0], [6, 0x3cecc3c0], [2, 0x3d1423e0], [2, 0x3d3b8400], [0, 0x3d62e420], [0, 0x3d8a4440], [4, 0x3db1a460], [4, 0x3dd90480], [4, 0x3e0064a0], [7, 0x3e27c4c0]]'
  output3_dram_buffers: '[[6, 0x3e728ac0], [6, 0x3e99eae0], [2, 0x3ec14b00], [2, 0x3ee8ab20], [0, 0x3f100b40], [0, 0x3f376b60], [4, 0x3f5ecb80], [4, 0x3f862ba0], [4, 0x3fad8bc0], [7, 0x3fd4ebe0]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 4
  output0_t: 2
  output0_mb_r: 15
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 3
  op0_grid_size_r: 4
  op0_t: 2
  op0_mb_r: 15
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 3
  output1_grid_size_r: 6
  output1_t: 2
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 4
  op1_grid_size_c: 3
  op1_grid_size_r: 6
  op1_t: 2
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 2
  output2_grid_size_r: 5
  output2_t: 2
  output2_mb_r: 12
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 2
  op2_grid_size_r: 5
  op2_t: 2
  op2_mb_r: 12
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 10
  output3_t: 2
  output3_mb_r: 6
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 1
  op3_grid_size_r: 10
  op3_t: 2
  op3_mb_r: 6
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=10
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=10
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=20
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=20
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=8
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x3a65c620], [6, 0x3a6a2640], [6, 0x3a6e8660], [3, 0x3a72e680], [2, 0x3a7746a0], [5, 0x3a7ba6c0], [7, 0x3a8006e0], [6, 0x3a846700], [4, 0x3a88c720], [3, 0x3a8d2740]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 10
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 20]'
  input1_tms: '[vslice: 20]'
  input2_tms: '[vslice: 20]'
  input3_tms: '[vslice: 20]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3ab72a80], [6, 0x3acd0aa0]]'
  output1_dram_buffers: '[[0, 0x3b1856a0], [6, 0x3b2e36c0]]'
  output2_dram_buffers: '[[0, 0x3c30b1c0], [6, 0x3c4691e0]]'
  output3_dram_buffers: '[[0, 0x3cb18580], [6, 0x3cc765a0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 20
  output0_mb_r: 16
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 20
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 2
  output1_mb_c: 1
  output1_ub_r: 8
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 20
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 2
  output2_mb_c: 1
  output2_ub_r: 8
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 20
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 16
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 20
  op3_mb_r: 16
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=20
# effective_consumer_grid_size_r[0]=20
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=20
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=20
# effective_consumer_grid_size_r[1]=20
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=20
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=20
# effective_consumer_grid_size_r[2]=20
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=20
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=20
# effective_consumer_grid_size_r[3]=20
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=20
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=9
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 8
  op2_loc_r: 8
  op3_loc_c: 10
  op3_loc_r: 8
  input_t: 2
  input_mb_r: 3
  input_mb_c: 4
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x37d95000], [3, 0x37e67020], [5, 0x37f39040]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 12]'
  input1_tms: '[vslice: 12]'
  input2_tms: '[vslice: 12]'
  input3_tms: '[vslice: 12]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x391ed240]]'
  output1_dram_buffers: '[[6, 0x3c574280], [3, 0x3c611aa0], [5, 0x3c6af2c0], [7, 0x3c74cae0]]'
  output2_dram_buffers: '[[6, 0x3d469e20], [3, 0x3d507640], [5, 0x3d5a4e60], [7, 0x3d642680]]'
  output3_dram_buffers: '[[6, 0x3e9d2460], [3, 0x3eb0d480]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 2
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 24
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 4
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 1
  output1_mb_c: 3
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 1
  op1_t: 24
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 24
  output2_mb_r: 1
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 24
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 2
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 24
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=2
#Test id=10
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 6
  op1_loc_r: 8
  op2_loc_c: 8
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 3
  input_mb_r: 5
  input_mb_c: 1
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[6, 0x36e68fe0], [2, 0x36e9e520], [0, 0x36ed3a60], [3, 0x36f08fa0], [7, 0x36f3e4e0], [5, 0x36f73a20], [5, 0x36fa8f60], [4, 0x36fde4a0], [3, 0x370139e0], [7, 0x37048f20], [6, 0x3707e460], [2, 0x370b39a0], [1, 0x370e8ee0], [2, 0x3711e420], [6, 0x37153960], [1, 0x37188ea0], [4, 0x371be3e0], [2, 0x371f3920]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 21]'
  input1_tms: '[vslice: 21]'
  input2_tms: '[vslice: 21]'
  input3_tms: '[vslice: 21]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x39aac5e0]]'
  output1_dram_buffers: '[[6, 0x3eb7ca40]]'
  output2_dram_buffers: '[[6, 0x3ef4d680]]'
  output3_dram_buffers: '[[6, 0x3fa50800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 63
  output0_mb_r: 10
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 63
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 63
  output1_mb_r: 10
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 63
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 63
  output2_mb_r: 10
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 63
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 63
  output3_mb_r: 10
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 63
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=21
# effective_consumer_grid_size_r[0]=21
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=21
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=21
# effective_consumer_grid_size_r[1]=42
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=42
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=7
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=21
# effective_consumer_grid_size_r[2]=21
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=21
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=5
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=21
# effective_consumer_grid_size_r[3]=105
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=105
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=19
# reblock_tm_fork_c_factor_int[3]=1
#Test id=11
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 8
  op1_loc_c: 9
  op1_loc_r: 1
  op2_loc_c: 10
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 5
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x3d0ce6a0], [1, 0x3d133fc0], [7, 0x3d1998e0], [3, 0x3d1ff200], [6, 0x3d264b20], [6, 0x3d2ca440], [5, 0x3d32fd60], [0, 0x3d395680], [4, 0x3d3fafa0], [3, 0x3d4608c0], [4, 0x3d4c61e0], [5, 0x3d52bb00], [6, 0x3d591420], [6, 0x3d5f6d40], [4, 0x3d65c660], [5, 0x3d6c1f80], [1, 0x3d7278a0], [2, 0x3d78d1c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 15]'
  input1_tms: '[vslice: 15]'
  input2_tms: '[vslice: 15]'
  input3_tms: '[vslice: 15]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3d867320]]'
  output1_dram_buffers: '[[0, 0x3e03d160]]'
  output2_dram_buffers: '[[0, 0x3efecba0]]'
  output3_dram_buffers: '[[0, 0x3f754120]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 2
  output0_mb_c: 15
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 5
  op0_grid_size_r: 1
  op0_t: 30
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 30
  output1_mb_r: 2
  output1_mb_c: 15
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 30
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 30
  output2_mb_r: 2
  output2_mb_c: 15
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 30
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 30
  output3_mb_r: 2
  output3_mb_c: 15
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 30
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=15
# effective_consumer_grid_size_r[0]=15
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=15
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=15
# effective_consumer_grid_size_r[1]=30
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=30
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=5
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=15
# effective_consumer_grid_size_r[2]=30
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=30
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=5
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=15
# effective_consumer_grid_size_r[3]=30
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=30
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=5
# reblock_tm_fork_c_factor_int[3]=1
#Test id=12
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 7
  op2_loc_r: 4
  op3_loc_c: 9
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 5
  input_mb_c: 3
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x33648f40], [0, 0x338aa560], [7, 0x33b0bb80], [3, 0x33d6d1a0], [0, 0x33fce7c0], [4, 0x3422fde0], [7, 0x34491400], [2, 0x346f2a20], [5, 0x34954040]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 9
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 15]'
  input1_tms: '[vslice: 15]'
  input2_tms: '[vslice: 15]'
  input3_tms: '[vslice: 15]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3926a7e0]]'
  output1_dram_buffers: '[[2, 0x3bb76680]]'
  output2_dram_buffers: '[[2, 0x3d293ae0]]'
  output3_dram_buffers: '[[2, 0x3ea0da20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 15
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 30
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 30
  output1_mb_r: 15
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 30
  op1_mb_r: 15
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 30
  output2_mb_r: 15
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 30
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 30
  output3_mb_r: 15
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 30
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=15
# effective_consumer_grid_size_r[0]=15
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=15
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=15
# effective_consumer_grid_size_r[1]=15
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=15
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=15
# effective_consumer_grid_size_r[2]=75
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=75
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=10
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=15
# effective_consumer_grid_size_r[3]=75
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=75
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=10
# reblock_tm_fork_c_factor_int[3]=1
#Test id=13
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 8
  op3_loc_r: 7
  input_t: 21
  input_mb_r: 2
  input_mb_c: 16
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x305d2460], [1, 0x30dd1c80], [4, 0x315d14a0], [6, 0x31dd0cc0], [6, 0x325d04e0], [7, 0x32dcfd00]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x335e9ec0]]'
  output1_dram_buffers: '[[0, 0x3665c100]]'
  output2_dram_buffers: '[[0, 0x39a95320]]'
  output3_dram_buffers: '[[0, 0x3cc0dc40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 42
  output0_mb_r: 18
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 3
  op0_t: 42
  op0_mb_r: 3
  op0_mb_c: 8
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 42
  output1_mb_r: 18
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 42
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 3
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 42
  output2_mb_r: 18
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 3
  op2_t: 42
  op2_mb_r: 6
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 42
  output3_mb_r: 18
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 3
  op3_t: 42
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=14
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 2
  op1_loc_r: 8
  op2_loc_c: 3
  op2_loc_r: 7
  op3_loc_c: 4
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 2
  input_mb_c: 8
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x36b427a0], [2, 0x36ba3fc0], [0, 0x36c057e0], [1, 0x36c67000], [4, 0x36cc8820], [0, 0x36d2a040], [6, 0x36d8b860], [5, 0x36ded080]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 48]'
  input1_tms: '[vslice: 48]'
  input2_tms: '[vslice: 48]'
  input3_tms: '[vslice: 48]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x39f7a660]]'
  output1_dram_buffers: '[[5, 0x3d24bf20]]'
  output2_dram_buffers: '[[5, 0x3d870be0]]'
  output3_dram_buffers: '[[5, 0x3faa3740]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 2
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 48
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 48
  output1_mb_r: 2
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 48
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 2
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 48
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 2
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 8
  op3_grid_size_r: 1
  op3_t: 48
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=48
# effective_consumer_grid_size_r[0]=96
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=96
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=48
# effective_consumer_grid_size_r[1]=48
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=48
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=6
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=48
# effective_consumer_grid_size_r[2]=48
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=48
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=6
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=48
# effective_consumer_grid_size_r[3]=48
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=48
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=6
# reblock_tm_fork_c_factor_int[3]=8
#Test id=15
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 4
  op2_loc_r: 4
  op3_loc_c: 8
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 5
  input_mb_c: 13
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[7, 0x34742880], [3, 0x34952aa0], [4, 0x34b62cc0], [3, 0x34d72ee0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 2]'
  input1_tms: '[vslice: 2]'
  input2_tms: '[vslice: 2]'
  input3_tms: '[vslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x376c8340]]'
  output1_dram_buffers: '[[7, 0x3d09b860]]'
  output2_dram_buffers: '[[7, 0x3e15f980]]'
  output3_dram_buffers: '[[7, 0x3f1b15c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 5
  output0_mb_c: 52
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 13
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 5
  output1_mb_c: 52
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 13
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 5
  output2_mb_c: 52
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 13
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 5
  output3_mb_c: 52
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 5
  op3_mb_c: 13
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=10
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=10
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=10
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=10
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=5
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=16
- device: GRAYSKULL
  entries: 24
  op0_loc_c: 8
  op0_loc_r: 3
  op1_loc_c: 9
  op1_loc_r: 8
  op2_loc_c: 10
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 8
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x3064dfc0], [3, 0x308357e0], [7, 0x30a1d000], [7, 0x30c04820], [7, 0x30dec040], [3, 0x30fd3860], [7, 0x311bb080], [0, 0x313a28a0], [0, 0x3158a0c0], [5, 0x317718e0], [5, 0x31959100], [6, 0x31b40920], [3, 0x31d28140], [5, 0x31f0f960], [1, 0x320f7180], [2, 0x322de9a0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vslice: 20]'
  input1_tms: '[vslice: 20]'
  input2_tms: '[vslice: 20]'
  input3_tms: '[vslice: 20]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x334ce280]]'
  output1_dram_buffers: '[[1, 0x354aaf00]]'
  output2_dram_buffers: '[[1, 0x379c09c0]]'
  output3_dram_buffers: '[[1, 0x3ae7ade0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 20
  output0_mb_r: 4
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 20
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 4
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 20
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 4
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 20
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 4
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 20
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=20
# effective_consumer_grid_size_r[0]=80
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=80
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=40
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=20
# effective_consumer_grid_size_r[1]=40
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=40
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=20
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=20
# effective_consumer_grid_size_r[2]=40
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=40
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=20
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=20
# effective_consumer_grid_size_r[3]=40
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=40
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=20
# reblock_tm_fork_c_factor_int[3]=1
#Test id=17
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 5
  op2_loc_c: 9
  op2_loc_r: 1
  op3_loc_c: 10
  op3_loc_r: 6
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x3b4ba760], [4, 0x3b4bb900], [3, 0x3b4bcaa0], [5, 0x3b4bdc40], [7, 0x3b4bede0], [3, 0x3b4bff80], [5, 0x3b4c1120], [2, 0x3b4c22c0], [3, 0x3b4c3460], [4, 0x3b4c4600], [0, 0x3b4c57a0], [2, 0x3b4c6940], [2, 0x3b4c7ae0], [0, 0x3b4c8c80], [2, 0x3b4c9e20], [5, 0x3b4cafc0], [1, 0x3b4cc160], [1, 0x3b4cd300], [1, 0x3b4ce4a0], [0, 0x3b4cf640], [7, 0x3b4d07e0], [3, 0x3b4d1980], [1, 0x3b4d2b20], [0, 0x3b4d3cc0], [1, 0x3b4d4e60], [2, 0x3b4d6000], [3, 0x3b4d71a0], [7, 0x3b4d8340], [2, 0x3b4d94e0], [7, 0x3b4da680], [5, 0x3b4db820], [3, 0x3b4dc9c0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 4]'
  input1_tms: '[vslice: 4]'
  input2_tms: '[vslice: 4]'
  input3_tms: '[vslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3e027d60]]'
  output1_dram_buffers: '[[4, 0x3e931dc0], [4, 0x3e93a9e0], [3, 0x3e943600], [5, 0x3e94c220]]'
  output2_dram_buffers: '[[4, 0x3eeac2a0], [4, 0x3eebdac0]]'
  output3_dram_buffers: '[[4, 0x3f46f8e0], [4, 0x3f478500], [3, 0x3f481120], [5, 0x3f489d40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 1
  output0_mb_c: 4
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 8
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 4
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 4
  op1_grid_size_r: 1
  op1_t: 8
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 8
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 8
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 8
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 8
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=4
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=4
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=18
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 7
  op0_loc_r: 0
  op1_loc_c: 8
  op1_loc_r: 1
  op2_loc_c: 9
  op2_loc_r: 6
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x3fcdf1e0], [5, 0x3fce5b00], [4, 0x3fcec420], [1, 0x3fcf2d40], [7, 0x3fcf9660], [4, 0x3fcfff80], [7, 0x3fd068a0], [3, 0x3fd0d1c0], [7, 0x3fd13ae0], [6, 0x3fd1a400], [0, 0x3fd20d20], [6, 0x3fd27640], [5, 0x3fd2df60], [7, 0x3fd34880]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 5
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 7]'
  input1_tms: '[vslice: 7]'
  input2_tms: '[vslice: 7]'
  input3_tms: '[vslice: 7]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3fd6a7e0], [5, 0x3fd89200], [4, 0x3fda7c20]]'
  output1_dram_buffers: '[[2, 0x3fe1c660], [5, 0x3fe4a580]]'
  output2_dram_buffers: '[[2, 0x3ff00dc0]]'
  output3_dram_buffers: '[[2, 0x3ff64b20], [5, 0x3ff74040], [4, 0x3ff83560], [1, 0x3ff92a80], [7, 0x3ffa1fa0], [4, 0x3ffb14c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 14
  output0_mb_r: 1
  output0_mb_c: 2
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 14
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 14
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 14
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 14
  output2_mb_r: 1
  output2_mb_c: 2
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 14
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 14
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 14
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=7
# effective_consumer_grid_size_r[0]=21
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=21
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=7
# effective_consumer_grid_size_r[1]=14
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=14
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=7
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=7
# effective_consumer_grid_size_r[3]=42
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=42
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=6
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: GRAYSKULL
  entries: 1
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 2
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 7
  input_t: 2
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[7, 0x3a8b13c0], [0, 0x3a8b7ce0], [3, 0x3a8be600], [5, 0x3a8c4f20], [3, 0x3a8cb840], [2, 0x3a8d2160], [2, 0x3a8d8a80], [5, 0x3a8df3a0], [1, 0x3a8e5cc0], [0, 0x3a8ec5e0], [3, 0x3a8f2f00], [7, 0x3a8f9820], [2, 0x3a900140], [3, 0x3a906a60], [0, 0x3a90d380], [7, 0x3a913ca0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vslice: 4]'
  input1_tms: '[vslice: 4]'
  input2_tms: '[vslice: 4]'
  input3_tms: '[vslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3ae0d900], [0, 0x3ae42120]]'
  output1_dram_buffers: '[[7, 0x3d4501e0], [0, 0x3d458e00], [3, 0x3d461a20], [5, 0x3d46a640], [3, 0x3d473260], [2, 0x3d47be80], [2, 0x3d484aa0], [5, 0x3d48d6c0], [1, 0x3d4962e0], [0, 0x3d49ef00], [3, 0x3d4a7b20], [7, 0x3d4b0740]]'
  output2_dram_buffers: '[[7, 0x3f140620], [0, 0x3f174e40]]'
  output3_dram_buffers: '[[7, 0x3f986980], [0, 0x3f9bb1a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 8
  output0_mb_r: 12
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 8
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 2
  output1_grid_size_r: 6
  output1_t: 8
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 8
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 8
  output2_mb_c: 1
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 8
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 8
  output3_mb_c: 1
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 8
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=6
# tm_c_factor[0]=1
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=4
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=4
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
