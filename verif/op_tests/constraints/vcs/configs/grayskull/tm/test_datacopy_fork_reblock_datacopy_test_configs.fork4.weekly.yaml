#ntb_random_seed=0
#Test id=0
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 2
  op1_loc_r: 5
  op2_loc_c: 3
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 5
  input_mb_r: 1
  input_mb_c: 8
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x3280fc00], [7, 0x32a99c20], [7, 0x32d23c40], [6, 0x32fadc60], [1, 0x33237c80]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34af2640]]'
  output1_dram_buffers: '[[4, 0x37f6b120]]'
  output2_dram_buffers: '[[4, 0x3a60ff60]]'
  output3_dram_buffers: '[[4, 0x3d4407c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 10
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 10
  op0_t: 5
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 5
  output1_mb_r: 10
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 5
  op1_mb_r: 5
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 10
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 8
  op2_grid_size_r: 1
  op2_t: 5
  op2_mb_r: 10
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 10
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 10
  op3_t: 5
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=10
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=10
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=10
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=10
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 5
  op0_loc_r: 4
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x3dfbd5a0], [4, 0x3dfca7c0], [0, 0x3dfd79e0], [6, 0x3dfe4c00], [2, 0x3dff1e20], [2, 0x3dfff040], [4, 0x3e00c260], [5, 0x3e019480], [6, 0x3e0266a0], [1, 0x3e0338c0], [1, 0x3e040ae0], [5, 0x3e04dd00], [5, 0x3e05af20], [3, 0x3e068140], [3, 0x3e075360], [6, 0x3e082580], [2, 0x3e08f7a0], [3, 0x3e09c9c0], [7, 0x3e0a9be0], [7, 0x3e0b6e00], [6, 0x3e0c4020], [4, 0x3e0d1240], [2, 0x3e0de460], [0, 0x3e0eb680], [4, 0x3e0f88a0], [5, 0x3e105ac0], [4, 0x3e112ce0], [7, 0x3e11ff00], [5, 0x3e12d120], [4, 0x3e13a340], [5, 0x3e147560], [7, 0x3e154780], [3, 0x3e1619a0], [3, 0x3e16ebc0], [2, 0x3e17bde0], [0, 0x3e189000], [5, 0x3e196220], [1, 0x3e1a3440], [4, 0x3e1b0660], [1, 0x3e1bd880], [6, 0x3e1caaa0], [6, 0x3e1d7cc0], [2, 0x3e1e4ee0], [0, 0x3e1f2100], [5, 0x3e1ff320], [2, 0x3e20c540], [3, 0x3e219760], [1, 0x3e226980], [3, 0x3e233ba0], [6, 0x3e240dc0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 5
  input_grid_size_r: 10
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3e7188c0], [4, 0x3e75a2e0], [0, 0x3e79bd00], [6, 0x3e7dd720], [2, 0x3e81f140], [2, 0x3e860b60], [4, 0x3e8a2580], [5, 0x3e8e3fa0], [6, 0x3e9259c0], [1, 0x3e9673e0]]'
  output1_dram_buffers: '[[1, 0x3ea42f60], [4, 0x3ea84980], [0, 0x3eac63a0], [6, 0x3eb07dc0], [2, 0x3eb497e0], [2, 0x3eb8b200], [4, 0x3ebccc20], [5, 0x3ec0e640], [6, 0x3ec50060], [1, 0x3ec91a80]]'
  output2_dram_buffers: '[[1, 0x3eff1820], [4, 0x3f01d440], [0, 0x3f049060], [6, 0x3f074c80], [2, 0x3f0a08a0], [2, 0x3f0cc4c0], [4, 0x3f0f80e0], [5, 0x3f123d00], [6, 0x3f14f920], [1, 0x3f17b540], [1, 0x3f1a7160], [5, 0x3f1d2d80], [5, 0x3f1fe9a0], [3, 0x3f22a5c0], [3, 0x3f2561e0]]'
  output3_dram_buffers: '[[1, 0x3f32c120], [4, 0x3f36db40], [0, 0x3f3af560], [6, 0x3f3f0f80], [2, 0x3f4329a0], [2, 0x3f4743c0], [4, 0x3f4b5de0], [5, 0x3f4f7800], [6, 0x3f539220], [1, 0x3f57ac40]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 5
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 15
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 5
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 15
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 10
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 10
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 3
  output2_grid_size_r: 5
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 3
  op2_grid_size_r: 5
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 10
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 1
  op3_grid_size_r: 10
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=6
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=10
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=10
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=10
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=10
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: GRAYSKULL
  entries: 64
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 6
  op3_loc_c: 11
  op3_loc_r: 3
  input_t: 4
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x306f2d40], [3, 0x30b02d60], [7, 0x30f12d80], [7, 0x31322da0], [5, 0x31732dc0], [4, 0x31b42de0], [5, 0x31f52e00], [5, 0x32362e20], [0, 0x32772e40]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x32f702a0]]'
  output1_dram_buffers: '[[1, 0x35828ce0]]'
  output2_dram_buffers: '[[1, 0x389d0ec0]]'
  output3_dram_buffers: '[[1, 0x3ce570e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 12
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 6
  op0_grid_size_r: 2
  op0_t: 4
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 12
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 4
  op1_mb_r: 1
  op1_mb_c: 6
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 12
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 4
  op2_mb_r: 3
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 12
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 4
  op3_mb_r: 2
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 128
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 9
  input_t: 1
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x3f9e56c0], [6, 0x3f9ed160], [4, 0x3f9f4c00], [4, 0x3f9fc6a0], [2, 0x3fa04140], [5, 0x3fa0bbe0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 3
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3fcbf1e0], [6, 0x3fcd6180]]'
  output1_dram_buffers: '[[2, 0x3fe89ca0], [6, 0x3fe8da00], [4, 0x3fe91760], [4, 0x3fe954c0], [2, 0x3fe99220], [5, 0x3fe9cf80], [3, 0x3fea0ce0], [6, 0x3fea4a40], [0, 0x3fea87a0], [4, 0x3feac500], [4, 0x3feb0260], [2, 0x3feb3fc0]]'
  output2_dram_buffers: '[[2, 0x3ff4f8a0], [6, 0x3ff52d40], [4, 0x3ff561e0], [4, 0x3ff59680], [2, 0x3ff5cb20], [5, 0x3ff5ffc0], [3, 0x3ff63460], [6, 0x3ff66900], [0, 0x3ff69da0], [4, 0x3ff6d240], [4, 0x3ff706e0], [2, 0x3ff73b80], [5, 0x3ff77020], [6, 0x3ff7a4c0]]'
  output3_dram_buffers: '[[2, 0x3ff95380], [6, 0x3ffac320]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 6
  output0_mb_c: 1
  output0_ub_r: 7
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 6
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 7
  output2_t: 1
  output2_mb_r: 6
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 7
  op2_t: 1
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 14
  output3_mb_c: 1
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 14
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=4
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 2
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 8
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 4
  input_mb_c: 3
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x31217540], [1, 0x3129a960], [1, 0x3131dd80], [5, 0x313a11a0], [7, 0x314245c0], [3, 0x314a79e0], [4, 0x3152ae00], [5, 0x315ae220], [0, 0x31631640]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 9
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3de20d40], [1, 0x3de96f60], [1, 0x3df0d180], [5, 0x3df833a0], [7, 0x3dff95c0], [3, 0x3e06f7e0], [4, 0x3e0e5a00], [5, 0x3e15bc20], [0, 0x3e1d1e40], [2, 0x3e248060]]'
  output1_dram_buffers: '[[3, 0x3e9503a0], [1, 0x3e97bfc0], [1, 0x3e9a7be0], [5, 0x3e9d3800], [7, 0x3e9ff420], [3, 0x3ea2b040], [4, 0x3ea56c60], [5, 0x3ea82880], [0, 0x3eaae4a0], [2, 0x3eada0c0], [7, 0x3eb05ce0], [0, 0x3eb31900], [6, 0x3eb5d520], [2, 0x3eb89140], [0, 0x3ebb4d60], [4, 0x3ebe0980], [5, 0x3ec0c5a0], [3, 0x3ec381c0], [1, 0x3ec63de0], [7, 0x3ec8fa00], [6, 0x3ecbb620], [1, 0x3ece7240], [4, 0x3ed12e60], [7, 0x3ed3ea80], [6, 0x3ed6a6a0], [1, 0x3ed962c0], [1, 0x3edc1ee0]]'
  output2_dram_buffers: '[[3, 0x3f216c40], [1, 0x3f242860], [1, 0x3f26e480], [5, 0x3f29a0a0], [7, 0x3f2c5cc0], [3, 0x3f2f18e0], [4, 0x3f31d500], [5, 0x3f349120], [0, 0x3f374d40], [2, 0x3f3a0960], [7, 0x3f3cc580], [0, 0x3f3f81a0], [6, 0x3f423dc0], [2, 0x3f44f9e0], [0, 0x3f47b600], [4, 0x3f4a7220], [5, 0x3f4d2e40], [3, 0x3f4fea60], [1, 0x3f52a680], [7, 0x3f5562a0], [6, 0x3f581ec0], [1, 0x3f5adae0], [4, 0x3f5d9700], [7, 0x3f605320], [6, 0x3f630f40], [1, 0x3f65cb60], [1, 0x3f688780]]'
  output3_dram_buffers: '[[3, 0x3f7c8280], [1, 0x3f82a9a0], [1, 0x3f88d0c0], [5, 0x3f8ef7e0], [7, 0x3f951f00], [3, 0x3f9b4620], [4, 0x3fa16d40], [5, 0x3fa79460], [0, 0x3fadbb80], [2, 0x3fb3e2a0], [7, 0x3fba09c0], [0, 0x3fc030e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 10
  output0_t: 2
  output0_mb_r: 9
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 10
  op0_t: 2
  op0_mb_r: 9
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 3
  output1_grid_size_r: 9
  output1_t: 2
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 4
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 9
  op1_t: 2
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 3
  output2_grid_size_r: 9
  output2_t: 2
  output2_mb_r: 5
  output2_mb_c: 1
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 9
  op2_t: 2
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 3
  output3_grid_size_r: 4
  output3_t: 2
  output3_mb_r: 9
  output3_mb_c: 1
  output3_ub_r: 5
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 4
  op3_t: 2
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=10
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=10
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=3
#Test id=5
- device: GRAYSKULL
  entries: 40
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 7
  op2_loc_r: 2
  op3_loc_c: 8
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 2
  input_mb_c: 12
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x33234480], [5, 0x3341bca0], [6, 0x336034c0], [4, 0x337eace0], [5, 0x339d2500], [7, 0x33bb9d20], [6, 0x33da1540], [3, 0x33f88d60], [3, 0x34170580], [1, 0x34357da0], [1, 0x3453f5c0], [7, 0x34726de0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34922440]]'
  output1_dram_buffers: '[[4, 0x3692f160]]'
  output2_dram_buffers: '[[4, 0x38ca7f60]]'
  output3_dram_buffers: '[[4, 0x3d0aca00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 8
  output0_mb_c: 36
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 9
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 8
  output1_mb_c: 36
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 8
  output2_mb_c: 36
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 8
  output3_mb_c: 36
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=6
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 8
  op0_loc_r: 4
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 5
  input_t: 2
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x326986c0], [3, 0x326a9ee0], [5, 0x326bb700], [0, 0x326ccf20], [1, 0x326de740], [5, 0x326eff60], [5, 0x32701780], [3, 0x32712fa0], [0, 0x327247c0], [7, 0x32735fe0], [4, 0x32747800], [7, 0x32759020], [0, 0x3276a840], [7, 0x3277c060], [0, 0x3278d880], [1, 0x3279f0a0], [1, 0x327b08c0], [6, 0x327c20e0], [0, 0x327d3900], [4, 0x327e5120], [5, 0x327f6940], [6, 0x32808160], [2, 0x32819980], [4, 0x3282b1a0], [5, 0x3283c9c0], [6, 0x3284e1e0], [5, 0x3285fa00], [7, 0x32871220], [7, 0x32882a40], [1, 0x32894260], [4, 0x328a5a80], [5, 0x328b72a0], [5, 0x328c8ac0], [3, 0x328da2e0], [2, 0x328ebb00], [4, 0x328fd320], [4, 0x3290eb40], [6, 0x32920360], [5, 0x32931b80], [7, 0x329433a0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 8
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3a529a80], [3, 0x3a5b5aa0], [5, 0x3a641ac0], [0, 0x3a6cdae0], [1, 0x3a759b00]]'
  output1_dram_buffers: '[[0, 0x3b230c00], [3, 0x3b276c20], [5, 0x3b2bcc40], [0, 0x3b302c60], [1, 0x3b348c80], [5, 0x3b38eca0], [5, 0x3b3d4cc0], [3, 0x3b41ace0], [0, 0x3b460d00], [7, 0x3b4a6d20]]'
  output2_dram_buffers: '[[0, 0x3b7da360], [3, 0x3b820380], [5, 0x3b8663a0], [0, 0x3b8ac3c0], [1, 0x3b8f23e0], [5, 0x3b938400], [5, 0x3b97e420], [3, 0x3b9c4440], [0, 0x3ba0a460], [7, 0x3ba50480]]'
  output3_dram_buffers: '[[0, 0x3fc519e0], [3, 0x3fcdda00], [5, 0x3fd69a20], [0, 0x3fdf5a40], [1, 0x3fe81a60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 5
  output0_t: 2
  output0_mb_r: 2
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 10
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 10
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 10
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 10
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 5
  output3_t: 2
  output3_mb_r: 2
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=6
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=10
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=10
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=10
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=10
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=7
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 7
  op1_loc_c: 9
  op1_loc_r: 0
  op2_loc_c: 10
  op2_loc_r: 3
  op3_loc_c: 11
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 12
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[6, 0x335c1e40], [6, 0x337a9660], [2, 0x33990e80], [2, 0x33b786a0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 3
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x33d8f220]]'
  output1_dram_buffers: '[[6, 0x3473f780]]'
  output2_dram_buffers: '[[6, 0x354efda0]]'
  output3_dram_buffers: '[[6, 0x35ff29e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 48
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 5
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 12
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 48
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 5
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 48
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 12
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 48
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 8
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=5
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=8
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 9
  op2_loc_r: 4
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x3ad1fce0], [6, 0x3ad28040], [6, 0x3ad303a0], [3, 0x3ad38700], [2, 0x3ad40a60], [5, 0x3ad48dc0], [7, 0x3ad51120], [6, 0x3ad59480], [4, 0x3ad617e0], [3, 0x3ad69b40], [5, 0x3ad71ea0], [2, 0x3ad7a200], [0, 0x3ad82560], [2, 0x3ad8a8c0], [2, 0x3ad92c20], [0, 0x3ad9af80]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3f59b880], [6, 0x3f5abf20], [6, 0x3f5bc5c0], [3, 0x3f5ccc60], [2, 0x3f5dd300], [5, 0x3f5ed9a0], [7, 0x3f5fe040], [6, 0x3f60e6e0]]'
  output1_dram_buffers: '[[0, 0x3f792bc0], [6, 0x3f79fde0], [6, 0x3f7ad000], [3, 0x3f7ba220], [2, 0x3f7c7440], [5, 0x3f7d4660], [7, 0x3f7e1880], [6, 0x3f7eeaa0], [4, 0x3f7fbcc0], [3, 0x3f808ee0]]'
  output2_dram_buffers: '[[0, 0x3fd65ee0], [6, 0x3fd86c00], [6, 0x3fda7920], [3, 0x3fdc8640]]'
  output3_dram_buffers: '[[0, 0x3fe76d40], [6, 0x3fe97a60], [6, 0x3feb8780], [3, 0x3fed94a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 5
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 5
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 5
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 5
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=7
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=5
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=5
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=9
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 10
  op3_loc_r: 8
  input_t: 1
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 4
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x3c448e80], [3, 0x3c4b1ea0], [5, 0x3c51aec0], [7, 0x3c583ee0], [1, 0x3c5ecf00], [4, 0x3c655f20]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x3c749fc0], [3, 0x3c78ffe0], [5, 0x3c7d6000], [7, 0x3c81c020], [1, 0x3c862040], [4, 0x3c8a8060], [5, 0x3c8ee080], [0, 0x3c9340a0], [2, 0x3c97a0c0]]'
  output1_dram_buffers: '[[6, 0x3ca5e0c0], [3, 0x3cb990e0]]'
  output2_dram_buffers: '[[6, 0x3d171d20], [3, 0x3d1c0940], [5, 0x3d20f560], [7, 0x3d25e180], [1, 0x3d2acda0], [4, 0x3d2fb9c0], [5, 0x3d34a5e0], [0, 0x3d399200]]'
  output3_dram_buffers: '[[6, 0x3d787ca0], [3, 0x3d8254c0], [5, 0x3d8c2ce0], [7, 0x3d960500]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 9
  output0_t: 1
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 1
  op0_grid_size_r: 9
  op0_t: 1
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 9
  output1_mb_c: 4
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 9
  op1_mb_c: 4
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 4
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 3
  output2_mb_c: 2
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 9
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 9
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=10
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 6
  op1_loc_r: 0
  op2_loc_c: 7
  op2_loc_r: 3
  op3_loc_c: 8
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[6, 0x33a74320], [2, 0x33b46340], [0, 0x33c18360], [3, 0x33cea380], [7, 0x33dbc3a0], [5, 0x33e8e3c0], [5, 0x33f603e0], [4, 0x34032400], [3, 0x34104420], [7, 0x341d6440], [6, 0x342a8460], [2, 0x3437a480], [1, 0x3444c4a0], [2, 0x3451e4c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[6, 0x345f7960], [2, 0x346c9980], [0, 0x3479b9a0], [3, 0x3486d9c0], [7, 0x3493f9e0], [5, 0x34a11a00], [5, 0x34ae3a20], [4, 0x34bb5a40], [3, 0x34c87a60], [7, 0x34d59a80], [6, 0x34e2baa0], [2, 0x34efdac0], [1, 0x34fcfae0], [2, 0x350a1b00]]'
  output1_dram_buffers: '[[6, 0x3517e4a0], [2, 0x353224c0], [0, 0x354c64e0], [3, 0x3566a500], [7, 0x3580e520], [5, 0x359b2540], [5, 0x35b56560]]'
  output2_dram_buffers: '[[6, 0x362e0be0], [2, 0x36484c00], [0, 0x36628c20], [3, 0x367ccc40], [7, 0x36970c60], [5, 0x36b14c80], [5, 0x36cb8ca0]]'
  output3_dram_buffers: '[[6, 0x384885a0], [2, 0x384e43c0], [0, 0x385401e0], [3, 0x3859c000], [7, 0x385f7e20], [5, 0x38653c40], [5, 0x386afa60], [4, 0x3870b880], [3, 0x387676a0], [7, 0x387c34c0], [6, 0x3881f2e0], [2, 0x3887b100], [1, 0x388d6f20], [2, 0x38932d40], [6, 0x3898eb60], [1, 0x389ea980], [4, 0x38a467a0], [2, 0x38aa25c0], [5, 0x38afe3e0], [0, 0x38b5a200], [6, 0x38bb6020], [6, 0x38c11e40], [0, 0x38c6dc60], [6, 0x38cc9a80], [7, 0x38d258a0], [1, 0x38d816c0], [3, 0x38ddd4e0], [6, 0x38e39300], [1, 0x38e95120], [7, 0x38ef0f40], [7, 0x38f4cd60], [2, 0x38fa8b80]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 7
  output0_t: 1
  output0_mb_r: 6
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 2
  op0_grid_size_c: 2
  op0_grid_size_r: 7
  op0_t: 1
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 1
  output1_mb_r: 6
  output1_mb_c: 2
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 1
  op1_mb_r: 6
  op1_mb_c: 2
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 7
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 4
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 4
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 4
  output3_grid_size_r: 8
  output3_t: 1
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=2
#Test id=11
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 7
  op2_loc_r: 2
  op3_loc_c: 10
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 8
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x347bda40], [1, 0x347f2260], [7, 0x34826a80], [3, 0x3485b2a0], [6, 0x3488fac0], [6, 0x348c42e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x34b02000], [1, 0x34b36820], [7, 0x34b6b040], [3, 0x34b9f860], [6, 0x34bd4080], [6, 0x34c088a0]]'
  output1_dram_buffers: '[[0, 0x360e32c0], [1, 0x3610a8e0], [7, 0x36131f00], [3, 0x36159520], [6, 0x36180b40], [6, 0x361a8160], [5, 0x361cf780], [0, 0x361f6da0]]'
  output2_dram_buffers: '[[0, 0x364d02c0], [1, 0x365392e0], [7, 0x365a2300]]'
  output3_dram_buffers: '[[0, 0x36d8f300], [1, 0x36dddf20], [7, 0x36e2cb40], [3, 0x36e7b760]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 6
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 2
  output1_mb_r: 6
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 2
  op1_mb_r: 6
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 3
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 8
  output2_mb_c: 2
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 8
  op2_mb_c: 2
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 2
  output3_mb_r: 8
  output3_mb_c: 3
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 2
  op3_mb_r: 8
  op3_mb_c: 3
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=12
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 5
  op0_loc_r: 4
  op1_loc_c: 6
  op1_loc_r: 1
  op2_loc_c: 8
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 59
  input_mb_r: 12
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x30718460], [0, 0x31d90c80]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x33692b80]]'
  output1_dram_buffers: '[[2, 0x364bcec0]]'
  output2_dram_buffers: '[[2, 0x392d34e0]]'
  output3_dram_buffers: '[[2, 0x3ce36e40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 59
  output0_mb_r: 48
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 59
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 59
  output1_mb_r: 48
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 59
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 59
  output2_mb_r: 48
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 59
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 59
  output3_mb_r: 48
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 59
  op3_mb_r: 4
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=7
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=13
- device: GRAYSKULL
  entries: 4
  op0_loc_c: 7
  op0_loc_r: 1
  op1_loc_c: 9
  op1_loc_r: 3
  op2_loc_c: 10
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 2
  input_t: 13
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x3753c740], [1, 0x375a6160], [4, 0x3760fb80], [6, 0x376795a0], [6, 0x376e2fc0], [7, 0x3774c9e0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 5
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x37878380]]'
  output1_dram_buffers: '[[0, 0x37d8ac20]]'
  output2_dram_buffers: '[[0, 0x382a4120]]'
  output3_dram_buffers: '[[0, 0x3875bf00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 24
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 13
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 13
  output1_mb_r: 24
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 13
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 24
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 13
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 13
  output3_mb_r: 24
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 13
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=5
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: GRAYSKULL
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 7
  op2_loc_r: 7
  op3_loc_c: 11
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x3cb9fc20], [2, 0x3cba4240], [0, 0x3cba8860], [1, 0x3cbace80], [4, 0x3cbb14a0], [0, 0x3cbb5ac0], [6, 0x3cbba0e0], [5, 0x3cbbe700], [7, 0x3cbc2d20], [4, 0x3cbc7340], [2, 0x3cbcb960], [0, 0x3cbcff80], [5, 0x3cbd45a0], [4, 0x3cbd8bc0], [1, 0x3cbdd1e0], [3, 0x3cbe1800], [5, 0x3cbe5e20], [6, 0x3cbea440], [2, 0x3cbeea60], [6, 0x3cbf3080], [4, 0x3cbf76a0], [3, 0x3cbfbcc0], [3, 0x3cc002e0], [6, 0x3cc04900], [2, 0x3cc08f20], [1, 0x3cc0d540], [6, 0x3cc11b60], [7, 0x3cc16180], [2, 0x3cc1a7a0], [1, 0x3cc1edc0], [0, 0x3cc233e0], [4, 0x3cc27a00]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3d87c8e0], [2, 0x3d88e100], [0, 0x3d89f920], [1, 0x3d8b1140], [4, 0x3d8c2960], [0, 0x3d8d4180], [6, 0x3d8e59a0], [5, 0x3d8f71c0]]'
  output1_dram_buffers: '[[5, 0x3d9861e0], [2, 0x3d9cc200]]'
  output2_dram_buffers: '[[5, 0x3e1e7cc0], [2, 0x3e1f94e0], [0, 0x3e20ad00], [1, 0x3e21c520], [4, 0x3e22dd40], [0, 0x3e23f560], [6, 0x3e250d80], [5, 0x3e2625a0]]'
  output3_dram_buffers: '[[5, 0x3fdc5b20], [2, 0x3fe0bb40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 2
  output1_mb_c: 1
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 4
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 4
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 4
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=15
- device: GRAYSKULL
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 3
  op1_loc_c: 7
  op1_loc_r: 4
  op2_loc_c: 8
  op2_loc_r: 3
  op3_loc_c: 9
  op3_loc_r: 9
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[7, 0x3f077b80], [3, 0x3f079ea0], [4, 0x3f07c1c0], [3, 0x3f07e4e0], [2, 0x3f080800], [6, 0x3f082b20], [6, 0x3f084e40], [1, 0x3f087160], [0, 0x3f089480], [5, 0x3f08b7a0], [5, 0x3f08dac0], [5, 0x3f08fde0], [1, 0x3f092100], [3, 0x3f094420], [0, 0x3f096740], [0, 0x3f098a60], [2, 0x3f09ad80], [1, 0x3f09d0a0], [3, 0x3f09f3c0], [7, 0x3f0a16e0], [2, 0x3f0a3a00], [3, 0x3f0a5d20], [6, 0x3f0a8040], [5, 0x3f0aa360], [4, 0x3f0ac680], [0, 0x3f0ae9a0], [6, 0x3f0b0cc0], [2, 0x3f0b2fe0], [0, 0x3f0b5300], [0, 0x3f0b7620]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 10
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x3f3a4460], [3, 0x3f3af380], [4, 0x3f3ba2a0], [3, 0x3f3c51c0], [2, 0x3f3d00e0], [6, 0x3f3db000]]'
  output1_dram_buffers: '[[7, 0x3f4f7400], [3, 0x3f504620], [4, 0x3f511840], [3, 0x3f51ea60], [2, 0x3f52bc80]]'
  output2_dram_buffers: '[[7, 0x3fa67800], [3, 0x3fa74a20], [4, 0x3fa81c40], [3, 0x3fa8ee60], [2, 0x3fa9c080]]'
  output3_dram_buffers: '[[7, 0x3ffa9e00], [3, 0x3ffbfc20], [4, 0x3ffd5a40]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 5
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 5
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 5
  output2_t: 2
  output2_mb_r: 4
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 2
  op2_mb_r: 4
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 3
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 5
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=4
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=16
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 5
  op2_loc_c: 8
  op2_loc_r: 4
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x30d00220], [3, 0x30d1a640], [7, 0x30d34a60], [7, 0x30d4ee80], [7, 0x30d692a0], [3, 0x30d836c0], [7, 0x30d9dae0], [0, 0x30db7f00], [0, 0x30dd2320], [5, 0x30dec740]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 10
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x366fbe00], [3, 0x36753620], [7, 0x367aae40]]'
  output1_dram_buffers: '[[1, 0x38576a40], [3, 0x38597760], [7, 0x385b8480], [7, 0x385d91a0], [7, 0x385f9ec0], [3, 0x3861abe0], [7, 0x3863b900], [0, 0x3865c620]]'
  output2_dram_buffers: '[[1, 0x39ab70e0], [3, 0x39af8b00], [7, 0x39b3a520], [7, 0x39b7bf40]]'
  output3_dram_buffers: '[[1, 0x3fb93dc0], [3, 0x3fbae1e0], [7, 0x3fbc8600], [7, 0x3fbe2a20], [7, 0x3fbfce40], [3, 0x3fc17260], [7, 0x3fc31680], [0, 0x3fc4baa0], [0, 0x3fc65ec0], [5, 0x3fc802e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 1
  output0_mb_r: 5
  output0_mb_c: 2
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 1
  op0_mb_r: 5
  op0_mb_c: 2
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 4
  output1_t: 1
  output1_mb_r: 15
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 15
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 6
  output2_mb_c: 1
  output2_ub_r: 5
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 5
  output3_t: 1
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 5
  op3_t: 1
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=17
- device: GRAYSKULL
  entries: 22
  op0_loc_c: 7
  op0_loc_r: 1
  op1_loc_c: 8
  op1_loc_r: 4
  op2_loc_c: 10
  op2_loc_r: 0
  op3_loc_c: 11
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 12
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x39e15c00], [4, 0x39f21e20], [3, 0x3a02e040], [5, 0x3a13a260], [7, 0x3a246480], [3, 0x3a3526a0], [5, 0x3a45e8c0], [2, 0x3a56aae0], [3, 0x3a676d00], [4, 0x3a782f20], [0, 0x3a88f140], [2, 0x3a99b360], [2, 0x3aaa7580], [0, 0x3abb37a0], [2, 0x3acbf9c0], [5, 0x3adcbbe0], [1, 0x3aed7e00], [1, 0x3afe4020]]'
  target_device: 0
  input_count: 22
  unary_type: datacopy
  input_grid_size_c: 6
  input_grid_size_r: 3
  feeder_loc_c: 1
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3b147360]]'
  output1_dram_buffers: '[[4, 0x3c42c660]]'
  output2_dram_buffers: '[[4, 0x3d737e40]]'
  output3_dram_buffers: '[[4, 0x3ec1a340]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 36
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 9
  op0_t: 2
  op0_mb_r: 4
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 36
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 2
  op1_mb_r: 9
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 36
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 9
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 36
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 9
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 44
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=18
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 7
  op1_loc_c: 6
  op1_loc_r: 4
  op2_loc_c: 7
  op2_loc_r: 1
  op3_loc_c: 11
  op3_loc_r: 6
  input_t: 2
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x3ed825e0], [5, 0x3ed93e00], [4, 0x3eda5620], [1, 0x3edb6e40], [7, 0x3edc8660], [4, 0x3edd9e80], [7, 0x3edeb6a0], [3, 0x3edfcec0], [7, 0x3ee0e6e0], [6, 0x3ee1ff00], [0, 0x3ee31720], [6, 0x3ee42f40], [5, 0x3ee54760], [7, 0x3ee65f80], [7, 0x3ee777a0], [6, 0x3ee88fc0], [4, 0x3ee9a7e0], [6, 0x3eeac000]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 9
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3f02efc0], [5, 0x3f0565e0], [4, 0x3f07dc00], [1, 0x3f0a5220], [7, 0x3f0cc840], [4, 0x3f0f3e60], [7, 0x3f11b480], [3, 0x3f142aa0]]'
  output1_dram_buffers: '[[2, 0x3f1d5ae0], [5, 0x3f23eb00], [4, 0x3f2a7b20]]'
  output2_dram_buffers: '[[2, 0x3f8f1a80], [5, 0x3f8feca0], [4, 0x3f90bec0], [1, 0x3f9190e0], [7, 0x3f926300], [4, 0x3f933520], [7, 0x3f940740], [3, 0x3f94d960], [7, 0x3f95ab80], [6, 0x3f967da0], [0, 0x3f974fc0], [6, 0x3f9821e0], [5, 0x3f98f400], [7, 0x3f99c620], [7, 0x3f9a9840], [6, 0x3f9b6a60], [4, 0x3f9c3c80], [6, 0x3f9d0ea0], [7, 0x3f9de0c0], [6, 0x3f9eb2e0], [3, 0x3f9f8500], [5, 0x3fa05720], [5, 0x3fa12940], [2, 0x3fa1fb60]]'
  output3_dram_buffers: '[[2, 0x3fa8a8e0], [5, 0x3faf3900], [4, 0x3fb5c920]]'
  output0_grid_size_c: 4
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 3
  output0_mb_c: 1
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 4
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 4
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 4
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 4
  output2_grid_size_r: 6
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 6
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 3
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 4
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: GRAYSKULL
  entries: 8
  op0_loc_c: 6
  op0_loc_r: 0
  op1_loc_c: 7
  op1_loc_r: 0
  op2_loc_c: 9
  op2_loc_r: 0
  op3_loc_c: 10
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[7, 0x33925e20], [0, 0x3395a640], [3, 0x3398ee60], [5, 0x339c3680], [3, 0x339f7ea0], [2, 0x33a2c6c0], [2, 0x33a60ee0], [5, 0x33a95700], [1, 0x33ac9f20], [0, 0x33afe740], [3, 0x33b32f60], [7, 0x33b67780], [2, 0x33b9bfa0], [3, 0x33bd07c0], [0, 0x33c04fe0], [7, 0x33c39800], [3, 0x33c6e020], [6, 0x33ca2840], [2, 0x33cd7060], [3, 0x33d0b880]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 5
  feeder_loc_c: 2
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[7, 0x34a64b40], [0, 0x34acdb60], [3, 0x34b36b80], [5, 0x34b9fba0], [3, 0x34c08bc0], [2, 0x34c71be0], [2, 0x34cdac00], [5, 0x34d43c20], [1, 0x34dacc40], [0, 0x34e15c60]]'
  output1_dram_buffers: '[[7, 0x36c4a6a0], [0, 0x36c7eec0], [3, 0x36cb36e0], [5, 0x36ce7f00], [3, 0x36d1c720], [2, 0x36d50f40], [2, 0x36d85760], [5, 0x36db9f80], [1, 0x36dee7a0], [0, 0x36e22fc0], [3, 0x36e577e0], [7, 0x36e8c000], [2, 0x36ec0820], [3, 0x36ef5040], [0, 0x36f29860], [7, 0x36f5e080], [3, 0x36f928a0], [6, 0x36fc70c0], [2, 0x36ffb8e0], [3, 0x37030100]]'
  output2_dram_buffers: '[[7, 0x3f011440], [0, 0x3f07a460], [3, 0x3f0e3480], [5, 0x3f14c4a0], [3, 0x3f1b54c0], [2, 0x3f21e4e0], [2, 0x3f287500], [5, 0x3f2f0520], [1, 0x3f359540], [0, 0x3f3c2560]]'
  output3_dram_buffers: '[[7, 0x3f8eaf00], [0, 0x3f91f720], [3, 0x3f953f40], [5, 0x3f988760], [3, 0x3f9bcf80], [2, 0x3f9f17a0], [2, 0x3fa25fc0], [5, 0x3fa5a7e0], [1, 0x3fa8f000], [0, 0x3fac3820], [3, 0x3faf8040], [7, 0x3fb2c860], [2, 0x3fb61080], [3, 0x3fb958a0], [0, 0x3fbca0c0], [7, 0x3fbfe8e0], [3, 0x3fc33100], [6, 0x3fc67920], [2, 0x3fc9c140], [3, 0x3fcd0960]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 10
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 10
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 16
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 2
  output1_grid_size_r: 10
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 2
  op1_grid_size_r: 10
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 10
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 1
  op2_grid_size_r: 10
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 2
  output3_grid_size_r: 10
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 2
  op3_grid_size_r: 10
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.85
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=10
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=10
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=10
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=10
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=10
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=10
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=10
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=10
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
