#ntb_random_seed=0
#Test id=0
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x363f8720], [2, 0x363fcd40], [4, 0x36401360], [0, 0x36405980], [1, 0x36409fa0], [3, 0x3640e5c0], [1, 0x36412be0], [5, 0x36417200], [3, 0x3641b820], [2, 0x3641fe40], [2, 0x36424460], [3, 0x36428a80], [1, 0x3642d0a0], [2, 0x364316c0], [3, 0x36435ce0], [5, 0x3643a300], [2, 0x3643e920], [0, 0x36442f40], [5, 0x36447560], [5, 0x3644bb80]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x36840500]]'
  output1_dram_buffers: '[[0, 0x36b17400], [2, 0x36b28c20], [4, 0x36b3a440], [0, 0x36b4bc60], [1, 0x36b5d480]]'
  output2_dram_buffers: '[[0, 0x3a37f5e0], [2, 0x3a390e00], [4, 0x3a3a2620], [0, 0x3a3b3e40], [1, 0x3a3c5660]]'
  output3_dram_buffers: '[[0, 0x3c946700]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 4
  output0_ub_r: 5
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 5
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 5
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 5
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 5
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 3
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x301e08e0], [2, 0x30397500], [2, 0x3054e120], [5, 0x30704d40]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3405dbc0]]'
  output1_dram_buffers: '[[2, 0x34754120]]'
  output2_dram_buffers: '[[2, 0x3bb1de20]]'
  output3_dram_buffers: '[[2, 0x3e539200]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 12
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 3
  op0_mb_r: 2
  op0_mb_c: 4
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 12
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 3
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 12
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 3
  op2_mb_r: 2
  op2_mb_c: 8
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 12
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 3
  op3_mb_r: 6
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=6
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: WORMHOLE_B0
  entries: 20
  op0_loc_c: 1
  op0_loc_r: 4
  op1_loc_c: 2
  op1_loc_r: 0
  op2_loc_c: 3
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 16
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[5, 0x30646980], [3, 0x3105a9a0], [1, 0x31a6e9c0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3302dd80]]'
  output1_dram_buffers: '[[5, 0x38009500]]'
  output2_dram_buffers: '[[5, 0x3a3d00a0]]'
  output3_dram_buffers: '[[5, 0x3c3cede0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 48
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 2
  op0_mb_r: 16
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 48
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 4
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 48
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 4
  op2_grid_size_r: 3
  op2_t: 2
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 48
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 8
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 23
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x30235b60], [4, 0x30974180], [3, 0x310b27a0], [1, 0x317f0dc0], [2, 0x31f2f3e0], [4, 0x3266da00]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x32f6df80]]'
  output1_dram_buffers: '[[4, 0x35b5b220]]'
  output2_dram_buffers: '[[4, 0x3899b300]]'
  output3_dram_buffers: '[[4, 0x3c3328e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 23
  output0_mb_r: 4
  output0_mb_c: 15
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 23
  op0_mb_r: 1
  op0_mb_c: 15
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 23
  output1_mb_r: 4
  output1_mb_c: 15
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 23
  op1_mb_r: 1
  op1_mb_c: 15
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 23
  output2_mb_r: 4
  output2_mb_c: 15
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 23
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 23
  output3_mb_r: 4
  output3_mb_c: 15
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 23
  op3_mb_r: 1
  op3_mb_c: 15
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x35d2bc00], [0, 0x35d30220], [4, 0x35d34840], [3, 0x35d38e60], [1, 0x35d3d480], [3, 0x35d41aa0], [0, 0x35d460c0], [5, 0x35d4a6e0], [0, 0x35d4ed00], [3, 0x35d53320], [3, 0x35d57940], [2, 0x35d5bf60]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3fabc160], [0, 0x3fad6580]]'
  output1_dram_buffers: '[[5, 0x3fb70140], [0, 0x3fb76a60], [4, 0x3fb7d380], [3, 0x3fb83ca0], [1, 0x3fb8a5c0], [3, 0x3fb90ee0], [0, 0x3fb97800], [5, 0x3fb9e120]]'
  output2_dram_buffers: '[[5, 0x3fd65ac0], [0, 0x3fd7fee0]]'
  output3_dram_buffers: '[[5, 0x3fee02c0], [0, 0x3fee3760], [4, 0x3fee6c00], [3, 0x3feea0a0], [1, 0x3feed540], [3, 0x3fef09e0], [0, 0x3fef3e80], [5, 0x3fef7320], [0, 0x3fefa7c0], [3, 0x3fefdc60], [3, 0x3ff01100], [2, 0x3ff045a0], [4, 0x3ff07a40], [2, 0x3ff0aee0], [3, 0x3ff0e380], [2, 0x3ff11820]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 6
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 1
  output1_mb_r: 1
  output1_mb_c: 3
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 1
  output2_mb_c: 6
  output2_ub_r: 8
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 8
  output3_t: 1
  output3_mb_r: 2
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=5
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 53
  input_mb_r: 1
  input_mb_c: 8
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x32e0c820], [2, 0x334c7040], [2, 0x33b81860], [4, 0x3423c080], [2, 0x348f68a0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x35c2ed20]]'
  output1_dram_buffers: '[[4, 0x3834dfc0]]'
  output2_dram_buffers: '[[4, 0x3a63bc60]]'
  output3_dram_buffers: '[[4, 0x3d12ad20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 53
  output0_mb_r: 5
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 53
  op0_mb_r: 1
  op0_mb_c: 8
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 53
  output1_mb_r: 5
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 5
  op1_t: 53
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 53
  output2_mb_r: 5
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 53
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 53
  output3_mb_r: 5
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 53
  op3_mb_r: 1
  op3_mb_c: 8
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=6
- device: WORMHOLE_B0
  entries: 24
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 6
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[1, 0x301bccc0], [4, 0x303d0ee0], [4, 0x305e5100], [3, 0x307f9320], [5, 0x30a0d540], [4, 0x30c21760], [5, 0x30e35980], [1, 0x31049ba0], [2, 0x3125ddc0], [0, 0x31471fe0], [0, 0x31686200], [0, 0x3189a420], [3, 0x31aae640], [2, 0x31cc2860], [3, 0x31ed6a80], [1, 0x320eaca0], [4, 0x322feec0], [0, 0x325130e0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x32774f00]]'
  output1_dram_buffers: '[[1, 0x34db4ee0]]'
  output2_dram_buffers: '[[1, 0x395e8260]]'
  output3_dram_buffers: '[[1, 0x3d1bed60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 6
  output0_mb_c: 33
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 11
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 6
  output1_mb_c: 33
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 11
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 6
  output2_mb_c: 33
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 6
  output3_mb_c: 33
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 11
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=7
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x38edb1a0], [0, 0x38ee3dc0], [5, 0x38eec9e0], [0, 0x38ef5600], [2, 0x38efe220], [5, 0x38f06e40], [5, 0x38f0fa60], [3, 0x38f18680], [5, 0x38f212a0], [4, 0x38f29ec0], [2, 0x38f32ae0], [3, 0x38f3b700]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3cbb0f40], [0, 0x3cbe5760]]'
  output1_dram_buffers: '[[3, 0x3cc1ba80], [0, 0x3cc502a0]]'
  output2_dram_buffers: '[[3, 0x3cd2dc60], [0, 0x3cd3ae80], [5, 0x3cd480a0], [0, 0x3cd552c0], [2, 0x3cd624e0], [5, 0x3cd6f700], [5, 0x3cd7c920], [3, 0x3cd89b40]]'
  output3_dram_buffers: '[[3, 0x3cf0f300], [0, 0x3cf15c20], [5, 0x3cf1c540], [0, 0x3cf22e60], [2, 0x3cf29780], [5, 0x3cf300a0], [5, 0x3cf369c0], [3, 0x3cf3d2e0], [5, 0x3cf43c00], [4, 0x3cf4a520], [2, 0x3cf50e40], [3, 0x3cf57760], [2, 0x3cf5e080], [0, 0x3cf649a0], [2, 0x3cf6b2c0], [4, 0x3cf71be0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 6
  output0_ub_r: 4
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 4
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 4
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 8
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 2
  output3_grid_size_r: 8
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 8
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=8
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 3
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x3b66f680], [2, 0x3b696ca0], [0, 0x3b6be2c0], [0, 0x3b6e58e0], [1, 0x3b70cf00], [4, 0x3b734520], [5, 0x3b75bb40], [2, 0x3b783160], [1, 0x3b7aa780], [3, 0x3b7d1da0], [5, 0x3b7f93c0], [0, 0x3b8209e0], [2, 0x3b848000], [5, 0x3b86f620]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3b9605e0], [2, 0x3ba18200], [0, 0x3bacfe20]]'
  output1_dram_buffers: '[[0, 0x3bbb24a0], [2, 0x3bc010c0], [0, 0x3bc4fce0], [0, 0x3bc9e900], [1, 0x3bced520], [4, 0x3bd3c140], [5, 0x3bd8ad60]]'
  output2_dram_buffers: '[[0, 0x3beb55c0], [2, 0x3bf6d1e0], [0, 0x3c024e00]]'
  output3_dram_buffers: '[[0, 0x3d41a600], [2, 0x3d469220], [0, 0x3d4b7e40], [0, 0x3d506a60], [1, 0x3d555680], [4, 0x3d5a42a0], [5, 0x3d5f2ec0]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 7
  output0_mb_c: 2
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 7
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 7
  output1_t: 2
  output1_mb_r: 3
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 2
  output2_mb_r: 7
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 2
  op2_mb_r: 7
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 7
  output3_t: 2
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 6
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 2
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=9
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 7
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x34342600], [2, 0x34344920], [1, 0x34346c40], [0, 0x34348f60], [5, 0x3434b280], [1, 0x3434d5a0], [5, 0x3434f8c0], [2, 0x34351be0], [2, 0x34353f00], [0, 0x34356220], [5, 0x34358540], [3, 0x3435a860], [2, 0x3435cb80], [5, 0x3435eea0], [1, 0x343611c0], [5, 0x343634e0], [1, 0x34365800], [3, 0x34367b20], [3, 0x34369e40], [2, 0x3436c160]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x37386b80]]'
  output1_dram_buffers: '[[1, 0x3b1abba0]]'
  output2_dram_buffers: '[[1, 0x3f9a2cc0]]'
  output3_dram_buffers: '[[1, 0x3fc8d580]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 5
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 5
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 5
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 5
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 5
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 5
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=10
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 4
  op2_loc_r: 6
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 52
  input_mb_r: 1
  input_mb_c: 9
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x3152dbe0], [2, 0x32051a00], [5, 0x32b75820], [5, 0x33699640]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x346bc200]]'
  output1_dram_buffers: '[[5, 0x3752b380]]'
  output2_dram_buffers: '[[5, 0x3a449fa0]]'
  output3_dram_buffers: '[[5, 0x3d1c4c20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 52
  output0_mb_r: 12
  output0_mb_c: 18
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 52
  op0_mb_r: 6
  op0_mb_c: 9
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 12
  output1_mb_c: 18
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 52
  op1_mb_r: 6
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 52
  output2_mb_r: 12
  output2_mb_c: 18
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 52
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 52
  output3_mb_r: 12
  output3_mb_c: 18
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 52
  op3_mb_r: 4
  op3_mb_c: 9
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=11
- device: WORMHOLE_B0
  entries: 1
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 3
  input_mb_c: 3
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x3bcc18a0], [4, 0x3bd0a1c0], [1, 0x3bd52ae0], [1, 0x3bd9b400]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3e677e00]]'
  output1_dram_buffers: '[[0, 0x3f5e39a0]]'
  output2_dram_buffers: '[[0, 0x3f9da600]]'
  output3_dram_buffers: '[[0, 0x3fd2e240]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 12
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 6
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 12
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 12
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 12
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 2
  op2_mb_r: 3
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 12
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 2
  op3_mb_r: 3
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=12
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x3eacb3e0], [4, 0x3eb22c00], [1, 0x3eb7a420]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3ec165c0], [4, 0x3ec57fe0], [1, 0x3ec99a00], [2, 0x3ecdb420]]'
  output1_dram_buffers: '[[0, 0x3f041420], [4, 0x3f082e40], [1, 0x3f0c4860], [2, 0x3f106280]]'
  output2_dram_buffers: '[[0, 0x3f244e40], [4, 0x3f2c8260]]'
  output3_dram_buffers: '[[0, 0x3f382280]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 2
  output0_mb_c: 5
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 5
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 15
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 15
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 4
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 4
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=13
- device: WORMHOLE_B0
  entries: 32
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 2
  op1_loc_r: 2
  op2_loc_c: 3
  op2_loc_r: 7
  op3_loc_c: 4
  op3_loc_r: 4
  input_t: 3
  input_mb_r: 2
  input_mb_c: 10
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x317c91e0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3377bb80]]'
  output1_dram_buffers: '[[5, 0x35a0afe0]]'
  output2_dram_buffers: '[[5, 0x37ed8ce0]]'
  output3_dram_buffers: '[[5, 0x3a5676a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 2
  output0_mb_c: 80
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 3
  op0_mb_r: 2
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 2
  output1_mb_c: 80
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 3
  op1_mb_r: 2
  op1_mb_c: 16
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 2
  output2_mb_c: 80
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 3
  op2_mb_r: 2
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 2
  output3_mb_c: 80
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 4
  op3_grid_size_r: 1
  op3_t: 3
  op3_mb_r: 2
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=4
#Test id=14
- device: WORMHOLE_B0
  entries: 64
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 2
  op1_loc_r: 2
  op2_loc_c: 3
  op2_loc_r: 2
  op3_loc_c: 5
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 6
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[5, 0x35519da0], [1, 0x3581fdc0], [1, 0x35b25de0], [4, 0x35e2be00], [3, 0x36131e20], [4, 0x36437e40]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x36d45b20]]'
  output1_dram_buffers: '[[5, 0x38273180]]'
  output2_dram_buffers: '[[5, 0x398116a0]]'
  output3_dram_buffers: '[[5, 0x3bb14020]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 6
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 6
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 6
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 3
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 6
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 128
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=15
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 4
  input_mb_c: 4
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x352802a0], [3, 0x352e92c0], [5, 0x353522e0], [4, 0x353bb300]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3639c1c0], [3, 0x363d09e0], [5, 0x36405200], [4, 0x36439a20], [4, 0x3646e240], [4, 0x364a2a60], [4, 0x364d7280], [1, 0x3650baa0]]'
  output1_dram_buffers: '[[1, 0x3841a3e0], [3, 0x384ec400]]'
  output2_dram_buffers: '[[1, 0x38888280], [3, 0x388bcaa0], [5, 0x388f12c0], [4, 0x38925ae0], [4, 0x3895a300], [4, 0x3898eb20], [4, 0x389c3340], [1, 0x389f7b60]]'
  output3_dram_buffers: '[[1, 0x3c73bf80], [3, 0x3c80dfa0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 2
  output0_mb_r: 2
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 12
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 12
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 4
  output2_t: 2
  output2_mb_r: 4
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 2
  op2_mb_r: 4
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 2
  output3_mb_r: 8
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 2
  op3_mb_r: 8
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=16
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 4
  op2_loc_r: 4
  op3_loc_c: 6
  op3_loc_r: 1
  input_t: 2
  input_mb_r: 3
  input_mb_c: 4
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x3df0fd00], [2, 0x3df78d20], [1, 0x3dfe1d40], [0, 0x3e04ad60], [1, 0x3e0b3d80], [4, 0x3e11cda0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3e1fafe0], [2, 0x3e298800], [1, 0x3e336020], [0, 0x3e3d3840]]'
  output1_dram_buffers: '[[4, 0x3ee8d100], [2, 0x3eef6120], [1, 0x3ef5f140], [0, 0x3efc8160], [1, 0x3f031180], [4, 0x3f09a1a0]]'
  output2_dram_buffers: '[[4, 0x3f179e20], [2, 0x3f1c8a40], [1, 0x3f217660], [0, 0x3f266280], [1, 0x3f2b4ea0], [4, 0x3f303ac0], [4, 0x3f3526e0], [3, 0x3f3a1300]]'
  output3_dram_buffers: '[[4, 0x3fc70140], [2, 0x3fdab160]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 2
  output0_mb_r: 6
  output0_mb_c: 1
  output0_ub_r: 3
  output0_ub_c: 2
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 2
  output1_mb_r: 6
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 2
  op1_mb_r: 6
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 4
  output2_t: 2
  output2_mb_r: 3
  output2_mb_c: 2
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 2
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 2
  op3_mb_r: 12
  op3_mb_c: 2
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=17
- device: WORMHOLE_B0
  entries: 40
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 12
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[2, 0x30eb3a20], [0, 0x3127b240], [2, 0x31642a60], [4, 0x31a0a280], [4, 0x31dd1aa0], [1, 0x321992c0], [0, 0x32560ae0], [1, 0x32928300], [2, 0x32cefb20], [2, 0x330b7340]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x34ceb240]]'
  output1_dram_buffers: '[[2, 0x377896c0]]'
  output2_dram_buffers: '[[2, 0x3a7494e0]]'
  output3_dram_buffers: '[[2, 0x3d43de00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 120
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 4
  op0_mb_c: 2
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 120
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 120
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 120
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 5
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=18
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 35
  input_mb_r: 4
  input_mb_c: 3
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x3277e8e0], [5, 0x32e28d00], [2, 0x334d3120], [0, 0x33b7d540], [3, 0x34227960], [4, 0x348d1d80]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x35249480]]'
  output1_dram_buffers: '[[3, 0x381dafe0]]'
  output2_dram_buffers: '[[3, 0x3ab10ce0]]'
  output3_dram_buffers: '[[3, 0x3d6092c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 35
  output0_mb_r: 24
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 6
  op0_t: 35
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 35
  output1_mb_r: 24
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 35
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 35
  output2_mb_r: 24
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 35
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 35
  output3_mb_r: 24
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 35
  op3_mb_r: 4
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x36fcbfc0], [1, 0x36ff7be0], [4, 0x37023800], [3, 0x3704f420], [0, 0x3707b040], [3, 0x370a6c60], [4, 0x370d2880], [2, 0x370fe4a0], [2, 0x3712a0c0], [5, 0x37155ce0], [0, 0x37181900], [4, 0x371ad520]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x37c97b40], [1, 0x37d1af60], [4, 0x37d9e380], [3, 0x37e217a0]]'
  output1_dram_buffers: '[[5, 0x391afb60], [1, 0x391f1580], [4, 0x39232fa0], [3, 0x392749c0], [0, 0x392b63e0], [3, 0x392f7e00], [4, 0x39339820], [2, 0x3937b240]]'
  output2_dram_buffers: '[[5, 0x39cbb0a0], [1, 0x39cef8c0], [4, 0x39d240e0], [3, 0x39d58900], [0, 0x39d8d120], [3, 0x39dc1940], [4, 0x39df6160], [2, 0x39e2a980], [2, 0x39e5f1a0], [5, 0x39e939c0]]'
  output3_dram_buffers: '[[5, 0x3efce340], [1, 0x3f07d360], [4, 0x3f12c380]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 2
  output0_mb_r: 15
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 2
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 2
  output1_grid_size_r: 4
  output1_t: 2
  output1_mb_r: 15
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 2
  op1_mb_r: 15
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 5
  output2_t: 2
  output2_mb_r: 3
  output2_mb_c: 1
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 5
  op2_t: 2
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 3
  output3_t: 2
  output3_mb_r: 10
  output3_mb_c: 2
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 10
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=20
- device: WORMHOLE_B0
  entries: 48
  op0_loc_c: 1
  op0_loc_r: 4
  op1_loc_c: 2
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 5
  op3_loc_c: 5
  op3_loc_r: 1
  input_t: 3
  input_mb_r: 10
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x31d70300], [4, 0x328dd320], [3, 0x3344a340]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x340386c0]]'
  output1_dram_buffers: '[[2, 0x36542260]]'
  output2_dram_buffers: '[[2, 0x399e79e0]]'
  output3_dram_buffers: '[[2, 0x3d7d4a60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 60
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 3
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 60
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 3
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 60
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 3
  op2_mb_r: 10
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 60
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 3
  op3_mb_r: 10
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=21
- device: WORMHOLE_B0
  entries: 32
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 6
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 14
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[5, 0x34cda5e0], [5, 0x34e9de00], [5, 0x35061620], [1, 0x35224e40], [1, 0x353e8660], [3, 0x355abe80]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x35ac6020]]'
  output1_dram_buffers: '[[5, 0x388bcee0]]'
  output2_dram_buffers: '[[5, 0x393d6900]]'
  output3_dram_buffers: '[[5, 0x3a321ba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 28
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 7
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 28
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 28
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 7
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 28
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=22
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 2
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 3
  input_mb_c: 4
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x37a81fa0], [1, 0x37ab67c0], [3, 0x37aeafe0], [2, 0x37b1f800], [2, 0x37b54020]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x37d349c0], [1, 0x37d691e0], [3, 0x37d9da00], [2, 0x37dd2220], [2, 0x37e06a40]]'
  output1_dram_buffers: '[[0, 0x383a1c20], [1, 0x38425040]]'
  output2_dram_buffers: '[[0, 0x38adff80], [1, 0x38af5da0], [3, 0x38b0bbc0], [2, 0x38b219e0], [2, 0x38b37800], [3, 0x38b4d620], [1, 0x38b63440], [1, 0x38b79260], [4, 0x38b8f080], [2, 0x38ba4ea0], [2, 0x38bbacc0], [5, 0x38bd0ae0]]'
  output3_dram_buffers: '[[0, 0x390422a0], [1, 0x3905c6c0], [3, 0x39076ae0], [2, 0x39090f00], [2, 0x390ab320], [3, 0x390c5740], [1, 0x390dfb60], [1, 0x390f9f80], [4, 0x391143a0], [2, 0x3912e7c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 5
  output0_t: 2
  output0_mb_r: 6
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 2
  op0_mb_r: 6
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 5
  output1_mb_c: 2
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 5
  op1_mb_c: 2
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 6
  output2_t: 2
  output2_mb_r: 5
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 2
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 2
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 5
  output3_t: 2
  output3_mb_r: 2
  output3_mb_c: 2
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 5
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=23
- device: WORMHOLE_B0
  entries: 32
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 4
  input_mb_c: 5
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x30020ba0], [2, 0x30679bc0], [2, 0x30cd2be0], [3, 0x3132bc00], [0, 0x31984c20], [4, 0x31fddc40]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3284e7a0]]'
  output1_dram_buffers: '[[1, 0x3579b440]]'
  output2_dram_buffers: '[[1, 0x392e2b00]]'
  output3_dram_buffers: '[[1, 0x3c5c8de0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 60
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 10
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 60
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 5
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 5
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 60
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 10
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 60
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 1
  op3_mb_r: 5
  op3_mb_c: 5
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=5
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=5
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=24
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 0
  op3_loc_c: 5
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 4
  input_mb_c: 3
  input_ub_r: 2
  input_ub_c: 4
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x336ddee0], [5, 0x33881f00], [1, 0x33a25f20], [4, 0x33bc9f40], [1, 0x33d6df60], [3, 0x33f11f80], [3, 0x340b5fa0], [4, 0x34259fc0], [1, 0x343fdfe0], [5, 0x345a2000], [5, 0x34746020], [5, 0x348ea040], [2, 0x34a8e060], [0, 0x34c32080], [5, 0x34dd60a0], [0, 0x34f7a0c0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3589b120], [5, 0x35be3140], [1, 0x35f2b160], [4, 0x36273180], [1, 0x365bb1a0], [3, 0x369031c0], [3, 0x36c4b1e0], [4, 0x36f93200]]'
  output1_dram_buffers: '[[0, 0x38795080], [5, 0x38add0a0], [1, 0x38e250c0], [4, 0x3916d0e0], [1, 0x394b5100], [3, 0x397fd120], [3, 0x39b45140], [4, 0x39e8d160]]'
  output2_dram_buffers: '[[0, 0x3aa585c0], [5, 0x3ada05e0], [1, 0x3b0e8600], [4, 0x3b430620], [1, 0x3b778640], [3, 0x3bac0660], [3, 0x3be08680], [4, 0x3c1506a0]]'
  output3_dram_buffers: '[[0, 0x3e1fbf20], [5, 0x3e42bf40], [1, 0x3e65bf60], [4, 0x3e88bf80], [1, 0x3eabbfa0], [3, 0x3ecebfc0], [3, 0x3ef1bfe0], [4, 0x3f14c000], [1, 0x3f37c020], [5, 0x3f5ac040], [5, 0x3f7dc060], [5, 0x3fa0c080]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 2
  output0_mb_r: 4
  output0_mb_c: 6
  output0_ub_r: 2
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 2
  op0_mb_r: 4
  op0_mb_c: 6
  op0_ub_r: 2
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 12
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 12
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 8
  output2_t: 2
  output2_mb_r: 4
  output2_mb_c: 6
  output2_ub_r: 2
  output2_ub_c: 4
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 2
  op2_mb_r: 4
  op2_mb_c: 6
  op2_ub_r: 2
  op2_ub_c: 4
  output3_grid_size_c: 3
  output3_grid_size_r: 4
  output3_t: 2
  output3_mb_r: 16
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 3
  op3_grid_size_r: 4
  op3_t: 2
  op3_mb_r: 16
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=25
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x30031ea0], [1, 0x30054ec0], [0, 0x30077ee0], [0, 0x3009af00], [0, 0x300bdf20], [2, 0x300e0f40], [5, 0x30103f60], [0, 0x30126f80], [2, 0x30149fa0], [5, 0x3016cfc0], [1, 0x3018ffe0], [0, 0x301b3000], [0, 0x301d6020], [5, 0x301f9040]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x31743100], [1, 0x31766120], [0, 0x31789140], [0, 0x317ac160], [0, 0x317cf180], [2, 0x317f21a0], [5, 0x318151c0], [0, 0x318381e0], [2, 0x3185b200], [5, 0x3187e220], [1, 0x318a1240], [0, 0x318c4260], [0, 0x318e7280], [5, 0x3190a2a0]]'
  output1_dram_buffers: '[[3, 0x31e0ec60], [1, 0x31e4c080], [0, 0x31e894a0], [0, 0x31ec68c0], [0, 0x31f03ce0], [2, 0x31f41100], [5, 0x31f7e520], [0, 0x31fbb940]]'
  output2_dram_buffers: '[[3, 0x39a3b1e0], [1, 0x39a81200], [0, 0x39ac7220], [0, 0x39b0d240], [0, 0x39b53260], [2, 0x39b99280], [5, 0x39bdf2a0]]'
  output3_dram_buffers: '[[3, 0x39de7e20], [1, 0x39e25240], [0, 0x39e62660], [0, 0x39e9fa80], [0, 0x39edcea0], [2, 0x39f1a2c0], [5, 0x39f576e0], [0, 0x39f94b00]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 7
  output0_t: 2
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 2
  op0_grid_size_c: 2
  op0_grid_size_r: 7
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 2
  output1_grid_size_r: 4
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 2
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 2
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 7
  output2_t: 2
  output2_mb_r: 4
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 2
  op2_mb_r: 4
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 2
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 2
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=26
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 5
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 39
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x30055460], [2, 0x30724180], [4, 0x30df2ea0], [5, 0x314c1bc0], [2, 0x31b908e0], [1, 0x3225f600]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x329cbe80]]'
  output1_dram_buffers: '[[2, 0x352a5fa0]]'
  output2_dram_buffers: '[[2, 0x37b83340]]'
  output3_dram_buffers: '[[2, 0x3a99e7c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 6
  output0_mb_c: 22
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 39
  op0_mb_r: 1
  op0_mb_c: 11
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 39
  output1_mb_r: 6
  output1_mb_c: 22
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 39
  op1_mb_r: 1
  op1_mb_c: 11
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 39
  output2_mb_r: 6
  output2_mb_c: 22
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 39
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 39
  output3_mb_r: 6
  output3_mb_c: 22
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 39
  op3_mb_r: 1
  op3_mb_c: 11
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=27
- device: WORMHOLE_B0
  entries: 24
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 5
  op2_loc_c: 4
  op2_loc_r: 0
  op3_loc_c: 6
  op3_loc_r: 3
  input_t: 7
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x33cb2b20], [3, 0x34007d40], [1, 0x3435cf60], [4, 0x346b2180], [2, 0x34a073a0], [1, 0x34d5c5c0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x350b4f00]]'
  output1_dram_buffers: '[[1, 0x364b9bc0]]'
  output2_dram_buffers: '[[1, 0x37964bc0]]'
  output3_dram_buffers: '[[1, 0x3983ea20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 7
  output0_mb_r: 30
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 7
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 7
  output1_mb_r: 30
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 7
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 30
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 5
  op2_t: 7
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 7
  output3_mb_r: 30
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 7
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=28
- device: WORMHOLE_B0
  entries: 32
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 3
  input_mb_r: 12
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x31122d00], [0, 0x3136bd20], [5, 0x315b4d40], [1, 0x317fdd60], [5, 0x31a46d80], [2, 0x31c8fda0], [0, 0x31ed8dc0], [3, 0x32121de0], [1, 0x3236ae00], [3, 0x325b3e20], [3, 0x327fce40], [1, 0x32a45e60], [4, 0x32c8ee80], [3, 0x32ed7ea0], [4, 0x33120ec0], [3, 0x33369ee0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x33671760]]'
  output1_dram_buffers: '[[5, 0x35b4b5e0]]'
  output2_dram_buffers: '[[5, 0x38086020]]'
  output3_dram_buffers: '[[5, 0x3b6feb40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 96
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 3
  op0_mb_r: 12
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 96
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 8
  op1_t: 3
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 96
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 3
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 96
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 3
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=29
- device: WORMHOLE_B0
  entries: 28
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 6
  input_mb_c: 2
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[5, 0x34a3eb40], [1, 0x34f89360], [2, 0x354d3b80], [3, 0x35a1e3a0]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x36dd3400]]'
  output1_dram_buffers: '[[5, 0x38b0a3c0]]'
  output2_dram_buffers: '[[5, 0x3b60a3a0]]'
  output3_dram_buffers: '[[5, 0x3ccd1be0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 96
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 96
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 96
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 96
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=30
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x31829dc0], [3, 0x3183b5e0], [3, 0x3184ce00], [3, 0x3185e620], [1, 0x3186fe40], [0, 0x31881660], [1, 0x31892e80], [2, 0x318a46a0], [2, 0x318b5ec0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x337696e0], [3, 0x33783b00], [3, 0x3379df20], [3, 0x337b8340], [1, 0x337d2760], [0, 0x337ecb80]]'
  output1_dram_buffers: '[[0, 0x33e83c20], [3, 0x33eab240], [3, 0x33ed2860], [3, 0x33ef9e80]]'
  output2_dram_buffers: '[[0, 0x3ab1b2e0], [3, 0x3ab69f00]]'
  output3_dram_buffers: '[[0, 0x3e2cbc80], [3, 0x3e2d8ea0], [3, 0x3e2e60c0], [3, 0x3e2f32e0], [1, 0x3e300500], [0, 0x3e30d720], [1, 0x3e31a940], [2, 0x3e327b60], [2, 0x3e334d80], [3, 0x3e341fa0], [2, 0x3e34f1c0], [2, 0x3e35c3e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 3
  output0_ub_r: 4
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 6
  output1_ub_r: 3
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 6
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 2
  output3_grid_size_r: 6
  output3_t: 2
  output3_mb_r: 2
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=31
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x33726a20], [2, 0x33727bc0], [5, 0x33728d60], [4, 0x33729f00], [4, 0x3372b0a0], [0, 0x3372c240], [1, 0x3372d3e0], [2, 0x3372e580], [2, 0x3372f720], [4, 0x337308c0], [1, 0x33731a60], [3, 0x33732c00]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34d87940], [2, 0x34d88ae0], [5, 0x34d89c80], [4, 0x34d8ae20], [4, 0x34d8bfc0], [0, 0x34d8d160], [1, 0x34d8e300], [2, 0x34d8f4a0], [2, 0x34d90640], [4, 0x34d917e0], [1, 0x34d92980], [3, 0x34d93b20]]'
  output1_dram_buffers: '[[4, 0x38dc7340], [2, 0x38dcdc60]]'
  output2_dram_buffers: '[[4, 0x3afb43a0], [2, 0x3afb89c0], [5, 0x3afbcfe0]]'
  output3_dram_buffers: '[[4, 0x3f296ce0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 6
  output0_t: 1
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=32
- device: WORMHOLE_B0
  entries: 14
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 9
  input_mb_r: 2
  input_mb_c: 16
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x3060fe20], [3, 0x30e0f640], [3, 0x3160ee60], [0, 0x31e0e680], [3, 0x3260dea0], [0, 0x32e0d6c0]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x33612ea0]]'
  output1_dram_buffers: '[[4, 0x36614be0]]'
  output2_dram_buffers: '[[4, 0x397bf4c0]]'
  output3_dram_buffers: '[[4, 0x3cd2e720]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 4
  output0_mb_c: 48
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 9
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 4
  output1_mb_c: 48
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 9
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 4
  output2_mb_c: 48
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 9
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 4
  output3_mb_c: 48
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 9
  op3_mb_r: 1
  op3_mb_c: 16
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 28
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=33
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 5
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 59
  input_mb_r: 6
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x300acf80], [5, 0x319f48a0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x333570c0]]'
  output1_dram_buffers: '[[4, 0x365fb000]]'
  output2_dram_buffers: '[[4, 0x398dd5a0]]'
  output3_dram_buffers: '[[4, 0x3cc2e4a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 59
  output0_mb_r: 6
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 59
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 59
  output1_mb_r: 6
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 59
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 59
  output2_mb_r: 6
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 59
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 59
  output3_mb_r: 6
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 59
  op3_mb_r: 3
  op3_mb_c: 6
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=34
- device: WORMHOLE_B0
  entries: 40
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 8
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x304ad840], [1, 0x3087c860], [3, 0x30c4b880], [5, 0x3101a8a0], [5, 0x313e98c0], [4, 0x317b88e0], [1, 0x31b87900], [5, 0x31f56920], [3, 0x32325940]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x32a74920]]'
  output1_dram_buffers: '[[4, 0x35275200]]'
  output2_dram_buffers: '[[4, 0x3795e940]]'
  output3_dram_buffers: '[[4, 0x3a8d1de0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 72
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 3
  op0_t: 1
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 72
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 6
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 72
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 72
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 4
  op3_mb_c: 6
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=35
- device: WORMHOLE_B0
  entries: 24
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 6
  op3_loc_r: 1
  input_t: 13
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[5, 0x305c75c0], [4, 0x30d25fe0], [0, 0x31484a00], [2, 0x31be3420], [0, 0x32341e40], [4, 0x32aa0860]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x332456c0]]'
  output1_dram_buffers: '[[5, 0x35ec9880]]'
  output2_dram_buffers: '[[5, 0x38b37880]]'
  output3_dram_buffers: '[[5, 0x3cc82140]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 18
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 3
  op0_t: 13
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 13
  output1_mb_r: 18
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 13
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 18
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 13
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 13
  output3_mb_r: 18
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 13
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=36
- device: WORMHOLE_B0
  entries: 28
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 2
  input_t: 5
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x30af0340], [1, 0x30e45560], [5, 0x3119a780], [3, 0x314ef9a0], [3, 0x31844bc0], [3, 0x31b99de0], [1, 0x31eef000], [3, 0x32244220], [4, 0x32599440], [3, 0x328ee660], [3, 0x32c43880], [1, 0x32f98aa0], [5, 0x332edcc0], [5, 0x33642ee0]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x33b9fea0]]'
  output1_dram_buffers: '[[0, 0x36e5c420]]'
  output2_dram_buffers: '[[0, 0x39eb40a0]]'
  output3_dram_buffers: '[[0, 0x3d037dc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 28
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 7
  op0_t: 5
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 5
  output1_mb_r: 28
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 5
  op1_mb_r: 7
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 28
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 5
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 28
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 5
  op3_mb_r: 14
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=37
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x3943dd80], [3, 0x394518a0], [3, 0x394653c0], [4, 0x39478ee0], [3, 0x3948ca00], [1, 0x394a0520], [1, 0x394b4040], [3, 0x394c7b60], [3, 0x394db680], [5, 0x394ef1a0], [0, 0x39502cc0], [1, 0x395167e0], [3, 0x3952a300], [1, 0x3953de20], [2, 0x39551940], [5, 0x39565460]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x39cdd500], [3, 0x39cea720], [3, 0x39cf7940], [4, 0x39d04b60], [3, 0x39d11d80], [1, 0x39d1efa0], [1, 0x39d2c1c0], [3, 0x39d393e0], [3, 0x39d46600], [5, 0x39d53820], [0, 0x39d60a40], [1, 0x39d6dc60], [3, 0x39d7ae80], [1, 0x39d880a0], [2, 0x39d952c0], [5, 0x39da24e0], [3, 0x39daf700], [1, 0x39dbc920], [0, 0x39dc9b40], [2, 0x39dd6d60], [3, 0x39de3f80], [5, 0x39df11a0], [2, 0x39dfe3c0], [5, 0x39e0b5e0]]'
  output1_dram_buffers: '[[5, 0x3a0d7f20], [3, 0x3a126b40], [3, 0x3a175760], [4, 0x3a1c4380]]'
  output2_dram_buffers: '[[5, 0x3a362240], [3, 0x3a3b0e60], [3, 0x3a3ffa80], [4, 0x3a44e6a0]]'
  output3_dram_buffers: '[[5, 0x3c0d19e0], [3, 0x3c0f9000], [3, 0x3c120620], [4, 0x3c147c40], [3, 0x3c16f260], [1, 0x3c196880], [1, 0x3c1bdea0], [3, 0x3c1e54c0]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 8
  output0_t: 2
  output0_mb_r: 3
  output0_mb_c: 2
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 8
  op0_t: 2
  op0_mb_r: 3
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 6
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 2
  op1_mb_r: 2
  op1_mb_c: 6
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 2
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 2
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 2
  output3_mb_r: 6
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 2
  op3_mb_r: 6
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=38
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 5
  op2_loc_r: 5
  op3_loc_c: 6
  op3_loc_r: 6
  input_t: 26
  input_mb_r: 1
  input_mb_c: 12
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x30267800], [2, 0x309d4c20], [3, 0x31142040], [5, 0x318af460], [2, 0x3201c880], [3, 0x32789ca0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x32f364a0]]'
  output1_dram_buffers: '[[3, 0x35bcc080]]'
  output2_dram_buffers: '[[3, 0x3888e760]]'
  output3_dram_buffers: '[[3, 0x3bb3c0e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 26
  output0_mb_r: 6
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 26
  op0_mb_r: 6
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 26
  output1_mb_r: 6
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 26
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 26
  output2_mb_r: 6
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 26
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 26
  output3_mb_r: 6
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 26
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=39
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 3
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x35301f60], [5, 0x353c3780], [0, 0x35484fa0], [2, 0x355467c0], [1, 0x35607fe0], [3, 0x356c9800], [4, 0x3578b020], [2, 0x3584c840], [2, 0x3590e060], [0, 0x359cf880], [2, 0x35a910a0], [4, 0x35b528c0], [4, 0x35c140e0], [2, 0x35cd5900], [0, 0x35d97120], [4, 0x35e58940], [3, 0x35f1a160], [5, 0x35fdb980], [2, 0x3609d1a0], [5, 0x3615e9c0], [3, 0x362201e0], [5, 0x362e1a00], [4, 0x363a3220], [3, 0x36464a40], [4, 0x36526260], [0, 0x365e7a80], [0, 0x366a92a0], [1, 0x3676aac0], [0, 0x3682c2e0], [2, 0x368edb00], [5, 0x369af320], [4, 0x36a70b40]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x38e84fc0]]'
  output1_dram_buffers: '[[4, 0x3a9c4920]]'
  output2_dram_buffers: '[[4, 0x3c27f960]]'
  output3_dram_buffers: '[[4, 0x3db4dde0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 8
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 3
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 8
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 3
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 8
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 3
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 8
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 3
  op3_mb_r: 1
  op3_mb_c: 16
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=40
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 2
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x3f8ca780], [5, 0x3f8ed7a0], [4, 0x3f9107c0], [0, 0x3f9337e0], [3, 0x3f956800]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3faf5ae0], [5, 0x3fb21700], [4, 0x3fb4d320], [0, 0x3fb78f40]]'
  output1_dram_buffers: '[[4, 0x3fd40e40], [5, 0x3fd98660]]'
  output2_dram_buffers: '[[4, 0x3fe36ac0], [5, 0x3fe8e2e0]]'
  output3_dram_buffers: '[[4, 0x3ff4c2e0], [5, 0x3ffa3b00]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 5
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 5
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 10
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 8
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 1
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 5
  output2_mb_c: 4
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 5
  op2_mb_c: 4
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 5
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 5
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=41
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 4
  input_mb_c: 4
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x30623880], [3, 0x306f58a0], [5, 0x307c78c0], [3, 0x308998e0], [4, 0x3096b900], [4, 0x30a3d920]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x39a4c3e0], [3, 0x39ae9c00], [5, 0x39b87420], [3, 0x39c24c40], [4, 0x39cc2460], [4, 0x39d5fc80], [3, 0x39dfd4a0], [0, 0x39e9acc0]]'
  output1_dram_buffers: '[[3, 0x3af46d80], [3, 0x3afe45a0], [5, 0x3b081dc0], [3, 0x3b11f5e0], [4, 0x3b1bce00], [4, 0x3b25a620], [3, 0x3b2f7e40], [0, 0x3b395660]]'
  output2_dram_buffers: '[[3, 0x3ce10280], [3, 0x3cfb42a0], [5, 0x3d1582c0]]'
  output3_dram_buffers: '[[3, 0x3d510820], [3, 0x3d64b840], [5, 0x3d786860], [3, 0x3d8c1880]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 4
  output0_t: 1
  output0_mb_r: 12
  output0_mb_c: 2
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 12
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 1
  output1_mb_r: 9
  output1_mb_c: 4
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 1
  op1_mb_r: 9
  op1_mb_c: 4
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 1
  output2_mb_r: 16
  output2_mb_c: 2
  output2_ub_r: 3
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 1
  op2_mb_r: 16
  op2_mb_c: 2
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 6
  output3_mb_c: 4
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 6
  op3_mb_c: 4
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=42
- device: WORMHOLE_B0
  entries: 32
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 16
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x33ca4a60], [2, 0x342bca80], [4, 0x348d4aa0], [5, 0x34eecac0], [5, 0x35504ae0], [5, 0x35b1cb00]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x361fa380]]'
  output1_dram_buffers: '[[2, 0x38832680]]'
  output2_dram_buffers: '[[2, 0x3b305b80]]'
  output3_dram_buffers: '[[2, 0x3d7de220]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 6
  output0_mb_c: 96
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 6
  output1_mb_c: 96
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 6
  output2_mb_c: 96
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 6
  output3_mb_c: 96
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 16
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=43
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 4
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 4
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x3f5deb80], [2, 0x3f6133a0], [0, 0x3f647bc0], [3, 0x3f67c3e0], [2, 0x3f6b0c00], [3, 0x3f6e5420]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3f9100c0], [2, 0x3f9376e0], [0, 0x3f95ed00], [3, 0x3f986320], [2, 0x3f9ad940], [3, 0x3f9d4f60], [1, 0x3f9fc580], [5, 0x3fa23ba0]]'
  output1_dram_buffers: '[[4, 0x3fa904c0], [2, 0x3fadf0e0], [0, 0x3fb2dd00], [3, 0x3fb7c920]]'
  output2_dram_buffers: '[[4, 0x3fc96820], [2, 0x3fcbde40], [0, 0x3fce5460], [3, 0x3fd0ca80], [2, 0x3fd340a0], [3, 0x3fd5b6c0], [1, 0x3fd82ce0], [5, 0x3fdaa300]]'
  output3_dram_buffers: '[[4, 0x3fe935e0], [2, 0x3fefc600], [0, 0x3ff65620]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 1
  output0_mb_r: 3
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 3
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 6
  output1_mb_c: 12
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 6
  op1_mb_c: 12
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 6
  output2_ub_r: 3
  output2_ub_c: 2
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 3
  output3_t: 1
  output3_mb_r: 8
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 1
  op3_mb_r: 8
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=44
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 4
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 4
  input_mb_c: 8
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x312955e0], [0, 0x318ad600], [4, 0x31ec5620], [4, 0x324dd640], [4, 0x32af5660], [3, 0x3310d680], [0, 0x337256a0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x33e84580]]'
  output1_dram_buffers: '[[2, 0x36a2e840]]'
  output2_dram_buffers: '[[2, 0x399af040]]'
  output3_dram_buffers: '[[2, 0x3cbeb340]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 56
  output0_mb_c: 24
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 7
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 56
  output1_mb_c: 24
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 6
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 56
  output2_mb_c: 24
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 14
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 56
  output3_mb_c: 24
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 7
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=7
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=7
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=45
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x39a91d60], [4, 0x39b2f580], [5, 0x39bccda0], [1, 0x39c6a5c0], [3, 0x39d07de0], [4, 0x39da5600]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3cc5acc0], [4, 0x3ce334e0]]'
  output1_dram_buffers: '[[2, 0x3f2090c0], [4, 0x3f3e18e0]]'
  output2_dram_buffers: '[[2, 0x3f81ad20], [4, 0x3f8b8540], [5, 0x3f955d60], [1, 0x3f9f3580], [3, 0x3fa90da0], [4, 0x3fb2e5c0]]'
  output3_dram_buffers: '[[2, 0x3fbee920], [4, 0x3fdc7140]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 6
  output0_mb_c: 3
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 6
  op0_mb_c: 3
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 9
  output1_mb_c: 6
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 9
  op1_mb_c: 6
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 1
  output2_mb_r: 6
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 1
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 9
  output3_mb_c: 3
  output3_ub_r: 2
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 9
  op3_mb_c: 3
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=46
- device: WORMHOLE_B0
  entries: 20
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 1
  op3_loc_c: 5
  op3_loc_r: 4
  input_t: 4
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x36403840], [2, 0x364f5660], [5, 0x365e7480], [2, 0x366d92a0], [5, 0x367cb0c0], [3, 0x368bcee0], [1, 0x369aed00], [5, 0x36aa0b20], [5, 0x36b92940], [1, 0x36c84760], [5, 0x36d76580], [2, 0x36e683a0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x39694e60]]'
  output1_dram_buffers: '[[0, 0x3a7ee4e0]]'
  output2_dram_buffers: '[[0, 0x3b3878e0]]'
  output3_dram_buffers: '[[0, 0x3ea41800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 6
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 4
  op0_mb_r: 2
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 6
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 4
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 6
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 6
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 4
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=47
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[1, 0x3d2355e0], [3, 0x3d2d2e00], [1, 0x3d370620], [2, 0x3d40de40], [0, 0x3d4ab660], [2, 0x3d548e80]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3efd9040], [3, 0x3f1b1860]]'
  output1_dram_buffers: '[[1, 0x3f433c20], [3, 0x3f4d1440], [1, 0x3f56ec60], [2, 0x3f60c480], [0, 0x3f6a9ca0], [2, 0x3f7474c0]]'
  output2_dram_buffers: '[[1, 0x3f86cd60], [3, 0x3fa45580]]'
  output3_dram_buffers: '[[1, 0x3fc479c0], [3, 0x3fce51e0], [1, 0x3fd82a00], [2, 0x3fe20220], [0, 0x3febda40], [2, 0x3ff5b260]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 9
  output0_mb_c: 2
  output0_ub_r: 6
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 9
  op0_mb_c: 2
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 1
  output1_mb_r: 9
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 9
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 9
  output2_mb_c: 2
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 9
  op2_mb_c: 2
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 1
  output3_mb_r: 9
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=48
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 17
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x305ad780], [4, 0x3074bda0], [4, 0x308ea3c0], [5, 0x30a889e0], [2, 0x30c27000], [5, 0x30dc5620], [0, 0x30f63c40], [5, 0x31102260], [0, 0x312a0880], [2, 0x3143eea0], [5, 0x315dd4c0], [1, 0x3177bae0], [5, 0x3191a100], [4, 0x31ab8720], [3, 0x31c56d40], [2, 0x31df5360], [1, 0x31f93980], [3, 0x32131fa0], [4, 0x322d05c0], [3, 0x3246ebe0], [4, 0x3260d200], [0, 0x327ab820], [0, 0x32949e40], [2, 0x32ae8460]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3345c400]]'
  output1_dram_buffers: '[[1, 0x36e51ba0]]'
  output2_dram_buffers: '[[1, 0x3a5eb540]]'
  output3_dram_buffers: '[[1, 0x3d060e40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 12
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 17
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 17
  output1_mb_r: 12
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 17
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 17
  output2_mb_r: 12
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 17
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 17
  output3_mb_r: 12
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 17
  op3_mb_r: 3
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=49
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 2
  input_mb_c: 4
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x33bbe680], [1, 0x33c4a6a0], [1, 0x33cd66c0], [1, 0x33d626e0], [0, 0x33dee700], [5, 0x33e7a720], [1, 0x33f06740], [4, 0x33f92760], [4, 0x3401e780], [5, 0x340aa7a0], [4, 0x341367c0], [1, 0x341c27e0], [5, 0x3424e800], [3, 0x342da820], [4, 0x34366840], [1, 0x343f2860], [1, 0x3447e880], [2, 0x3450a8a0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3b548660], [1, 0x3b6ec680], [1, 0x3b8906a0], [1, 0x3ba346c0], [0, 0x3bbd86e0], [5, 0x3bd7c700]]'
  output1_dram_buffers: '[[2, 0x3d5d5460], [1, 0x3d779480], [1, 0x3d91d4a0], [1, 0x3dac14c0], [0, 0x3dc654e0], [5, 0x3de09500]]'
  output2_dram_buffers: '[[2, 0x3e8f4ce0], [1, 0x3ea2fd00], [1, 0x3eb6ad20], [1, 0x3eca5d40], [0, 0x3ede0d60], [5, 0x3ef1bd80], [1, 0x3f056da0], [4, 0x3f191dc0]]'
  output3_dram_buffers: '[[2, 0x3f4ac220], [1, 0x3f650240], [1, 0x3f7f4260], [1, 0x3f998280], [0, 0x3fb3c2a0], [5, 0x3fce02c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 2
  output0_mb_r: 4
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 4
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 12
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 4
  output2_t: 2
  output2_mb_r: 1
  output2_mb_c: 12
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 6
  output3_t: 2
  output3_mb_r: 2
  output3_mb_c: 8
  output3_ub_r: 2
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 8
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
