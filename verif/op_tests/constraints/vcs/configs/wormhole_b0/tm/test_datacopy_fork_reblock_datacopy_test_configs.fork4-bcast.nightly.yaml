#ntb_random_seed=0
#Test id=0
- device: WORMHOLE_B0
  entries: 32
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x300a6c40]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 25}, broadcast: {r: 60}]'
  input1_tms: '[broadcast: {z: 22}, broadcast: {r: 60}]'
  input2_tms: '[  broadcast: {r: 60}]'
  input3_tms: '[broadcast: {z: 17}, broadcast: {r: 60}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3010b820]]'
  output1_dram_buffers: '[[0, 0x36054520]]'
  output2_dram_buffers: '[[0, 0x3b718b80]]'
  output3_dram_buffers: '[[0, 0x3bc1f6a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 25
  output0_mb_r: 60
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 25
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 22
  output1_mb_r: 60
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 22
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 60
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 10
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 17
  output3_mb_r: 60
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 17
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=60
# effective_consumer_grid_size_r[0]=180
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=180
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=180
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=60
# effective_consumer_grid_size_r[1]=120
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=120
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=120
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=60
# effective_consumer_grid_size_r[2]=60
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=60
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=60
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=60
# effective_consumer_grid_size_r[3]=60
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=60
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=60
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: WORMHOLE_B0
  entries: 20
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x397e6240]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 7}, broadcast: {r: 10}]'
  input1_tms: '[broadcast: {z: 50}, broadcast: {r: 10}]'
  input2_tms: '[broadcast: {z: 33}, broadcast: {r: 10}]'
  input3_tms: '[broadcast: {z: 38}, broadcast: {r: 10}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x398ae8a0]]'
  output1_dram_buffers: '[[2, 0x39dcd5c0]]'
  output2_dram_buffers: '[[2, 0x3b87ee80]]'
  output3_dram_buffers: '[[2, 0x3efa4a20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 7
  output0_mb_r: 10
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 7
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 50
  output1_mb_r: 10
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 50
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 33
  output2_mb_r: 10
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 33
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 38
  output3_mb_r: 10
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 38
  op3_mb_r: 5
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=10
# effective_consumer_grid_size_r[0]=10
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=10
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=10
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=10
# effective_consumer_grid_size_r[1]=50
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=50
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=50
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=10
# effective_consumer_grid_size_r[2]=10
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=10
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=10
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=10
# effective_consumer_grid_size_r[3]=10
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=10
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=10
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 2
  op1_loc_r: 5
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x34809480]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 4}, broadcast: {c: 54}]'
  input1_tms: '[broadcast: {z: 52}, broadcast: {c: 54}]'
  input2_tms: '[broadcast: {z: 40}, broadcast: {c: 54}]'
  input3_tms: '[broadcast: {z: 38}, broadcast: {c: 54}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x34e156c0]]'
  output1_dram_buffers: '[[5, 0x35c57300], [3, 0x36056f20], [1, 0x36456b40]]'
  output2_dram_buffers: '[[5, 0x3a40da40]]'
  output3_dram_buffers: '[[5, 0x3d3b8260], [3, 0x3d81a580]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 1
  output0_mb_c: 9
  output0_ub_r: 1
  output0_ub_c: 6
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 4
  op0_mb_r: 1
  op0_mb_c: 9
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 3
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 1
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 6
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 52
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 40
  output2_mb_r: 1
  output2_mb_c: 9
  output2_ub_r: 1
  output2_ub_c: 6
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 40
  op2_mb_r: 1
  op2_mb_c: 9
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 38
  output3_mb_r: 1
  output3_mb_c: 9
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 38
  op3_mb_r: 1
  op3_mb_c: 9
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=54
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=54
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=54
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=54
# tm_c_factor[1]=54
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=162
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=162
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=162
# tm_c_factor[2]=54
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=54
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=54
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=54
# tm_c_factor[3]=54
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=108
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=108
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=108
#Test id=3
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x363a0a20]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 47}, broadcast: {r: 20}]'
  input1_tms: '[broadcast: {z: 40}, broadcast: {r: 20}]'
  input2_tms: '[broadcast: {z: 35}, broadcast: {r: 20}]'
  input3_tms: '[broadcast: {z: 4}, broadcast: {r: 20}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x370e74c0], [4, 0x374eb6e0]]'
  output1_dram_buffers: '[[4, 0x3a30be00], [4, 0x3a676e20]]'
  output2_dram_buffers: '[[4, 0x3bf03fe0]]'
  output3_dram_buffers: '[[4, 0x3d16f040]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 47
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 5
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 47
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 40
  output1_mb_r: 10
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 40
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 35
  output2_mb_r: 4
  output2_mb_c: 1
  output2_ub_r: 5
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 35
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 5
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 4
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=20
# effective_consumer_grid_size_r[0]=40
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=40
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=40
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=20
# effective_consumer_grid_size_r[1]=40
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=40
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=40
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=20
# effective_consumer_grid_size_r[2]=20
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=20
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=20
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=20
# effective_consumer_grid_size_r[3]=20
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=20
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=20
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: WORMHOLE_B0
  entries: 48
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x3026b580]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {r: 224}]'
  input1_tms: '[broadcast: {z: 8}, broadcast: {r: 224}]'
  input2_tms: '[  broadcast: {r: 224}]'
  input3_tms: '[  broadcast: {r: 224}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x30288640]]'
  output1_dram_buffers: '[[5, 0x317de520]]'
  output2_dram_buffers: '[[5, 0x3c2828c0]]'
  output3_dram_buffers: '[[5, 0x3d7d8100]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 224
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 224
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 8
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 224
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 224
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 14
  op3_mb_c: 1
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=224
# effective_consumer_grid_size_r[0]=896
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=896
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=896
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=224
# effective_consumer_grid_size_r[1]=896
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=896
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=896
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=224
# effective_consumer_grid_size_r[2]=448
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=448
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=448
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=224
# effective_consumer_grid_size_r[3]=448
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=448
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=448
# reblock_tm_fork_c_factor_int[3]=1
#Test id=5
- device: WORMHOLE_B0
  entries: 28
  op0_loc_c: 1
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 7
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x30120860]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {r: 30}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 5}, broadcast: {r: 30}, broadcast: {c: 6}]'
  input2_tms: '[  broadcast: {r: 30}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 18}, broadcast: {r: 30}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x301cb4c0]]'
  output1_dram_buffers: '[[4, 0x30c19580]]'
  output2_dram_buffers: '[[4, 0x33ebe320]]'
  output3_dram_buffers: '[[4, 0x34acf640]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 30
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 5
  output1_mb_r: 30
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 5
  op1_mb_r: 6
  op1_mb_c: 2
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 30
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 6
  op2_mb_c: 6
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 30
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 18
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=6
# tm_r_factor[0]=30
# effective_consumer_grid_size_r[0]=30
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=30
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=30
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=6
# tm_r_factor[1]=30
# effective_consumer_grid_size_r[1]=30
# effective_consumer_grid_size_c[1]=18
# effective_consumer_grid_size_r_reblock[1]=30
# effective_consumer_grid_size_c_reblock[1]=18
# reblock_tm_fork_r_factor_int[1]=30
# reblock_tm_fork_c_factor_int[1]=18
# tm_c_factor[2]=6
# tm_r_factor[2]=30
# effective_consumer_grid_size_r[2]=30
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=30
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=30
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=6
# tm_r_factor[3]=30
# effective_consumer_grid_size_r[3]=60
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=60
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=60
# reblock_tm_fork_c_factor_int[3]=6
#Test id=6
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 6
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x34281280]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 54}, broadcast: {c: 24}]'
  input1_tms: '[broadcast: {z: 23}, broadcast: {c: 24}]'
  input2_tms: '[broadcast: {z: 22}, broadcast: {c: 24}]'
  input3_tms: '[broadcast: {z: 41}, broadcast: {c: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x36122520]]'
  output1_dram_buffers: '[[1, 0x397ac900]]'
  output2_dram_buffers: '[[1, 0x3a96dd80]]'
  output3_dram_buffers: '[[1, 0x3cb1e600]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 54
  output0_mb_r: 1
  output0_mb_c: 24
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 54
  op0_mb_r: 1
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 23
  output1_mb_r: 1
  output1_mb_c: 24
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 23
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 22
  output2_mb_r: 1
  output2_mb_c: 24
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 22
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 41
  output3_mb_r: 1
  output3_mb_c: 24
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 41
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=24
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=24
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=48
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=48
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=48
# tm_c_factor[2]=24
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=24
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=24
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=24
# tm_c_factor[3]=24
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=48
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=48
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=48
#Test id=7
- device: WORMHOLE_B0
  entries: 24
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[3, 0x3027e140]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {c: 48}]'
  input1_tms: '[broadcast: {z: 31}, broadcast: {c: 48}]'
  input2_tms: '[broadcast: {z: 16}, broadcast: {c: 48}]'
  input3_tms: '[broadcast: {z: 7}, broadcast: {c: 48}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x30298760]]'
  output1_dram_buffers: '[[3, 0x3073c920]]'
  output2_dram_buffers: '[[3, 0x395ccd60]]'
  output3_dram_buffers: '[[3, 0x3de97220]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 48
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 12
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 31
  output1_mb_r: 1
  output1_mb_c: 48
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 31
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 1
  output2_mb_c: 48
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 16
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 7
  output3_mb_r: 1
  output3_mb_c: 48
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 7
  op3_mb_r: 1
  op3_mb_c: 16
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=48
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=96
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=96
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=96
# tm_c_factor[1]=48
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=96
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=96
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=96
# tm_c_factor[2]=48
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=48
# tm_c_factor[3]=48
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=48
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=48
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=48
#Test id=8
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 5
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x3028c5e0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 33}, broadcast: {r: 6}, broadcast: {c: 48}]'
  input1_tms: '[broadcast: {z: 47}, broadcast: {r: 6}, broadcast: {c: 48}]'
  input2_tms: '[broadcast: {z: 15}, broadcast: {r: 6}, broadcast: {c: 48}]'
  input3_tms: '[broadcast: {z: 5}, broadcast: {r: 6}, broadcast: {c: 48}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x302ae4a0], [2, 0x310374c0], [0, 0x31dc04e0], [0, 0x32b49500], [1, 0x338d2520], [4, 0x3465b540]]'
  output1_dram_buffers: '[[0, 0x3549bae0], [2, 0x38e70b00]]'
  output2_dram_buffers: '[[0, 0x3cc3a820], [2, 0x3d888840], [0, 0x3e4d6860]]'
  output3_dram_buffers: '[[0, 0x3f37c160]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 2
  output0_t: 33
  output0_mb_r: 1
  output0_mb_c: 16
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 33
  op0_mb_r: 1
  op0_mb_c: 16
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 47
  output1_mb_r: 3
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 47
  op1_mb_r: 3
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 15
  output2_mb_r: 1
  output2_mb_c: 16
  output2_ub_r: 2
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 15
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 3
  output3_mb_c: 12
  output3_ub_r: 2
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 5
  op3_mb_r: 3
  op3_mb_c: 12
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=48
# tm_r_factor[0]=6
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=144
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=144
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=144
# tm_c_factor[1]=48
# tm_r_factor[1]=6
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=48
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=48
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=48
# tm_c_factor[2]=48
# tm_r_factor[2]=6
# effective_consumer_grid_size_r[2]=18
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=18
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=18
# reblock_tm_fork_c_factor_int[2]=48
# tm_c_factor[3]=48
# tm_r_factor[3]=6
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=48
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=48
# reblock_tm_fork_r_factor_int[3]=6
# reblock_tm_fork_c_factor_int[3]=48
#Test id=9
- device: WORMHOLE_B0
  entries: 56
  op0_loc_c: 4
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[1, 0x300a1ca0]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 33}, broadcast: {r: 24}]'
  input1_tms: '[  broadcast: {r: 24}]'
  input2_tms: '[broadcast: {z: 13}, broadcast: {r: 24}]'
  input3_tms: '[  broadcast: {r: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x30121f20]]'
  output1_dram_buffers: '[[1, 0x3b00d840]]'
  output2_dram_buffers: '[[1, 0x3b570840]]'
  output3_dram_buffers: '[[1, 0x3fa5f5e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 33
  output0_mb_r: 24
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 33
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 24
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 24
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 13
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 24
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 1
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 112
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=24
# effective_consumer_grid_size_r[0]=24
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=24
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=24
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=24
# effective_consumer_grid_size_r[1]=48
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=48
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=48
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=24
# effective_consumer_grid_size_r[2]=96
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=96
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=96
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=24
# effective_consumer_grid_size_r[3]=72
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=72
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=72
# reblock_tm_fork_c_factor_int[3]=1
#Test id=10
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x3934b540]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 58}]'
  input1_tms: '[broadcast: {z: 37}]'
  input2_tms: '[broadcast: {z: 20}]'
  input3_tms: '[broadcast: {z: 44}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x39d85ec0]]'
  output1_dram_buffers: '[[5, 0x3ab96ca0]]'
  output2_dram_buffers: '[[5, 0x3ad66360]]'
  output3_dram_buffers: '[[5, 0x3b4c74a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 58
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 58
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 37
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 37
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 20
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 44
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=11
- device: WORMHOLE_B0
  entries: 40
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 5
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x32700e00]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 4}, broadcast: {r: 2}, broadcast: {c: 70}]'
  input1_tms: '[broadcast: {z: 8}, broadcast: {r: 2}, broadcast: {c: 70}]'
  input2_tms: '[broadcast: {z: 4}, broadcast: {r: 2}, broadcast: {c: 70}]'
  input3_tms: '[broadcast: {z: 3}, broadcast: {r: 2}, broadcast: {c: 70}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x32a48e80]]'
  output1_dram_buffers: '[[0, 0x3571f680]]'
  output2_dram_buffers: '[[0, 0x3b015cc0]]'
  output3_dram_buffers: '[[0, 0x3dcee900]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 4
  output0_mb_r: 2
  output0_mb_c: 70
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 4
  op0_mb_r: 1
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 2
  output1_mb_c: 70
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 8
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 2
  output2_mb_c: 70
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 4
  op2_mb_r: 2
  op2_mb_c: 14
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 2
  output3_mb_c: 70
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 3
  op3_mb_r: 2
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=70
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=70
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=70
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=70
# tm_c_factor[1]=70
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=140
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=140
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=140
# tm_c_factor[2]=70
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=70
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=70
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=70
# tm_c_factor[3]=70
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=140
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=140
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=140
#Test id=12
- device: WORMHOLE_B0
  entries: 24
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x30da0200]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 16}, broadcast: {r: 2}, broadcast: {c: 72}]'
  input1_tms: '[broadcast: {z: 2}, broadcast: {r: 2}, broadcast: {c: 72}]'
  input2_tms: '[broadcast: {z: 11}, broadcast: {r: 2}, broadcast: {c: 72}]'
  input3_tms: '[broadcast: {z: 6}, broadcast: {r: 2}, broadcast: {c: 72}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x30ec1ea0]]'
  output1_dram_buffers: '[[0, 0x37cc3e60]]'
  output2_dram_buffers: '[[0, 0x38aaef80]]'
  output3_dram_buffers: '[[0, 0x3d6477c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 2
  output0_mb_c: 72
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 2
  op0_t: 16
  op0_mb_r: 1
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 2
  output1_mb_c: 72
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 11
  output2_mb_r: 2
  output2_mb_c: 72
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 11
  op2_mb_r: 2
  op2_mb_c: 9
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 2
  output3_mb_c: 72
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 6
  op3_mb_r: 1
  op3_mb_c: 12
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=72
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=216
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=216
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=216
# tm_c_factor[1]=72
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=72
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=72
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=72
# tm_c_factor[2]=72
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=72
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=72
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=72
# tm_c_factor[3]=72
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=72
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=72
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=72
#Test id=13
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 6
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x3951a980]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 38}]'
  input1_tms: '[broadcast: {z: 15}]'
  input2_tms: '[broadcast: {z: 20}]'
  input3_tms: '[broadcast: {z: 49}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3dcaf620]]'
  output1_dram_buffers: '[[5, 0x3e72cb80]]'
  output2_dram_buffers: '[[5, 0x3e96d340]]'
  output3_dram_buffers: '[[5, 0x3f578fa0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 38
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 38
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 15
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 15
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 20
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 49
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 49
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 2
  op1_loc_r: 6
  op2_loc_c: 4
  op2_loc_r: 4
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x319c6860]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 4}, broadcast: {r: 60}, broadcast: {c: 4}]'
  input1_tms: '[broadcast: {z: 2}, broadcast: {r: 60}, broadcast: {c: 4}]'
  input2_tms: '[broadcast: {z: 46}, broadcast: {r: 60}, broadcast: {c: 4}]'
  input3_tms: '[broadcast: {z: 57}, broadcast: {r: 60}, broadcast: {c: 4}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x319cb0e0], [1, 0x31b29100], [1, 0x31c87120], [4, 0x31de5140], [3, 0x31f43160], [4, 0x320a1180]]'
  output1_dram_buffers: '[[5, 0x32204780], [1, 0x324117a0]]'
  output2_dram_buffers: '[[5, 0x32627420], [1, 0x35552440]]'
  output3_dram_buffers: '[[5, 0x3847e060], [1, 0x3bef0880]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 4
  output0_mb_r: 5
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 4
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 4
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 12
  output1_mb_c: 2
  output1_ub_r: 5
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 12
  op1_mb_c: 2
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 46
  output2_mb_r: 10
  output2_mb_c: 2
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 46
  op2_mb_r: 10
  op2_mb_c: 2
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 57
  output3_mb_r: 15
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 2
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 57
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=4
# tm_r_factor[0]=60
# effective_consumer_grid_size_r[0]=360
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=360
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=360
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=4
# tm_r_factor[1]=60
# effective_consumer_grid_size_r[1]=60
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=60
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=60
# reblock_tm_fork_c_factor_int[1]=8
# tm_c_factor[2]=4
# tm_r_factor[2]=60
# effective_consumer_grid_size_r[2]=60
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=60
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=60
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=4
# tm_r_factor[3]=60
# effective_consumer_grid_size_r[3]=60
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=60
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=60
# reblock_tm_fork_c_factor_int[3]=8
#Test id=15
- device: WORMHOLE_B0
  entries: 48
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x303823e0]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {r: 12}, broadcast: {c: 16}]'
  input1_tms: '[broadcast: {z: 6}, broadcast: {r: 12}, broadcast: {c: 16}]'
  input2_tms: '[broadcast: {z: 4}, broadcast: {r: 12}, broadcast: {c: 16}]'
  input3_tms: '[broadcast: {z: 2}, broadcast: {r: 12}, broadcast: {c: 16}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x305702e0]]'
  output1_dram_buffers: '[[1, 0x31807e80]]'
  output2_dram_buffers: '[[1, 0x385dc0a0]]'
  output3_dram_buffers: '[[1, 0x3d7cee20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 12
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 1
  op0_mb_r: 2
  op0_mb_c: 8
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 12
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 6
  op1_mb_r: 3
  op1_mb_c: 8
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 12
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 12
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 2
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=16
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=32
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=32
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=32
# tm_c_factor[1]=16
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=32
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=32
# reblock_tm_fork_r_factor_int[1]=24
# reblock_tm_fork_c_factor_int[1]=32
# tm_c_factor[2]=16
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=16
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=16
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=16
# tm_c_factor[3]=16
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=24
# effective_consumer_grid_size_c[3]=32
# effective_consumer_grid_size_r_reblock[3]=24
# effective_consumer_grid_size_c_reblock[3]=32
# reblock_tm_fork_r_factor_int[3]=24
# reblock_tm_fork_c_factor_int[3]=32
#Test id=16
- device: WORMHOLE_B0
  entries: 20
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x342950e0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 38}, broadcast: {r: 24}]'
  input1_tms: '[broadcast: {z: 56}, broadcast: {r: 24}]'
  input2_tms: '[broadcast: {z: 40}, broadcast: {r: 24}]'
  input3_tms: '[broadcast: {z: 54}, broadcast: {r: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x348c5120]]'
  output1_dram_buffers: '[[4, 0x371065c0]]'
  output2_dram_buffers: '[[4, 0x3a67cd80]]'
  output3_dram_buffers: '[[4, 0x3cc93260]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 38
  output0_mb_r: 24
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 38
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 56
  output1_mb_r: 24
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 56
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 40
  output2_mb_r: 24
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 40
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 54
  output3_mb_r: 24
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 54
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=24
# effective_consumer_grid_size_r[0]=24
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=24
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=24
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=24
# effective_consumer_grid_size_r[1]=72
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=72
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=72
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=24
# effective_consumer_grid_size_r[2]=96
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=96
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=96
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=24
# effective_consumer_grid_size_r[3]=48
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=48
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=48
# reblock_tm_fork_c_factor_int[3]=1
#Test id=17
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 7
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x322626e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 10}, broadcast: {r: 96}]'
  input1_tms: '[broadcast: {z: 52}, broadcast: {r: 96}]'
  input2_tms: '[broadcast: {z: 15}, broadcast: {r: 96}]'
  input3_tms: '[broadcast: {z: 16}, broadcast: {r: 96}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x342a2d80]]'
  output1_dram_buffers: '[[2, 0x3a4c45a0]]'
  output2_dram_buffers: '[[2, 0x3bca21a0]]'
  output3_dram_buffers: '[[2, 0x3cacabc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 96
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 10
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 96
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 52
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 15
  output2_mb_r: 96
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 15
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 96
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 16
  op3_mb_r: 16
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=96
# effective_consumer_grid_size_r[0]=96
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=96
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=96
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=96
# effective_consumer_grid_size_r[1]=96
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=96
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=96
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=96
# effective_consumer_grid_size_r[2]=96
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=96
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=96
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=96
# effective_consumer_grid_size_r[3]=96
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=96
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=96
# reblock_tm_fork_c_factor_int[3]=1
#Test id=18
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[3, 0x3995b7c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 27}, broadcast: {r: 70}]'
  input1_tms: '[broadcast: {z: 50}, broadcast: {r: 70}]'
  input2_tms: '[broadcast: {z: 11}, broadcast: {r: 70}]'
  input3_tms: '[broadcast: {z: 46}, broadcast: {r: 70}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3a333820]]'
  output1_dram_buffers: '[[3, 0x3a866480]]'
  output2_dram_buffers: '[[3, 0x3bb95740]]'
  output3_dram_buffers: '[[3, 0x3d416100]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 27
  output0_mb_r: 10
  output0_mb_c: 1
  output0_ub_r: 7
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 27
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 50
  output1_mb_r: 10
  output1_mb_c: 1
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 50
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 11
  output2_mb_r: 14
  output2_mb_c: 1
  output2_ub_r: 5
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 11
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 46
  output3_mb_r: 14
  output3_mb_c: 1
  output3_ub_r: 5
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 46
  op3_mb_r: 14
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=70
# effective_consumer_grid_size_r[0]=70
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=70
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=70
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=70
# effective_consumer_grid_size_r[1]=70
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=70
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=70
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=70
# effective_consumer_grid_size_r[2]=70
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=70
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=70
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=70
# effective_consumer_grid_size_r[3]=70
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=70
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=70
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x3df220c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 7
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 64}]'
  input1_tms: '[broadcast: {z: 21}]'
  input2_tms: '[broadcast: {z: 55}]'
  input3_tms: '[broadcast: {z: 35}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3ef43d00]]'
  output1_dram_buffers: '[[5, 0x3fc79be0]]'
  output2_dram_buffers: '[[5, 0x3fd371a0]]'
  output3_dram_buffers: '[[5, 0x3fec2a80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 64
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 64
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 21
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 21
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 55
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 55
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 35
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 35
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=20
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 7
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x309ab800]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 56}, broadcast: {r: 8}, broadcast: {c: 24}]'
  input1_tms: '[broadcast: {z: 55}, broadcast: {r: 8}, broadcast: {c: 24}]'
  input2_tms: '[broadcast: {z: 3}, broadcast: {r: 8}, broadcast: {c: 24}]'
  input3_tms: '[broadcast: {z: 32}, broadcast: {r: 8}, broadcast: {c: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x30ac5220], [4, 0x321bd240], [3, 0x338b5260], [3, 0x34fad280]]'
  output1_dram_buffers: '[[2, 0x36861840], [4, 0x3957f860]]'
  output2_dram_buffers: '[[2, 0x3c54f200], [4, 0x3c7c5220]]'
  output3_dram_buffers: '[[2, 0x3cada400], [4, 0x3e51a420]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 2
  output0_t: 56
  output0_mb_r: 2
  output0_mb_c: 6
  output0_ub_r: 2
  output0_ub_c: 2
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 56
  op0_mb_r: 2
  op0_mb_c: 6
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 55
  output1_mb_r: 4
  output1_mb_c: 12
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 55
  op1_mb_r: 4
  op1_mb_c: 12
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 3
  output2_mb_r: 2
  output2_mb_c: 8
  output2_ub_r: 2
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 3
  op2_mb_r: 2
  op2_mb_c: 8
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 32
  output3_mb_r: 2
  output3_mb_c: 8
  output3_ub_r: 2
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 32
  op3_mb_r: 2
  op3_mb_c: 8
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=24
# tm_r_factor[0]=8
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=48
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=48
# reblock_tm_fork_r_factor_int[0]=16
# reblock_tm_fork_c_factor_int[0]=48
# tm_c_factor[1]=24
# tm_r_factor[1]=8
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=48
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=48
# reblock_tm_fork_r_factor_int[1]=8
# reblock_tm_fork_c_factor_int[1]=48
# tm_c_factor[2]=24
# tm_r_factor[2]=8
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=24
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=24
# reblock_tm_fork_r_factor_int[2]=16
# reblock_tm_fork_c_factor_int[2]=24
# tm_c_factor[3]=24
# tm_r_factor[3]=8
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=16
# reblock_tm_fork_c_factor_int[3]=24
#Test id=21
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 4
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x3088a9e0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 3}, broadcast: {r: 30}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 12}, broadcast: {r: 30}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 15}, broadcast: {r: 30}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 8}, broadcast: {r: 30}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x30a306e0]]'
  output1_dram_buffers: '[[5, 0x3235ed00]]'
  output2_dram_buffers: '[[5, 0x36c014a0]]'
  output3_dram_buffers: '[[5, 0x3cf81ba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 30
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 3
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 12
  output1_mb_r: 30
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 12
  op1_mb_r: 15
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 15
  output2_mb_r: 30
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 2
  op2_t: 15
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 30
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 8
  op3_mb_r: 10
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=6
# tm_r_factor[0]=30
# effective_consumer_grid_size_r[0]=60
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=60
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=60
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=6
# tm_r_factor[1]=30
# effective_consumer_grid_size_r[1]=30
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=30
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=30
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=6
# tm_r_factor[2]=30
# effective_consumer_grid_size_r[2]=60
# effective_consumer_grid_size_c[2]=18
# effective_consumer_grid_size_r_reblock[2]=60
# effective_consumer_grid_size_c_reblock[2]=18
# reblock_tm_fork_r_factor_int[2]=60
# reblock_tm_fork_c_factor_int[2]=18
# tm_c_factor[3]=6
# tm_r_factor[3]=30
# effective_consumer_grid_size_r[3]=90
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=90
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=90
# reblock_tm_fork_c_factor_int[3]=6
#Test id=22
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x300deb00]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 7
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 20}, broadcast: {r: 6}, broadcast: {c: 24}]'
  input1_tms: '[broadcast: {z: 8}, broadcast: {r: 6}, broadcast: {c: 24}]'
  input2_tms: '[broadcast: {z: 55}, broadcast: {r: 6}, broadcast: {c: 24}]'
  input3_tms: '[broadcast: {z: 58}, broadcast: {r: 6}, broadcast: {c: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x31077c00]]'
  output1_dram_buffers: '[[0, 0x3304f580]]'
  output2_dram_buffers: '[[0, 0x3661fa00]]'
  output3_dram_buffers: '[[0, 0x39bde6a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 20
  output0_mb_r: 6
  output0_mb_c: 24
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 20
  op0_mb_r: 3
  op0_mb_c: 8
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 6
  output1_mb_c: 24
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 8
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 55
  output2_mb_r: 6
  output2_mb_c: 24
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 55
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 58
  output3_mb_r: 6
  output3_mb_c: 24
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 58
  op3_mb_r: 3
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=24
# tm_r_factor[0]=6
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=6
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=24
# tm_r_factor[1]=6
# effective_consumer_grid_size_r[1]=18
# effective_consumer_grid_size_c[1]=48
# effective_consumer_grid_size_r_reblock[1]=18
# effective_consumer_grid_size_c_reblock[1]=48
# reblock_tm_fork_r_factor_int[1]=18
# reblock_tm_fork_c_factor_int[1]=48
# tm_c_factor[2]=24
# tm_r_factor[2]=6
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=24
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=24
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=24
# tm_c_factor[3]=24
# tm_r_factor[3]=6
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=24
#Test id=23
- device: WORMHOLE_B0
  entries: 48
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x317a0180]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 15}, broadcast: {c: 28}]'
  input1_tms: '[broadcast: {z: 52}, broadcast: {c: 28}]'
  input2_tms: '[broadcast: {z: 15}, broadcast: {c: 28}]'
  input3_tms: '[broadcast: {z: 4}, broadcast: {c: 28}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x317d1140]]'
  output1_dram_buffers: '[[1, 0x34026140]]'
  output2_dram_buffers: '[[1, 0x3cc69040]]'
  output3_dram_buffers: '[[1, 0x3f46d480]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 15
  output0_mb_r: 1
  output0_mb_c: 28
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 15
  op0_mb_r: 1
  op0_mb_c: 14
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 1
  output1_mb_c: 28
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 52
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 15
  output2_mb_r: 1
  output2_mb_c: 28
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 15
  op2_mb_r: 1
  op2_mb_c: 14
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 1
  output3_mb_c: 28
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 4
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=28
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=56
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=56
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=56
# tm_c_factor[1]=28
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=28
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=28
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=28
# tm_c_factor[2]=28
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=28
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=28
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=28
# tm_c_factor[3]=28
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=56
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=56
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=56
#Test id=24
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 6
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x3736f3a0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 37}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 57}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 16}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 39}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x389185e0], [5, 0x38991c80]]'
  output1_dram_buffers: '[[0, 0x391ab300], [5, 0x392663a0]]'
  output2_dram_buffers: '[[0, 0x3dca9140]]'
  output3_dram_buffers: '[[0, 0x3eee60c0], [5, 0x3ef66060]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 37
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 37
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 57
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 57
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 1
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 16
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 39
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 39
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=6
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=6
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=6
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=6
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=12
#Test id=25
- device: WORMHOLE_B0
  entries: 20
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x300fc240]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 8}, broadcast: {r: 4}, broadcast: {c: 42}]'
  input1_tms: '[broadcast: {z: 6}, broadcast: {r: 4}, broadcast: {c: 42}]'
  input2_tms: '[broadcast: {z: 4}, broadcast: {r: 4}, broadcast: {c: 42}]'
  input3_tms: '[broadcast: {z: 20}, broadcast: {r: 4}, broadcast: {c: 42}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x301d3420]]'
  output1_dram_buffers: '[[3, 0x33725800]]'
  output2_dram_buffers: '[[3, 0x35f24d80]]'
  output3_dram_buffers: '[[3, 0x37a6d260]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 4
  output0_mb_c: 42
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 8
  op0_mb_r: 1
  op0_mb_c: 7
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 4
  output1_mb_c: 42
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 6
  op1_mb_r: 2
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 4
  output2_mb_r: 4
  output2_mb_c: 42
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 4
  op2_mb_r: 1
  op2_mb_c: 14
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 4
  output3_mb_c: 42
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 20
  op3_mb_r: 2
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=42
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=84
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=84
# reblock_tm_fork_r_factor_int[0]=8
# reblock_tm_fork_c_factor_int[0]=84
# tm_c_factor[1]=42
# tm_r_factor[1]=4
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=84
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=84
# reblock_tm_fork_r_factor_int[1]=8
# reblock_tm_fork_c_factor_int[1]=84
# tm_c_factor[2]=42
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=42
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=42
# reblock_tm_fork_r_factor_int[2]=8
# reblock_tm_fork_c_factor_int[2]=42
# tm_c_factor[3]=42
# tm_r_factor[3]=4
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=42
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=42
# reblock_tm_fork_r_factor_int[3]=8
# reblock_tm_fork_c_factor_int[3]=42
#Test id=26
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 2
  op1_loc_r: 2
  op2_loc_c: 4
  op2_loc_r: 4
  op3_loc_c: 6
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x39413600]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 22}, broadcast: {r: 12}, broadcast: {c: 16}]'
  input1_tms: '[broadcast: {z: 50}, broadcast: {r: 12}, broadcast: {c: 16}]'
  input2_tms: '[broadcast: {z: 43}, broadcast: {r: 12}, broadcast: {c: 16}]'
  input3_tms: '[broadcast: {z: 54}, broadcast: {r: 12}, broadcast: {c: 16}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3969cb80]]'
  output1_dram_buffers: '[[2, 0x3ad15ec0], [2, 0x3b2366e0], [4, 0x3b756f00], [5, 0x3bc77720]]'
  output2_dram_buffers: '[[2, 0x3c6b4da0], [2, 0x3cf865c0]]'
  output3_dram_buffers: '[[2, 0x3e381f40], [2, 0x3e90b760], [4, 0x3ee94f80], [5, 0x3f41e7a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 22
  output0_mb_r: 12
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 22
  op0_mb_r: 12
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 50
  output1_mb_r: 3
  output1_mb_c: 2
  output1_ub_r: 2
  output1_ub_c: 4
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 50
  op1_mb_r: 3
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 43
  output2_mb_r: 4
  output2_mb_c: 4
  output2_ub_r: 3
  output2_ub_c: 2
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 43
  op2_mb_r: 4
  op2_mb_c: 4
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 54
  output3_mb_r: 3
  output3_mb_c: 2
  output3_ub_r: 2
  output3_ub_c: 4
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 54
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=16
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=16
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=16
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=16
# tm_c_factor[1]=16
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=32
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=32
# reblock_tm_fork_r_factor_int[1]=24
# reblock_tm_fork_c_factor_int[1]=32
# tm_c_factor[2]=16
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=32
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=32
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=32
# tm_c_factor[3]=16
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=24
# effective_consumer_grid_size_c[3]=32
# effective_consumer_grid_size_r_reblock[3]=24
# effective_consumer_grid_size_c_reblock[3]=32
# reblock_tm_fork_r_factor_int[3]=24
# reblock_tm_fork_c_factor_int[3]=32
#Test id=27
- device: WORMHOLE_B0
  entries: 28
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 5
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 6
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x30000c60]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 8}, broadcast: {r: 12}, broadcast: {c: 32}]'
  input1_tms: '[broadcast: {z: 2}, broadcast: {r: 12}, broadcast: {c: 32}]'
  input2_tms: '[  broadcast: {r: 12}, broadcast: {c: 32}]'
  input3_tms: '[  broadcast: {r: 12}, broadcast: {c: 32}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3000f020]]'
  output1_dram_buffers: '[[1, 0x3aaaf0e0]]'
  output2_dram_buffers: '[[1, 0x3d557120]]'
  output3_dram_buffers: '[[1, 0x3eaab9a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 12
  output0_mb_c: 32
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 3
  op0_t: 8
  op0_mb_r: 2
  op0_mb_c: 8
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 12
  output1_mb_c: 32
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 12
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 12
  output2_mb_c: 32
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 3
  op2_mb_c: 16
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 12
  output3_mb_c: 32
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 1
  op3_mb_r: 6
  op3_mb_c: 4
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=32
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=36
# effective_consumer_grid_size_c[0]=64
# effective_consumer_grid_size_r_reblock[0]=36
# effective_consumer_grid_size_c_reblock[0]=64
# reblock_tm_fork_r_factor_int[0]=36
# reblock_tm_fork_c_factor_int[0]=64
# tm_c_factor[1]=32
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=64
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=64
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=64
# tm_c_factor[2]=32
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=32
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=32
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=32
# tm_c_factor[3]=32
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=64
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=64
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=64
#Test id=28
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 3
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x30fe4220]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 39}, broadcast: {r: 14}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 35}, broadcast: {r: 14}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 40}, broadcast: {r: 14}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 5}, broadcast: {r: 14}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x31006980]]'
  output1_dram_buffers: '[[5, 0x35f7b9a0]]'
  output2_dram_buffers: '[[5, 0x3a5d87c0]]'
  output3_dram_buffers: '[[5, 0x3f5d9840]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 14
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 39
  op0_mb_r: 2
  op0_mb_c: 6
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 35
  output1_mb_r: 14
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 35
  op1_mb_r: 7
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 40
  output2_mb_r: 14
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 40
  op2_mb_r: 7
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 14
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 5
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=6
# tm_r_factor[0]=14
# effective_consumer_grid_size_r[0]=14
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=14
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=14
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=6
# tm_r_factor[1]=14
# effective_consumer_grid_size_r[1]=28
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=28
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=28
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=6
# tm_r_factor[2]=14
# effective_consumer_grid_size_r[2]=14
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=14
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=14
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=6
# tm_r_factor[3]=14
# effective_consumer_grid_size_r[3]=28
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=28
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=28
# reblock_tm_fork_c_factor_int[3]=12
#Test id=29
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 1
  op0_loc_r: 7
  op1_loc_c: 2
  op1_loc_r: 4
  op2_loc_c: 4
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[5, 0x31148e40]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 21}, broadcast: {c: 18}]'
  input1_tms: '[broadcast: {z: 60}, broadcast: {c: 18}]'
  input2_tms: '[broadcast: {z: 56}, broadcast: {c: 18}]'
  input3_tms: '[broadcast: {z: 21}, broadcast: {c: 18}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3e22b2a0]]'
  output1_dram_buffers: '[[5, 0x3ec92ee0]]'
  output2_dram_buffers: '[[5, 0x3f5162e0]]'
  output3_dram_buffers: '[[5, 0x3fd060c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 21
  output0_mb_r: 1
  output0_mb_c: 18
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 21
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 60
  output1_mb_r: 1
  output1_mb_c: 18
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 60
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 56
  output2_mb_r: 1
  output2_mb_c: 18
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 56
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 21
  output3_mb_r: 1
  output3_mb_c: 18
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 21
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=18
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=18
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=18
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=18
# tm_c_factor[1]=18
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=36
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=36
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=36
# tm_c_factor[2]=18
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=54
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=54
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=54
# tm_c_factor[3]=18
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=18
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=18
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=18
#Test id=30
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 4
  op1_loc_c: 2
  op1_loc_r: 4
  op2_loc_c: 4
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x32fba100]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 3}, broadcast: {r: 18}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 14}, broadcast: {r: 18}, broadcast: {c: 12}]'
  input2_tms: '[  broadcast: {r: 18}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 2}, broadcast: {r: 18}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3329ec80]]'
  output1_dram_buffers: '[[0, 0x3552dae0]]'
  output2_dram_buffers: '[[0, 0x3bdc86e0]]'
  output3_dram_buffers: '[[0, 0x3cfda100]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 18
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 3
  op0_mb_r: 3
  op0_mb_c: 12
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 14
  output1_mb_r: 18
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 14
  op1_mb_r: 9
  op1_mb_c: 6
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 18
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 1
  op2_mb_r: 9
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 18
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 6
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=12
# tm_r_factor[0]=18
# effective_consumer_grid_size_r[0]=36
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=36
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=36
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=12
# tm_r_factor[1]=18
# effective_consumer_grid_size_r[1]=18
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=18
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=18
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=12
# tm_r_factor[2]=18
# effective_consumer_grid_size_r[2]=18
# effective_consumer_grid_size_c[2]=24
# effective_consumer_grid_size_r_reblock[2]=18
# effective_consumer_grid_size_c_reblock[2]=24
# reblock_tm_fork_r_factor_int[2]=18
# reblock_tm_fork_c_factor_int[2]=24
# tm_c_factor[3]=12
# tm_r_factor[3]=18
# effective_consumer_grid_size_r[3]=54
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=54
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=54
# reblock_tm_fork_c_factor_int[3]=24
#Test id=31
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x37c8c380]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 11}, broadcast: {r: 56}]'
  input1_tms: '[broadcast: {z: 25}, broadcast: {r: 56}]'
  input2_tms: '[broadcast: {z: 15}, broadcast: {r: 56}]'
  input3_tms: '[broadcast: {z: 47}, broadcast: {r: 56}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x37ca14c0]]'
  output1_dram_buffers: '[[4, 0x37e6b940], [2, 0x37f2afe0], [5, 0x37fea680], [4, 0x380a9d20]]'
  output2_dram_buffers: '[[4, 0x388ebbc0], [2, 0x3895e960], [5, 0x389d1700], [4, 0x38a444a0]]'
  output3_dram_buffers: '[[4, 0x3db72ac0], [2, 0x3de425e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 11
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 7
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 11
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 25
  output1_mb_r: 2
  output1_mb_c: 1
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 25
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 15
  output2_mb_r: 2
  output2_mb_c: 1
  output2_ub_r: 7
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 15
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 47
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 47
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=56
# effective_consumer_grid_size_r[0]=56
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=56
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=56
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=56
# effective_consumer_grid_size_r[1]=224
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=224
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=224
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=56
# effective_consumer_grid_size_r[2]=224
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=224
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=224
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=56
# effective_consumer_grid_size_r[3]=112
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=112
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=112
# reblock_tm_fork_c_factor_int[3]=1
#Test id=32
- device: WORMHOLE_B0
  entries: 56
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x34ee22c0]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {r: 12}, broadcast: {c: 8}]'
  input1_tms: '[  broadcast: {r: 12}, broadcast: {c: 8}]'
  input2_tms: '[broadcast: {z: 3}, broadcast: {r: 12}, broadcast: {c: 8}]'
  input3_tms: '[broadcast: {z: 3}, broadcast: {r: 12}, broadcast: {c: 8}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x353424e0]]'
  output1_dram_buffers: '[[4, 0x36b3ad20]]'
  output2_dram_buffers: '[[4, 0x380c66e0]]'
  output3_dram_buffers: '[[4, 0x3c065700]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 12
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 6
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 12
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 12
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 3
  op2_mb_r: 4
  op2_mb_c: 8
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 12
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 3
  op3_mb_r: 4
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 112
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=8
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=24
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=24
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=24
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=8
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=36
# effective_consumer_grid_size_c[1]=16
# effective_consumer_grid_size_r_reblock[1]=36
# effective_consumer_grid_size_c_reblock[1]=16
# reblock_tm_fork_r_factor_int[1]=36
# reblock_tm_fork_c_factor_int[1]=16
# tm_c_factor[2]=8
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=8
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=36
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=36
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=36
# reblock_tm_fork_c_factor_int[3]=8
#Test id=33
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 3
  op1_loc_r: 5
  op2_loc_c: 4
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x30001400]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 46}, broadcast: {r: 12}, broadcast: {c: 24}]'
  input1_tms: '[broadcast: {z: 39}, broadcast: {r: 12}, broadcast: {c: 24}]'
  input2_tms: '[broadcast: {z: 17}, broadcast: {r: 12}, broadcast: {c: 24}]'
  input3_tms: '[broadcast: {z: 2}, broadcast: {r: 12}, broadcast: {c: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x30004600], [5, 0x3389e620]]'
  output1_dram_buffers: '[[4, 0x3713c640]]'
  output2_dram_buffers: '[[4, 0x3d1386e0], [5, 0x3df2a700], [2, 0x3ed1c720]]'
  output3_dram_buffers: '[[4, 0x3fb11e60], [5, 0x3fc4ce80], [2, 0x3fd87ea0], [3, 0x3fec2ec0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 46
  output0_mb_r: 12
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 46
  op0_mb_r: 12
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 39
  output1_mb_r: 4
  output1_mb_c: 12
  output1_ub_r: 3
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 39
  op1_mb_r: 4
  op1_mb_c: 12
  op1_ub_r: 3
  op1_ub_c: 2
  output2_grid_size_c: 3
  output2_grid_size_r: 1
  output2_t: 17
  output2_mb_r: 3
  output2_mb_c: 8
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 17
  op2_mb_r: 3
  op2_mb_c: 8
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 2
  output3_mb_r: 3
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 3
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 2
  op3_mb_r: 3
  op3_mb_c: 8
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=24
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=48
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=48
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=48
# tm_c_factor[1]=24
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=24
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=72
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=72
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=72
# tm_c_factor[3]=24
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=48
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=48
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=48
# reblock_tm_fork_c_factor_int[3]=24
#Test id=34
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 2
  op1_loc_r: 1
  op2_loc_c: 3
  op2_loc_r: 3
  op3_loc_c: 6
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x36f9ec00]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 41}, broadcast: {r: 24}, broadcast: {c: 8}]'
  input1_tms: '[broadcast: {z: 29}, broadcast: {r: 24}, broadcast: {c: 8}]'
  input2_tms: '[broadcast: {z: 13}, broadcast: {r: 24}, broadcast: {c: 8}]'
  input3_tms: '[broadcast: {z: 54}, broadcast: {r: 24}, broadcast: {c: 8}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x36fe5640]]'
  output1_dram_buffers: '[[4, 0x39349920]]'
  output2_dram_buffers: '[[4, 0x3c4a7040], [1, 0x3c9fc060]]'
  output3_dram_buffers: '[[4, 0x3d0f8020], [1, 0x3dc0b040], [3, 0x3e71e060], [5, 0x3f231080]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 41
  output0_mb_r: 3
  output0_mb_c: 8
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 41
  op0_mb_r: 3
  op0_mb_c: 8
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 29
  output1_mb_r: 12
  output1_mb_c: 4
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 29
  op1_mb_r: 12
  op1_mb_c: 4
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 6
  output2_mb_c: 4
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 13
  op2_mb_r: 6
  op2_mb_c: 4
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 54
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 54
  op3_mb_r: 12
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=8
# tm_r_factor[0]=24
# effective_consumer_grid_size_r[0]=24
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=24
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=24
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=8
# tm_r_factor[1]=24
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=24
# reblock_tm_fork_c_factor_int[1]=8
# tm_c_factor[2]=8
# tm_r_factor[2]=24
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=16
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=16
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=16
# tm_c_factor[3]=8
# tm_r_factor[3]=24
# effective_consumer_grid_size_r[3]=48
# effective_consumer_grid_size_c[3]=16
# effective_consumer_grid_size_r_reblock[3]=48
# effective_consumer_grid_size_c_reblock[3]=16
# reblock_tm_fork_r_factor_int[3]=48
# reblock_tm_fork_c_factor_int[3]=16
#Test id=35
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 7
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 7
  op3_loc_c: 6
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x372bd020]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 39}]'
  input1_tms: '[broadcast: {z: 64}]'
  input2_tms: '[broadcast: {z: 33}]'
  input3_tms: '[broadcast: {z: 55}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x37aba800]]'
  output1_dram_buffers: '[[5, 0x37d420a0]]'
  output2_dram_buffers: '[[5, 0x3bb64360]]'
  output3_dram_buffers: '[[5, 0x3bcf6240]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 39
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 64
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 64
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 33
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 33
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 55
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 55
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=36
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 7
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x353c6520]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 7
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 61}]'
  input1_tms: '[broadcast: {z: 15}]'
  input2_tms: '[broadcast: {z: 23}]'
  input3_tms: '[broadcast: {z: 38}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3a5c9580]]'
  output1_dram_buffers: '[[0, 0x3a768b40]]'
  output2_dram_buffers: '[[0, 0x3ab91240]]'
  output3_dram_buffers: '[[0, 0x3d68a6e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 61
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 61
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 15
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 15
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 23
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 23
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 38
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 38
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=37
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 1
  op0_loc_r: 7
  op1_loc_c: 3
  op1_loc_r: 7
  op2_loc_c: 5
  op2_loc_r: 7
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x31bebf80]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 31}, broadcast: {c: 112}]'
  input1_tms: '[broadcast: {z: 30}, broadcast: {c: 112}]'
  input2_tms: '[broadcast: {z: 14}, broadcast: {c: 112}]'
  input3_tms: '[broadcast: {z: 48}, broadcast: {c: 112}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x345842a0], [3, 0x349398c0]]'
  output1_dram_buffers: '[[5, 0x3cb71ec0], [3, 0x3cf08ae0]]'
  output2_dram_buffers: '[[5, 0x3dd73420], [3, 0x3df20040]]'
  output3_dram_buffers: '[[5, 0x3e137620]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 1
  output0_t: 31
  output0_mb_r: 1
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 7
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 31
  op0_mb_r: 1
  op0_mb_c: 8
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 30
  output1_mb_r: 1
  output1_mb_c: 14
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 30
  op1_mb_r: 1
  op1_mb_c: 14
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 14
  output2_mb_r: 1
  output2_mb_c: 7
  output2_ub_r: 1
  output2_ub_c: 8
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 14
  op2_mb_r: 1
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 8
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 1
  output3_mb_c: 14
  output3_ub_r: 1
  output3_ub_c: 8
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 48
  op3_mb_r: 1
  op3_mb_c: 14
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=112
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=224
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=224
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=224
# tm_c_factor[1]=112
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=224
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=224
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=224
# tm_c_factor[2]=112
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=224
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=224
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=224
# tm_c_factor[3]=112
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=112
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=112
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=112
#Test id=38
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 2
  op1_loc_r: 1
  op2_loc_c: 4
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3ca83620]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 58}, broadcast: {c: 24}]'
  input1_tms: '[broadcast: {z: 14}, broadcast: {c: 24}]'
  input2_tms: '[broadcast: {z: 11}, broadcast: {c: 24}]'
  input3_tms: '[broadcast: {z: 44}, broadcast: {c: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3d014d00]]'
  output1_dram_buffers: '[[3, 0x3d76e620], [2, 0x3d826240]]'
  output2_dram_buffers: '[[3, 0x3ef28200], [2, 0x3efb8820]]'
  output3_dram_buffers: '[[3, 0x3f4c9b00], [2, 0x3f70b320]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 58
  output0_mb_r: 1
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 8
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 58
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 2
  output1_grid_size_r: 1
  output1_t: 14
  output1_mb_r: 1
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 14
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 11
  output2_mb_r: 1
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 11
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 2
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 1
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 44
  op3_mb_r: 1
  op3_mb_c: 12
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=24
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=24
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=24
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=24
# tm_c_factor[1]=24
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=48
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=48
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=48
# tm_c_factor[2]=24
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=48
# tm_c_factor[3]=24
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=48
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=48
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=48
#Test id=39
- device: WORMHOLE_B0
  entries: 40
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x30953cc0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 3}, broadcast: {r: 150}]'
  input1_tms: '[broadcast: {z: 9}, broadcast: {r: 150}]'
  input2_tms: '[broadcast: {z: 7}, broadcast: {r: 150}]'
  input3_tms: '[  broadcast: {r: 150}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x30974d00]]'
  output1_dram_buffers: '[[4, 0x32d9dc60]]'
  output2_dram_buffers: '[[4, 0x39cb8d80]]'
  output3_dram_buffers: '[[4, 0x3f2498e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 150
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 3
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 150
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 5
  op1_t: 9
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 150
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 7
  op2_mb_r: 10
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 150
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 15
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=150
# effective_consumer_grid_size_r[0]=300
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=300
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=300
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=150
# effective_consumer_grid_size_r[1]=750
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=750
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=750
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=150
# effective_consumer_grid_size_r[2]=450
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=450
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=450
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=150
# effective_consumer_grid_size_r[3]=300
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=300
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=300
# reblock_tm_fork_c_factor_int[3]=1
#Test id=40
- device: WORMHOLE_B0
  entries: 32
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 3
  op1_loc_r: 5
  op2_loc_c: 4
  op2_loc_r: 0
  op3_loc_c: 5
  op3_loc_r: 7
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x36122f00]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 6
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 24}]'
  input1_tms: '[broadcast: {z: 4}]'
  input2_tms: '[broadcast: {z: 45}]'
  input3_tms: '[broadcast: {z: 57}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x36457840]]'
  output1_dram_buffers: '[[4, 0x36c74380]]'
  output2_dram_buffers: '[[4, 0x36e1cac0]]'
  output3_dram_buffers: '[[4, 0x376a0080]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 24
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 4
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 45
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 45
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 57
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 57
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=41
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 3
  op1_loc_c: 2
  op1_loc_r: 6
  op2_loc_c: 3
  op2_loc_r: 0
  op3_loc_c: 5
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3b2cb920]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 34}, broadcast: {r: 24}]'
  input1_tms: '[broadcast: {z: 9}, broadcast: {r: 24}]'
  input2_tms: '[broadcast: {z: 26}, broadcast: {r: 24}]'
  input3_tms: '[broadcast: {z: 55}, broadcast: {r: 24}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3bbe3100], [3, 0x3bcc2320], [5, 0x3bda1540], [3, 0x3be80760]]'
  output1_dram_buffers: '[[3, 0x3c108a20]]'
  output2_dram_buffers: '[[3, 0x3c888540], [3, 0x3c9dd960]]'
  output3_dram_buffers: '[[3, 0x3d0e2b60], [3, 0x3d2c3f80], [5, 0x3d4a53a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 34
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 34
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 4
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 9
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 26
  output2_mb_r: 3
  output2_mb_c: 1
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 26
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 3
  output3_t: 55
  output3_mb_r: 2
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 55
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=24
# effective_consumer_grid_size_r[0]=96
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=96
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=96
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=24
# effective_consumer_grid_size_r[1]=24
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=24
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=24
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=24
# effective_consumer_grid_size_r[2]=48
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=48
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=48
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=24
# effective_consumer_grid_size_r[3]=72
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=72
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=72
# reblock_tm_fork_c_factor_int[3]=1
#Test id=42
- device: WORMHOLE_B0
  entries: 40
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[2, 0x3023d700]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 5}, broadcast: {r: 4}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 9}, broadcast: {r: 4}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 9}, broadcast: {r: 4}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 10}, broadcast: {r: 4}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x30306ca0]]'
  output1_dram_buffers: '[[2, 0x32970140]]'
  output2_dram_buffers: '[[2, 0x36dfd240]]'
  output3_dram_buffers: '[[2, 0x3b249a20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 4
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 5
  op0_mb_r: 4
  op0_mb_c: 12
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 4
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 9
  op1_mb_r: 2
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 4
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 9
  op2_mb_r: 2
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 10
  output3_mb_r: 4
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 10
  op3_mb_r: 2
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 80
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=12
# tm_r_factor[0]=4
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=12
# tm_r_factor[1]=4
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=8
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=12
# tm_r_factor[2]=4
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=8
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=12
# tm_r_factor[3]=4
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=8
# reblock_tm_fork_c_factor_int[3]=24
#Test id=43
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 7
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x31f32380]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 19}, broadcast: {r: 42}]'
  input1_tms: '[broadcast: {z: 40}, broadcast: {r: 42}]'
  input2_tms: '[broadcast: {z: 64}, broadcast: {r: 42}]'
  input3_tms: '[broadcast: {z: 55}, broadcast: {r: 42}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x337b0ee0], [2, 0x33965580]]'
  output1_dram_buffers: '[[4, 0x3a764a80]]'
  output2_dram_buffers: '[[4, 0x3cef6bc0], [2, 0x3d0e0be0], [0, 0x3d2cac00], [3, 0x3d4b4c20], [2, 0x3d69ec40], [3, 0x3d888c60]]'
  output3_dram_buffers: '[[4, 0x3dbdfd40], [2, 0x3e0cf1e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 19
  output0_mb_r: 7
  output0_mb_c: 1
  output0_ub_r: 3
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 19
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 40
  output1_mb_r: 7
  output1_mb_c: 1
  output1_ub_r: 6
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 40
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 64
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 7
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 64
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 55
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 7
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 55
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=42
# effective_consumer_grid_size_r[0]=84
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=84
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=84
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=42
# effective_consumer_grid_size_r[1]=42
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=42
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=42
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=42
# effective_consumer_grid_size_r[2]=252
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=252
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=252
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=42
# effective_consumer_grid_size_r[3]=84
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=84
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=84
# reblock_tm_fork_c_factor_int[3]=1
#Test id=44
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 5
  op2_loc_r: 6
  op3_loc_c: 6
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x3030aba0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 28}, broadcast: {r: 56}, broadcast: {c: 6}]'
  input1_tms: '[broadcast: {z: 32}, broadcast: {r: 56}, broadcast: {c: 6}]'
  input2_tms: '[broadcast: {z: 24}, broadcast: {r: 56}, broadcast: {c: 6}]'
  input3_tms: '[broadcast: {z: 4}, broadcast: {r: 56}, broadcast: {c: 6}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x30310120], [0, 0x32b42140]]'
  output1_dram_buffers: '[[2, 0x35376000], [0, 0x36a6e020], [4, 0x38166040], [4, 0x3985e060]]'
  output2_dram_buffers: '[[2, 0x3af62900], [0, 0x3d1d6920]]'
  output3_dram_buffers: '[[2, 0x3f471740], [0, 0x3f750760], [4, 0x3fa2f780], [4, 0x3fd0e7a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 28
  output0_mb_r: 4
  output0_mb_c: 6
  output0_ub_r: 7
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 28
  op0_mb_r: 4
  op0_mb_c: 6
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 2
  output1_grid_size_r: 2
  output1_t: 32
  output1_mb_r: 4
  output1_mb_c: 3
  output1_ub_r: 7
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 32
  op1_mb_r: 4
  op1_mb_c: 3
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 24
  output2_mb_r: 14
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 24
  op2_mb_r: 14
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 2
  output3_grid_size_r: 2
  output3_t: 4
  output3_mb_r: 14
  output3_mb_c: 3
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 4
  op3_mb_r: 14
  op3_mb_c: 3
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=6
# tm_r_factor[0]=56
# effective_consumer_grid_size_r[0]=112
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=112
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=112
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=6
# tm_r_factor[1]=56
# effective_consumer_grid_size_r[1]=112
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=112
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=112
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=6
# tm_r_factor[2]=56
# effective_consumer_grid_size_r[2]=112
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=112
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=112
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=6
# tm_r_factor[3]=56
# effective_consumer_grid_size_r[3]=112
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=112
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=112
# reblock_tm_fork_c_factor_int[3]=12
#Test id=45
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x3ad49260]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 7
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[broadcast: {z: 14}, broadcast: {r: 40}]'
  input1_tms: '[broadcast: {z: 34}, broadcast: {r: 40}]'
  input2_tms: '[broadcast: {z: 23}, broadcast: {r: 40}]'
  input3_tms: '[broadcast: {z: 57}, broadcast: {r: 40}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3af2b720]]'
  output1_dram_buffers: '[[2, 0x3c21a760], [4, 0x3c502380]]'
  output2_dram_buffers: '[[2, 0x3d40bf60]]'
  output3_dram_buffers: '[[2, 0x3eb310a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 14
  output0_mb_r: 5
  output0_mb_c: 1
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 14
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 34
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 5
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 34
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 23
  output2_mb_r: 5
  output2_mb_c: 1
  output2_ub_r: 8
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 23
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 57
  output3_mb_r: 10
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 57
  op3_mb_r: 10
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=40
# effective_consumer_grid_size_r[0]=40
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=40
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=40
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=40
# effective_consumer_grid_size_r[1]=80
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=80
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=80
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=40
# effective_consumer_grid_size_r[2]=40
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=40
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=40
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=40
# effective_consumer_grid_size_r[3]=40
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=40
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=40
# reblock_tm_fork_c_factor_int[3]=1
#Test id=46
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 7
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x32162ee0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 2
  feeder_loc_r: 7
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 34}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 2}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input2_tms: '[  broadcast: {r: 12}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 4}, broadcast: {r: 12}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x322248e0]]'
  output1_dram_buffers: '[[0, 0x3bdbec20]]'
  output2_dram_buffers: '[[0, 0x3d8167a0]]'
  output3_dram_buffers: '[[0, 0x3e285aa0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 34
  output0_mb_r: 12
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 34
  op0_mb_r: 12
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 12
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 12
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 12
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 4
  op3_mb_r: 3
  op3_mb_c: 6
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=12
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=12
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=12
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=48
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=48
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=48
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=12
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=24
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=24
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=24
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=12
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=12
# reblock_tm_fork_c_factor_int[3]=12
#Test id=47
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 2
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x32348420]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 5}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input1_tms: '[broadcast: {z: 4}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input2_tms: '[broadcast: {z: 13}, broadcast: {r: 12}, broadcast: {c: 12}]'
  input3_tms: '[broadcast: {z: 7}, broadcast: {r: 12}, broadcast: {c: 12}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x32570620]]'
  output1_dram_buffers: '[[1, 0x344dddc0]]'
  output2_dram_buffers: '[[1, 0x391fc140]]'
  output3_dram_buffers: '[[1, 0x3dea5640]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 12
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 5
  op0_mb_r: 2
  op0_mb_c: 12
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 4
  output1_mb_r: 12
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 4
  op1_mb_r: 3
  op1_mb_c: 2
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 12
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 13
  op2_mb_r: 12
  op2_mb_c: 6
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 7
  output3_mb_r: 12
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 7
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=12
# tm_r_factor[0]=12
# effective_consumer_grid_size_r[0]=36
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=36
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=36
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=12
# tm_r_factor[1]=12
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=36
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=36
# reblock_tm_fork_r_factor_int[1]=12
# reblock_tm_fork_c_factor_int[1]=36
# tm_c_factor[2]=12
# tm_r_factor[2]=12
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=12
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=12
# tm_r_factor[3]=12
# effective_consumer_grid_size_r[3]=24
# effective_consumer_grid_size_c[3]=24
# effective_consumer_grid_size_r_reblock[3]=24
# effective_consumer_grid_size_c_reblock[3]=24
# reblock_tm_fork_r_factor_int[3]=24
# reblock_tm_fork_c_factor_int[3]=24
#Test id=48
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 6
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x312658a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[broadcast: {z: 39}, broadcast: {r: 15}, broadcast: {c: 8}]'
  input1_tms: '[broadcast: {z: 9}, broadcast: {r: 15}, broadcast: {c: 8}]'
  input2_tms: '[broadcast: {z: 56}, broadcast: {r: 15}, broadcast: {c: 8}]'
  input3_tms: '[broadcast: {z: 29}, broadcast: {r: 15}, broadcast: {c: 8}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x32184740]]'
  output1_dram_buffers: '[[1, 0x3429e560]]'
  output2_dram_buffers: '[[1, 0x34ce7b20]]'
  output3_dram_buffers: '[[1, 0x37d00260]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 39
  output0_mb_r: 15
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 39
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 15
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 9
  op1_mb_r: 15
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 56
  output2_mb_r: 15
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 56
  op2_mb_r: 1
  op2_mb_c: 8
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 29
  output3_mb_r: 15
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 1
  op3_t: 29
  op3_mb_r: 5
  op3_mb_c: 4
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=8
# tm_r_factor[0]=15
# effective_consumer_grid_size_r[0]=75
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=75
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=75
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=8
# tm_r_factor[1]=15
# effective_consumer_grid_size_r[1]=15
# effective_consumer_grid_size_c[1]=16
# effective_consumer_grid_size_r_reblock[1]=15
# effective_consumer_grid_size_c_reblock[1]=16
# reblock_tm_fork_r_factor_int[1]=15
# reblock_tm_fork_c_factor_int[1]=16
# tm_c_factor[2]=8
# tm_r_factor[2]=15
# effective_consumer_grid_size_r[2]=45
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=45
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=45
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=8
# tm_r_factor[3]=15
# effective_consumer_grid_size_r[3]=15
# effective_consumer_grid_size_c[3]=16
# effective_consumer_grid_size_r_reblock[3]=15
# effective_consumer_grid_size_c_reblock[3]=16
# reblock_tm_fork_r_factor_int[3]=15
# reblock_tm_fork_c_factor_int[3]=16
#Test id=49
- device: WORMHOLE_B0
  entries: 48
  op0_loc_c: 1
  op0_loc_r: 6
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x32c11700]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[  broadcast: {r: 14}, broadcast: {c: 16}]'
  input1_tms: '[  broadcast: {r: 14}, broadcast: {c: 16}]'
  input2_tms: '[broadcast: {z: 2}, broadcast: {r: 14}, broadcast: {c: 16}]'
  input3_tms: '[broadcast: {z: 4}, broadcast: {r: 14}, broadcast: {c: 16}]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x35419a20]]'
  output1_dram_buffers: '[[2, 0x369f09e0]]'
  output2_dram_buffers: '[[2, 0x37f4f140]]'
  output3_dram_buffers: '[[2, 0x3aa3e660]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 14
  output0_mb_c: 16
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 14
  output1_mb_c: 16
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 14
  output2_mb_c: 16
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 8
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 4
  output3_mb_r: 14
  output3_mb_c: 16
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 4
  op3_mb_r: 2
  op3_mb_c: 16
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 96
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=16
# tm_r_factor[0]=14
# effective_consumer_grid_size_r[0]=28
# effective_consumer_grid_size_c[0]=32
# effective_consumer_grid_size_r_reblock[0]=28
# effective_consumer_grid_size_c_reblock[0]=32
# reblock_tm_fork_r_factor_int[0]=28
# reblock_tm_fork_c_factor_int[0]=32
# tm_c_factor[1]=16
# tm_r_factor[1]=14
# effective_consumer_grid_size_r[1]=28
# effective_consumer_grid_size_c[1]=32
# effective_consumer_grid_size_r_reblock[1]=28
# effective_consumer_grid_size_c_reblock[1]=32
# reblock_tm_fork_r_factor_int[1]=28
# reblock_tm_fork_c_factor_int[1]=32
# tm_c_factor[2]=16
# tm_r_factor[2]=14
# effective_consumer_grid_size_r[2]=14
# effective_consumer_grid_size_c[2]=32
# effective_consumer_grid_size_r_reblock[2]=14
# effective_consumer_grid_size_c_reblock[2]=32
# reblock_tm_fork_r_factor_int[2]=14
# reblock_tm_fork_c_factor_int[2]=32
# tm_c_factor[3]=16
# tm_r_factor[3]=14
# effective_consumer_grid_size_r[3]=14
# effective_consumer_grid_size_c[3]=16
# effective_consumer_grid_size_r_reblock[3]=14
# effective_consumer_grid_size_c_reblock[3]=16
# reblock_tm_fork_r_factor_int[3]=14
# reblock_tm_fork_c_factor_int[3]=16
