#ntb_random_seed=0
#Test id=0
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[0, 0x3a67d880], [2, 0x3a697ca0], [4, 0x3a6b20c0], [0, 0x3a6cc4e0], [1, 0x3a6e6900], [3, 0x3a700d20], [1, 0x3a71b140], [5, 0x3a735560]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3fbe9840], [2, 0x3fc52860]]'
  output1_dram_buffers: '[[0, 0x3fd86540], [2, 0x3fdef560]]'
  output2_dram_buffers: '[[0, 0x3fe59fa0], [2, 0x3fec2fc0]]'
  output3_dram_buffers: '[[0, 0x3ff2d4a0], [2, 0x3ff964c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 1
  output0_mb_r: 3
  output0_mb_c: 4
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 3
  op0_mb_c: 4
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 12
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 8
  output2_mb_c: 4
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 8
  op2_mb_c: 4
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 6
  output3_mb_c: 2
  output3_ub_r: 4
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 6
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=1
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 60
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x354b2820], [2, 0x36468640]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x37e24f40]]'
  output1_dram_buffers: '[[2, 0x3a0e9b00]]'
  output2_dram_buffers: '[[2, 0x3c0fb0e0]]'
  output3_dram_buffers: '[[2, 0x3e07a700]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 30
  output0_mb_r: 132
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 30
  op0_mb_r: 11
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 30
  output1_mb_r: 132
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 30
  op1_mb_r: 11
  op1_mb_c: 2
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 30
  output2_mb_r: 132
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 30
  op2_mb_r: 11
  op2_mb_c: 2
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 30
  output3_mb_r: 132
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 30
  op3_mb_r: 11
  op3_mb_c: 2
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 18
  input_mb_r: 7
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x30fc54c0], [3, 0x315c4ee0], [1, 0x31bc4900], [0, 0x321c4320], [0, 0x327c3d40], [1, 0x32dc3760], [5, 0x333c3180], [3, 0x339c2ba0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x33fd7e20]]'
  output1_dram_buffers: '[[5, 0x36ffd0c0]]'
  output2_dram_buffers: '[[5, 0x39ffb020]]'
  output3_dram_buffers: '[[5, 0x3d0011a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 336
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 9
  op0_mb_r: 14
  op0_mb_c: 2
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 336
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 9
  op1_mb_r: 14
  op1_mb_c: 1
  op1_ub_r: 3
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 336
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 9
  op2_mb_r: 14
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 336
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 9
  op3_mb_r: 7
  op3_mb_c: 2
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 34
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x36d3dba0], [4, 0x370741c0], [3, 0x373aa7e0], [1, 0x376e0e00], [2, 0x37a17420]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3b9d1ba0]]'
  output1_dram_buffers: '[[4, 0x3cba55e0]]'
  output2_dram_buffers: '[[4, 0x3dc101e0]]'
  output3_dram_buffers: '[[4, 0x3ecd7820]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 17
  output0_mb_r: 60
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 17
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 17
  output1_mb_r: 60
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 17
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 17
  output2_mb_r: 60
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 17
  op2_mb_r: 15
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 17
  output3_mb_r: 60
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 17
  op3_mb_r: 10
  op3_mb_c: 1
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 38
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[5, 0x33d4b1c0], [0, 0x340e23e0], [4, 0x34479600], [3, 0x34810820], [1, 0x34ba7a40], [3, 0x34f3ec60], [0, 0x352d5e80], [5, 0x3566d0a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x36e3ffe0]]'
  output1_dram_buffers: '[[5, 0x392a6c00]]'
  output2_dram_buffers: '[[5, 0x3b3ed200]]'
  output3_dram_buffers: '[[5, 0x3da6a640]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 19
  output0_mb_r: 192
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 19
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 19
  output1_mb_r: 192
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 19
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 19
  output2_mb_r: 192
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 19
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 19
  output3_mb_r: 192
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 19
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=5
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x36d8f980], [2, 0x36dbb5a0], [2, 0x36de71c0], [4, 0x36e12de0], [2, 0x36e3ea00], [5, 0x36e6a620], [2, 0x36e96240], [3, 0x36ec1e60], [4, 0x36eeda80], [5, 0x36f196a0], [0, 0x36f452c0], [3, 0x36f70ee0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3702eae0], [2, 0x370b1f00], [2, 0x37135320], [4, 0x371b8740]]'
  output1_dram_buffers: '[[4, 0x372a41a0], [2, 0x373275c0], [2, 0x373aa9e0], [4, 0x3742de00]]'
  output2_dram_buffers: '[[4, 0x374d1c00], [2, 0x37513620], [2, 0x37555040], [4, 0x37596a60], [2, 0x375d8480], [5, 0x37619ea0], [2, 0x3765b8c0], [3, 0x3769d2e0]]'
  output3_dram_buffers: '[[4, 0x3dae8b40], [2, 0x3db6bf60], [2, 0x3dbef380], [4, 0x3dc727a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 1
  output0_mb_r: 10
  output0_mb_c: 2
  output0_ub_r: 2
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 10
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 1
  output1_mb_r: 10
  output1_mb_c: 6
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 10
  op1_mb_c: 6
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 3
  output2_ub_r: 5
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 3
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 4
  output3_mb_c: 6
  output3_ub_r: 5
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 4
  op3_mb_c: 6
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=6
- device: WORMHOLE_B0
  entries: 24
  op0_loc_c: 4
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 46
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x30b807c0], [4, 0x30db11e0], [4, 0x30fe1c00], [3, 0x31212620], [5, 0x31443040], [4, 0x31673a60], [5, 0x318a4480], [1, 0x31ad4ea0], [2, 0x31d058c0], [0, 0x31f362e0], [0, 0x32166d00], [0, 0x32397720], [3, 0x325c8140], [2, 0x327f8b60], [3, 0x32a29580], [1, 0x32c59fa0], [4, 0x32e8a9c0], [0, 0x330bb3e0], [5, 0x332ebe00], [3, 0x3351c820]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x340e71a0]]'
  output1_dram_buffers: '[[1, 0x36f92fa0]]'
  output2_dram_buffers: '[[1, 0x39e19640]]'
  output3_dram_buffers: '[[1, 0x3cffe820]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 23
  output0_mb_r: 10
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 23
  op0_mb_r: 5
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 23
  output1_mb_r: 10
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 23
  op1_mb_r: 5
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 23
  output2_mb_r: 10
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 23
  op2_mb_r: 5
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 23
  output3_mb_r: 10
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 23
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=7
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 2
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 56
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[3, 0x3010a340], [0, 0x30654b60], [5, 0x30b9f380], [0, 0x310e9ba0], [2, 0x316343c0], [5, 0x31b7ebe0], [5, 0x320c9400], [3, 0x32613c20]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x32db7f40]]'
  output1_dram_buffers: '[[3, 0x35ace9c0]]'
  output2_dram_buffers: '[[3, 0x3867b180]]'
  output3_dram_buffers: '[[3, 0x3d1a62c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 48
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 28
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 48
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 28
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 48
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 28
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 48
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 28
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=8
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 16
  input_mb_r: 1
  input_mb_c: 6
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x392174c0], [2, 0x3939a4e0], [0, 0x3951d500], [0, 0x396a0520], [1, 0x39823540], [4, 0x399a6560], [5, 0x39b29580], [2, 0x39cac5a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3a441620]]'
  output1_dram_buffers: '[[0, 0x3b05c3a0]]'
  output2_dram_buffers: '[[0, 0x3bffdf20]]'
  output3_dram_buffers: '[[0, 0x3e5a4d00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 16
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 8
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 16
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 8
  op1_mb_r: 1
  op1_mb_c: 3
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 16
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 8
  op2_mb_r: 4
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 16
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 8
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=9
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 60
  input_mb_r: 8
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x303a8580], [2, 0x3095eda0], [1, 0x30f155c0], [0, 0x314cbde0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 2
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x38f95540]]'
  output1_dram_buffers: '[[1, 0x3b5dda80]]'
  output2_dram_buffers: '[[1, 0x3cfe2ae0]]'
  output3_dram_buffers: '[[1, 0x3e8a30a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 20
  output0_mb_r: 96
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 20
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 96
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 20
  op1_mb_r: 16
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 96
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 20
  op2_mb_r: 16
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 96
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 20
  op3_mb_r: 16
  op3_mb_c: 3
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=10
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 2
  op1_loc_r: 0
  op2_loc_c: 3
  op2_loc_r: 4
  op3_loc_c: 5
  op3_loc_r: 0
  input_t: 50
  input_mb_r: 2
  input_mb_c: 6
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[5, 0x33d29820], [2, 0x3469c440], [5, 0x3500f060], [5, 0x35981c80]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x363e6b80]]'
  output1_dram_buffers: '[[5, 0x38d7af80]]'
  output2_dram_buffers: '[[5, 0x3b3f2360]]'
  output3_dram_buffers: '[[5, 0x3d9ef3c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 25
  output0_mb_r: 16
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 25
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 25
  output1_mb_r: 16
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 25
  op1_mb_r: 2
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 25
  output2_mb_r: 16
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 25
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 25
  output3_mb_r: 16
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 2
  op3_t: 25
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=11
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 16
  input_mb_r: 5
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x391cb240], [4, 0x39450260], [1, 0x396d5280], [1, 0x3995a2a0], [5, 0x39bdf2c0], [3, 0x39e642e0], [3, 0x3a0e9300], [4, 0x3a36e320]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3a652280]]'
  output1_dram_buffers: '[[0, 0x3c1e8220]]'
  output2_dram_buffers: '[[0, 0x3d67b440]]'
  output3_dram_buffers: '[[0, 0x3eac5ba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 160
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 8
  op0_t: 8
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 160
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 4
  op1_t: 8
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 160
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 8
  op2_t: 8
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 160
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 8
  op3_mb_r: 10
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=12
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x31153860], [4, 0x31160a80], [1, 0x3116dca0], [2, 0x3117aec0], [1, 0x311880e0], [4, 0x31195300], [1, 0x311a2520], [5, 0x311af740], [4, 0x311bc960], [1, 0x311c9b80], [3, 0x311d6da0], [0, 0x311e3fc0], [3, 0x311f11e0], [4, 0x311fe400], [2, 0x3120b620], [2, 0x31218840], [3, 0x31225a60], [2, 0x31232c80], [5, 0x3123fea0], [3, 0x3124d0c0], [3, 0x3125a2e0], [4, 0x31267500], [2, 0x31274720], [1, 0x31281940], [5, 0x3128eb60], [2, 0x3129bd80], [3, 0x312a8fa0], [1, 0x312b61c0], [4, 0x312c33e0], [4, 0x312d0600], [2, 0x312dd820], [3, 0x312eaa40]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3634cb40], [4, 0x36392b60], [1, 0x363d8b80], [2, 0x3641eba0], [1, 0x36464bc0], [4, 0x364aabe0]]'
  output1_dram_buffers: '[[0, 0x3b772800], [4, 0x3b7db820], [1, 0x3b844840], [2, 0x3b8ad860]]'
  output2_dram_buffers: '[[0, 0x3d2f3440], [4, 0x3d35c460], [1, 0x3d3c5480], [2, 0x3d42e4a0]]'
  output3_dram_buffers: '[[0, 0x3e77de80], [4, 0x3e7e6ea0], [1, 0x3e84fec0], [2, 0x3e8b8ee0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 1
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 1
  output1_mb_r: 12
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 12
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 12
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 12
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 12
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 12
  op3_mb_c: 4
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=13
- device: WORMHOLE_B0
  entries: 24
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 3
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x35a9b0e0], [5, 0x35ce4100], [5, 0x35f2d120], [1, 0x36176140], [0, 0x363bf160], [2, 0x36608180], [0, 0x368511a0], [4, 0x36a9a1c0], [4, 0x36ce31e0], [5, 0x36f2c200], [4, 0x37175220], [2, 0x373be240]]'
  target_device: 0
  input_count: 12
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x38913a40]]'
  output1_dram_buffers: '[[5, 0x3a610760]]'
  output2_dram_buffers: '[[5, 0x3c1a9e00]]'
  output3_dram_buffers: '[[5, 0x3e36ef00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 288
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 1
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 288
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 1
  op1_mb_r: 6
  op1_mb_c: 2
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 288
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 3
  op2_t: 1
  op2_mb_r: 16
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 288
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 1
  op3_mb_r: 6
  op3_mb_c: 2
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=18
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=18
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=18
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=18
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=18
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=18
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 36
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x31557f40], [1, 0x317ea160], [1, 0x31a7c380], [4, 0x31d0e5a0], [3, 0x31fa07c0], [4, 0x322329e0], [3, 0x324c4c00], [0, 0x32756e20], [5, 0x329e9040], [3, 0x32c7b260], [5, 0x32f0d480], [1, 0x3319f6a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3566e200]]'
  output1_dram_buffers: '[[5, 0x3a1d0a40]]'
  output2_dram_buffers: '[[5, 0x3c0e4740]]'
  output3_dram_buffers: '[[5, 0x3e0a6700]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 18
  output0_mb_r: 36
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 18
  op0_mb_r: 9
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 18
  output1_mb_r: 36
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 18
  op1_mb_r: 3
  op1_mb_c: 3
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 36
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 18
  op2_mb_r: 2
  op2_mb_c: 6
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 36
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 18
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=15
- device: WORMHOLE_B0
  entries: 1
  op0_loc_c: 1
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 2
  input_mb_r: 4
  input_mb_c: 3
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x3eed4340], [3, 0x3eeee760], [5, 0x3ef08b80], [4, 0x3ef22fa0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3f76c5e0], [3, 0x3f779800], [5, 0x3f786a20], [4, 0x3f793c40], [4, 0x3f7a0e60], [4, 0x3f7ae080], [4, 0x3f7bb2a0], [1, 0x3f7c84c0]]'
  output1_dram_buffers: '[[1, 0x3fab3c60], [3, 0x3fabc880], [5, 0x3fac54a0], [4, 0x3face0c0], [4, 0x3fad6ce0], [4, 0x3fadf900], [4, 0x3fae8520], [1, 0x3faf1140], [3, 0x3faf9d60], [4, 0x3fb02980], [0, 0x3fb0b5a0], [1, 0x3fb141c0]]'
  output2_dram_buffers: '[[1, 0x3fbb81e0], [3, 0x3fbeca00]]'
  output3_dram_buffers: '[[1, 0x3feba5e0], [3, 0x3feeee00]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 4
  output0_t: 1
  output0_mb_r: 8
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 3
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 3
  output1_grid_size_r: 4
  output1_t: 1
  output1_mb_r: 8
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 3
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 16
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 16
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 8
  output3_mb_c: 6
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 8
  op3_mb_c: 6
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=16
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 56
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x32957b40], [2, 0x32b1eb60], [1, 0x32ce5b80], [0, 0x32eacba0], [1, 0x33073bc0], [4, 0x3323abe0], [4, 0x33401c00], [3, 0x335c8c20], [4, 0x3378fc40], [3, 0x33956c60], [5, 0x33b1dc80], [5, 0x33ce4ca0], [1, 0x33eabcc0], [1, 0x34072ce0], [5, 0x34239d00], [4, 0x34400d20]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34ec93a0]]'
  output1_dram_buffers: '[[4, 0x39f69580]]'
  output2_dram_buffers: '[[4, 0x3bf54b00]]'
  output3_dram_buffers: '[[4, 0x3dc39340]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 16
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 28
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 16
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 28
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 16
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 28
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 16
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 28
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=17
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 48
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x3004d480], [0, 0x301d34a0], [2, 0x303594c0], [4, 0x304df4e0], [4, 0x30665500], [1, 0x307eb520], [0, 0x30971540], [1, 0x30af7560], [2, 0x30c7d580], [2, 0x30e035a0], [4, 0x30f895c0], [0, 0x3110f5e0], [3, 0x31295600], [5, 0x3141b620], [2, 0x315a1640], [0, 0x31727660], [0, 0x318ad680], [1, 0x31a336a0], [3, 0x31bb96c0], [2, 0x31d3f6e0], [3, 0x31ec5700], [2, 0x3204b720], [1, 0x321d1740], [2, 0x32357760], [1, 0x324dd780], [3, 0x326637a0], [4, 0x327e97c0], [5, 0x3296f7e0], [4, 0x32af5800], [2, 0x32c7b820], [5, 0x32e01840], [0, 0x32f87860]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x331c62e0]]'
  output1_dram_buffers: '[[2, 0x3630a540]]'
  output2_dram_buffers: '[[2, 0x39988500]]'
  output3_dram_buffers: '[[2, 0x3ce19ac0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 16
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 24
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 16
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 24
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 24
  output2_mb_r: 16
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 24
  op2_mb_r: 2
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 16
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 24
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=18
- device: WORMHOLE_B0
  entries: 1
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 3
  input_mb_r: 1
  input_mb_c: 7
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x367575a0], [5, 0x367a2020], [2, 0x367ecaa0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x36bc4380]]'
  output1_dram_buffers: '[[3, 0x3767c2e0]]'
  output2_dram_buffers: '[[3, 0x37d654c0]]'
  output3_dram_buffers: '[[3, 0x3e574bc0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 9
  output0_mb_c: 49
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 1
  op0_mb_r: 3
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 9
  output1_mb_c: 49
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 1
  op1_mb_r: 3
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 9
  output2_mb_c: 49
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 1
  op2_mb_r: 3
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 9
  output3_mb_c: 49
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 1
  op3_mb_r: 3
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 6
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x3e2654e0], [1, 0x3e296100], [4, 0x3e2c6d20], [3, 0x3e2f7940], [0, 0x3e328560], [3, 0x3e359180], [4, 0x3e389da0], [2, 0x3e3ba9c0]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3f5f6580]]'
  output1_dram_buffers: '[[5, 0x3fa9c0c0]]'
  output2_dram_buffers: '[[5, 0x3fc76dc0]]'
  output3_dram_buffers: '[[5, 0x3fdfe0a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 1
  output0_mb_r: 16
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 1
  output1_mb_r: 16
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 1
  output2_mb_r: 16
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 1
  output3_mb_r: 16
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 1
  op3_mb_r: 2
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=20
- device: WORMHOLE_B0
  entries: 20
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 6
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x351790e0], [4, 0x352e6b00], [3, 0x35454520], [3, 0x355c1f40], [4, 0x3572f960], [1, 0x3589d380], [3, 0x35a0ada0], [1, 0x35b787c0], [5, 0x35ce61e0], [4, 0x35e53c00], [2, 0x35fc1620], [4, 0x3612f040], [1, 0x3629ca60], [3, 0x3640a480], [3, 0x36577ea0], [3, 0x366e58c0]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x398b2020]]'
  output1_dram_buffers: '[[2, 0x3affb9e0]]'
  output2_dram_buffers: '[[2, 0x3d138e60]]'
  output3_dram_buffers: '[[2, 0x3e872ec0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 32
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 3
  op0_mb_r: 4
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 32
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 3
  op1_mb_r: 2
  op1_mb_c: 6
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 32
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 8
  op2_t: 3
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 32
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 3
  op3_mb_r: 4
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 40
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=21
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x370609a0], [5, 0x3707adc0], [5, 0x370951e0], [1, 0x370af600], [1, 0x370c9a20], [3, 0x370e3e40], [5, 0x370fe260], [1, 0x37118680], [0, 0x37132aa0], [2, 0x3714cec0], [4, 0x371672e0], [3, 0x37181700], [5, 0x3719bb20], [0, 0x371b5f40], [1, 0x371d0360], [0, 0x371ea780], [3, 0x37204ba0], [0, 0x3721efc0], [3, 0x372393e0], [4, 0x37253800], [4, 0x3726dc20], [3, 0x37288040], [0, 0x372a2460], [4, 0x372bc880], [3, 0x372d6ca0], [1, 0x372f10c0], [5, 0x3730b4e0], [5, 0x37325900], [4, 0x3733fd20], [4, 0x3735a140], [1, 0x37374560], [1, 0x3738e980]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3a7b9fa0], [5, 0x3a88bfc0], [5, 0x3a95dfe0], [1, 0x3aa30000]]'
  output1_dram_buffers: '[[5, 0x3edba760], [5, 0x3ee8c780], [5, 0x3ef5e7a0], [1, 0x3f0307c0]]'
  output2_dram_buffers: '[[5, 0x3f289380], [5, 0x3f2f23a0], [5, 0x3f35b3c0], [1, 0x3f3c43e0], [1, 0x3f42d400], [3, 0x3f496420], [5, 0x3f4ff440], [1, 0x3f568460]]'
  output3_dram_buffers: '[[5, 0x3f7f0d80], [5, 0x3f8c2da0], [5, 0x3f994dc0], [1, 0x3fa66de0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 1
  output0_mb_r: 4
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 4
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 1
  output1_mb_r: 4
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 4
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 1
  op1_mb_r: 4
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 8
  output2_t: 1
  output2_mb_r: 2
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 1
  op2_mb_r: 2
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 1
  output3_mb_r: 4
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 1
  op3_mb_r: 4
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=22
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 56
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x36c8b080], [1, 0x36cfcca0], [3, 0x36d6e8c0], [2, 0x36de04e0], [2, 0x36e52100], [3, 0x36ec3d20], [1, 0x36f35940], [1, 0x36fa7560], [4, 0x37019180], [2, 0x3708ada0], [2, 0x370fc9c0], [5, 0x3716e5e0], [3, 0x371e0200], [4, 0x37251e20], [3, 0x372c3a40], [5, 0x37335660], [4, 0x373a7280], [5, 0x37418ea0], [2, 0x3748aac0], [1, 0x374fc6e0], [4, 0x3756e300], [5, 0x375dff20], [4, 0x37651b40], [5, 0x376c3760], [5, 0x37735380], [2, 0x377a6fa0], [1, 0x37818bc0], [2, 0x3788a7e0], [4, 0x378fc400], [2, 0x3796e020], [2, 0x379dfc40], [3, 0x37a51860]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3a7f4ac0]]'
  output1_dram_buffers: '[[0, 0x3c462580]]'
  output2_dram_buffers: '[[0, 0x3dbfc040]]'
  output3_dram_buffers: '[[0, 0x3ec876c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 16
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 28
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 16
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 28
  op1_mb_r: 4
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 16
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 28
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 16
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 28
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=23
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 5
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 36
  input_mb_r: 3
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x3143f0c0], [2, 0x315f5ce0], [2, 0x317ac900], [3, 0x31963520], [0, 0x31b1a140], [4, 0x31cd0d60], [5, 0x31e87980], [1, 0x3203e5a0], [5, 0x321f51c0], [4, 0x323abde0], [4, 0x32562a00], [5, 0x32719620], [2, 0x328d0240], [4, 0x32a86e60], [0, 0x32c3da80], [5, 0x32df46a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x33b7f8c0]]'
  output1_dram_buffers: '[[1, 0x35b88ae0]]'
  output2_dram_buffers: '[[1, 0x3c394f20]]'
  output3_dram_buffers: '[[1, 0x3e19d5a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 18
  output0_mb_r: 48
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 18
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 3
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 18
  output1_mb_r: 48
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 18
  op1_mb_r: 4
  op1_mb_c: 2
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 18
  output2_mb_r: 48
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 18
  op2_mb_r: 2
  op2_mb_c: 4
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 48
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 18
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=24
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 24
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 4
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x309ae980], [5, 0x30bf31a0], [1, 0x30e379c0], [4, 0x3107c1e0], [1, 0x312c0a00], [3, 0x31505220], [3, 0x31749a40], [4, 0x3198e260]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x345f9f60]]'
  output1_dram_buffers: '[[0, 0x3a750b60]]'
  output2_dram_buffers: '[[0, 0x3bd1b220]]'
  output3_dram_buffers: '[[0, 0x3dd69820]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 12
  output0_mb_r: 96
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 12
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 12
  output1_mb_r: 96
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 12
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 12
  output2_mb_r: 96
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 12
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 12
  output3_mb_r: 96
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 12
  op3_mb_r: 3
  op3_mb_c: 2
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=25
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 18
  input_mb_r: 2
  input_mb_c: 2
  input_ub_r: 5
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x30fbc700], [1, 0x31572f20], [0, 0x31b29740]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x38385a80]]'
  output1_dram_buffers: '[[3, 0x3af94e80]]'
  output2_dram_buffers: '[[3, 0x3d161200]]'
  output3_dram_buffers: '[[3, 0x3e4915c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 20
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 9
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 20
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 9
  op1_mb_r: 5
  op1_mb_c: 6
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 20
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 9
  op2_mb_r: 1
  op2_mb_c: 6
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 20
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 9
  op3_mb_r: 5
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=8
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=26
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 3
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 39
  input_mb_r: 11
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x31c4bc80], [2, 0x31fb3320], [4, 0x3231a9c0], [5, 0x32682060], [2, 0x329e9700], [1, 0x32d50da0], [1, 0x330b8440]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 7
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3499de80]]'
  output1_dram_buffers: '[[2, 0x36459d20]]'
  output2_dram_buffers: '[[2, 0x3ab61dc0]]'
  output3_dram_buffers: '[[2, 0x3de8fce0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 13
  output0_mb_r: 231
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 13
  op0_mb_r: 11
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 13
  output1_mb_r: 231
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 13
  op1_mb_r: 11
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 13
  output2_mb_r: 231
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 13
  op2_mb_r: 11
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 13
  output3_mb_r: 231
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 13
  op3_mb_r: 11
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=27
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 54
  input_mb_r: 11
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x307e5560], [3, 0x30c9be80], [1, 0x311527a0], [4, 0x316090c0], [2, 0x31abf9e0], [1, 0x31f76300], [4, 0x3242cc20], [3, 0x328e3540]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x34e64e40]]'
  output1_dram_buffers: '[[1, 0x3854b000]]'
  output2_dram_buffers: '[[1, 0x3afa2d80]]'
  output3_dram_buffers: '[[1, 0x3d8aaac0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 27
  output0_mb_r: 88
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 27
  op0_mb_r: 11
  op0_mb_c: 2
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 27
  output1_mb_r: 88
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 27
  op1_mb_r: 11
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 27
  output2_mb_r: 88
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 27
  op2_mb_r: 11
  op2_mb_c: 2
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 27
  output3_mb_r: 88
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 27
  op3_mb_r: 11
  op3_mb_c: 2
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=28
- device: WORMHOLE_B0
  entries: 88
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 6
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x333c81a0], [0, 0x336ec7c0], [5, 0x33a10de0], [1, 0x33d35400], [5, 0x34059a20], [2, 0x3437e040], [0, 0x346a2660], [3, 0x349c6c80], [1, 0x34ceb2a0], [3, 0x3500f8c0], [3, 0x35333ee0], [1, 0x35658500]]'
  target_device: 0
  input_count: 22
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x35c54b60]]'
  output1_dram_buffers: '[[5, 0x3828f4a0]]'
  output2_dram_buffers: '[[5, 0x3a9d1a60]]'
  output3_dram_buffers: '[[5, 0x3d16e5e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 12
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 3
  op0_mb_r: 3
  op0_mb_c: 3
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 12
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 6
  op1_t: 3
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 12
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 3
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 12
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 3
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 176
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=29
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 6
  input_mb_r: 15
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[5, 0x33e3f240], [1, 0x34114c60], [2, 0x343ea680], [3, 0x346c00a0], [4, 0x34995ac0], [0, 0x34c6b4e0], [2, 0x34f40f00], [4, 0x35216920]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x378e2e80]]'
  output1_dram_buffers: '[[5, 0x390d5180]]'
  output2_dram_buffers: '[[5, 0x3a87a200]]'
  output3_dram_buffers: '[[5, 0x3e1f9740]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 240
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 3
  op0_mb_r: 15
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 240
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 3
  op1_mb_r: 15
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 240
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 6
  op2_t: 3
  op2_mb_r: 10
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 240
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 3
  op3_mb_r: 15
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=12
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=12
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=30
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 32
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[0, 0x35628440], [3, 0x3572c460], [3, 0x35830480], [3, 0x359344a0], [1, 0x35a384c0], [0, 0x35b3c4e0], [1, 0x35c40500], [2, 0x35d44520], [2, 0x35e48540], [3, 0x35f4c560], [2, 0x36050580], [2, 0x361545a0], [3, 0x362585c0], [2, 0x3635c5e0], [5, 0x36460600], [3, 0x36564620], [5, 0x36668640], [1, 0x3676c660], [4, 0x36870680], [2, 0x369746a0], [3, 0x36a786c0], [2, 0x36b7c6e0], [3, 0x36c80700], [2, 0x36d84720]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x37919b80]]'
  output1_dram_buffers: '[[0, 0x3a696360]]'
  output2_dram_buffers: '[[0, 0x3c98a940]]'
  output3_dram_buffers: '[[0, 0x3e2d5a20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 12
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 16
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 12
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 16
  op1_mb_r: 1
  op1_mb_c: 8
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 12
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 16
  op2_mb_r: 3
  op2_mb_c: 4
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 12
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 16
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=12
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=12
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=31
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 62
  input_mb_r: 13
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x30017fe0], [2, 0x30ce2600], [5, 0x319acc20], [4, 0x32677240]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x33357920]]'
  output1_dram_buffers: '[[4, 0x36682f20]]'
  output2_dram_buffers: '[[4, 0x399ac7a0]]'
  output3_dram_buffers: '[[4, 0x3ccd6560]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 31
  output0_mb_r: 104
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 31
  op0_mb_r: 13
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 31
  output1_mb_r: 104
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 31
  op1_mb_r: 13
  op1_mb_c: 2
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 31
  output2_mb_r: 104
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 31
  op2_mb_r: 13
  op2_mb_c: 2
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 31
  output3_mb_r: 104
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 31
  op3_mb_r: 13
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=32
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 2
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 6
  input_mb_r: 3
  input_mb_c: 4
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x3284cee0], [3, 0x32bba700], [3, 0x32f27f20], [0, 0x33295740]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34e67f20]]'
  output1_dram_buffers: '[[4, 0x376e7540]]'
  output2_dram_buffers: '[[4, 0x393970c0]]'
  output3_dram_buffers: '[[4, 0x3cf398c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 48
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 3
  op0_mb_r: 3
  op0_mb_c: 6
  op0_ub_r: 4
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 48
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 2
  op1_t: 3
  op1_mb_r: 6
  op1_mb_c: 4
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 48
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 3
  op2_mb_r: 1
  op2_mb_c: 12
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 48
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 3
  op3_mb_r: 4
  op3_mb_c: 12
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=33
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x390d6720], [5, 0x390f0b40], [2, 0x3910af60], [3, 0x39125380]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3e71dd20], [5, 0x3e738140], [2, 0x3e752560], [3, 0x3e76c980]]'
  output1_dram_buffers: '[[4, 0x3f6f5bc0], [5, 0x3f72a3e0]]'
  output2_dram_buffers: '[[4, 0x3fb276c0], [5, 0x3fb41ae0], [2, 0x3fb5bf00], [3, 0x3fb76320]]'
  output3_dram_buffers: '[[4, 0x3fc4e560], [5, 0x3fc82d80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 1
  output0_mb_r: 12
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 1
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 6
  output1_mb_c: 2
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 6
  op1_mb_c: 2
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 2
  output2_ub_r: 3
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 2
  op2_ub_r: 3
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 8
  output3_mb_c: 2
  output3_ub_r: 3
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 8
  op3_mb_c: 2
  op3_ub_r: 3
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=8
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=8
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=34
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 20
  input_mb_r: 5
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x3013ca00], [1, 0x30deea20], [3, 0x31aa0a40], [5, 0x32752a60]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3340d3e0]]'
  output1_dram_buffers: '[[4, 0x366d6960]]'
  output2_dram_buffers: '[[4, 0x399a1260]]'
  output3_dram_buffers: '[[4, 0x3ccc3fa0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 80
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 10
  op0_mb_r: 10
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 80
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 10
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 80
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 10
  op2_mb_r: 4
  op2_mb_c: 2
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 10
  output3_mb_r: 80
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 10
  op3_mb_r: 10
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=35
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 56
  input_mb_r: 10
  input_mb_c: 1
  input_ub_r: 7
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x36054d60]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 1
  feeder_loc_r: 6
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x380245a0]]'
  output1_dram_buffers: '[[5, 0x3a119060]]'
  output2_dram_buffers: '[[5, 0x3c07d7c0]]'
  output3_dram_buffers: '[[5, 0x3e04aba0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 140
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 28
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 140
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 28
  op1_mb_r: 14
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 140
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 28
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 140
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 28
  op3_mb_r: 14
  op3_mb_c: 1
  op3_ub_r: 5
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=8
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=36
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 4
  op3_loc_c: 6
  op3_loc_r: 5
  input_t: 20
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x30100640], [1, 0x303d6060], [5, 0x306aba80], [3, 0x309814a0], [3, 0x30c56ec0], [3, 0x30f2c8e0], [1, 0x31202300], [3, 0x314d7d20], [4, 0x317ad740], [3, 0x31a83160], [3, 0x31d58b80], [1, 0x3202e5a0], [5, 0x32303fc0], [5, 0x325d99e0], [4, 0x328af400], [2, 0x32b84e20]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x338171a0]]'
  output1_dram_buffers: '[[0, 0x36e83ec0]]'
  output2_dram_buffers: '[[0, 0x39cd19a0]]'
  output3_dram_buffers: '[[0, 0x3cb93e00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 48
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 10
  op0_mb_r: 8
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 48
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 10
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 48
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 10
  op2_mb_r: 12
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 10
  output3_mb_r: 48
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 10
  op3_mb_r: 12
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=37
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 1
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 4
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 10
  input_mb_r: 13
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x30679fe0], [3, 0x31c23500]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x345ec440]]'
  output1_dram_buffers: '[[5, 0x374a8a60]]'
  output2_dram_buffers: '[[5, 0x3a5f5fc0]]'
  output3_dram_buffers: '[[5, 0x3d37d780]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 5
  output0_mb_r: 52
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 5
  op0_mb_r: 13
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 5
  output1_mb_r: 52
  output1_mb_c: 7
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 5
  op1_mb_r: 13
  op1_mb_c: 7
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 52
  output2_mb_c: 7
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 5
  op2_mb_r: 13
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 5
  output3_mb_r: 52
  output3_mb_c: 7
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 5
  op3_mb_r: 13
  op3_mb_c: 7
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=38
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 28
  input_mb_r: 1
  input_mb_c: 8
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x30f9cf40], [2, 0x31080760], [3, 0x31163f80], [5, 0x312477a0], [2, 0x3132afc0], [3, 0x3140e7e0], [5, 0x314f2000], [2, 0x315d5820], [4, 0x316b9040], [1, 0x3179c860], [5, 0x31880080], [4, 0x319638a0], [2, 0x31a470c0], [3, 0x31b2a8e0], [0, 0x31c0e100], [0, 0x31cf1920], [3, 0x31dd5140], [0, 0x31eb8960], [5, 0x31f9c180], [3, 0x3207f9a0], [0, 0x321631c0], [4, 0x322469e0], [2, 0x3232a200], [3, 0x3240da20]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33bcdc40]]'
  output1_dram_buffers: '[[3, 0x38077b80]]'
  output2_dram_buffers: '[[3, 0x3ce00ea0]]'
  output3_dram_buffers: '[[3, 0x3e5aea60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 14
  output0_mb_r: 16
  output0_mb_c: 24
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 14
  op0_mb_r: 2
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 8
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 14
  output1_mb_r: 16
  output1_mb_c: 24
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 14
  op1_mb_r: 2
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 14
  output2_mb_r: 16
  output2_mb_c: 24
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 4
  op2_t: 14
  op2_mb_r: 4
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 14
  output3_mb_r: 16
  output3_mb_c: 24
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 14
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 8
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=39
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 3
  op0_loc_r: 3
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 20
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[4, 0x308b7000], [5, 0x32127420]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x33a62880]]'
  output1_dram_buffers: '[[4, 0x36d2b400]]'
  output2_dram_buffers: '[[4, 0x39e20ec0]]'
  output3_dram_buffers: '[[4, 0x3cf03b80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 4
  output0_mb_c: 77
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 10
  op0_mb_r: 2
  op0_mb_c: 11
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 4
  output1_mb_c: 77
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 10
  op1_mb_r: 2
  op1_mb_c: 11
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 4
  output2_mb_c: 77
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 10
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 10
  output3_mb_r: 4
  output3_mb_c: 77
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 10
  op3_mb_r: 1
  op3_mb_c: 11
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=40
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 4
  op1_loc_r: 4
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 2
  input_t: 40
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x387ee180], [5, 0x38bb59a0], [4, 0x38f7d1c0], [0, 0x393449e0], [3, 0x3970c200], [0, 0x39ad3a20]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3a50cee0]]'
  output1_dram_buffers: '[[4, 0x3bbf3480]]'
  output2_dram_buffers: '[[4, 0x3d2a4380]]'
  output3_dram_buffers: '[[4, 0x3e9515e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 20
  output0_mb_r: 36
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 20
  op0_mb_r: 3
  op0_mb_c: 4
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 36
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 20
  op1_mb_r: 3
  op1_mb_c: 4
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 36
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 20
  op2_mb_r: 9
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 36
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 20
  op3_mb_r: 2
  op3_mb_c: 4
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=12
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=12
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=41
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[3, 0x3ada5900], [3, 0x3adae520], [5, 0x3adb7140], [3, 0x3adbfd60], [4, 0x3adc8980], [4, 0x3add15a0], [3, 0x3adda1c0], [0, 0x3ade2de0], [4, 0x3adeba00], [2, 0x3adf4620], [3, 0x3adfd240], [2, 0x3ae05e60]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3e99c700], [3, 0x3e9a3020], [5, 0x3e9a9940], [3, 0x3e9b0260], [4, 0x3e9b6b80], [4, 0x3e9bd4a0], [3, 0x3e9c3dc0], [0, 0x3e9ca6e0], [4, 0x3e9d1000], [2, 0x3e9d7920], [3, 0x3e9de240], [2, 0x3e9e4b60], [5, 0x3e9eb480], [4, 0x3e9f1da0], [3, 0x3e9f86c0], [5, 0x3e9fefe0]]'
  output1_dram_buffers: '[[3, 0x3f759260], [3, 0x3f78da80]]'
  output2_dram_buffers: '[[3, 0x3fbb4ec0], [3, 0x3fbe96e0]]'
  output3_dram_buffers: '[[3, 0x3fc4a480], [3, 0x3fc7eca0]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 8
  output0_t: 1
  output0_mb_r: 1
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 3
  op0_grid_size_c: 2
  op0_grid_size_r: 8
  op0_t: 1
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 1
  output1_mb_r: 8
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 1
  op1_mb_r: 8
  op1_mb_c: 2
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 1
  output2_mb_r: 4
  output2_mb_c: 6
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 1
  op2_mb_r: 4
  op2_mb_c: 6
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 1
  output3_mb_r: 1
  output3_mb_c: 6
  output3_ub_r: 8
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 1
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 8
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=42
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 14
  input_mb_r: 9
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x347f9680], [2, 0x34ff8ea0], [4, 0x357f86c0], [5, 0x35ff7ee0]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x36cafe60]]'
  output1_dram_buffers: '[[2, 0x3943ede0]]'
  output2_dram_buffers: '[[2, 0x3b6a37a0]]'
  output3_dram_buffers: '[[2, 0x3d721560]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 7
  output0_mb_r: 72
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 7
  op0_mb_r: 9
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 7
  output1_mb_r: 72
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 7
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 7
  output2_mb_r: 72
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 7
  op2_mb_r: 12
  op2_mb_c: 2
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 7
  output3_mb_r: 72
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 7
  op3_mb_r: 2
  op3_mb_c: 2
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=12
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=12
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=43
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 9
  input_mb_r: 9
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x312da040], [2, 0x316b5360], [0, 0x31a90680], [3, 0x31e6b9a0], [2, 0x32246cc0], [3, 0x32621fe0], [1, 0x329fd300], [5, 0x32dd8620], [1, 0x331b3940], [3, 0x3358ec60], [5, 0x33969f80], [2, 0x33d452a0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34151720]]'
  output1_dram_buffers: '[[4, 0x36faa900]]'
  output2_dram_buffers: '[[4, 0x3a3717a0]]'
  output3_dram_buffers: '[[4, 0x3d1b9080]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 3
  output0_mb_r: 324
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 3
  op0_mb_r: 9
  op0_mb_c: 2
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 3
  output1_mb_r: 324
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 6
  op1_t: 3
  op1_mb_r: 9
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 3
  output2_mb_r: 324
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 3
  op2_mb_r: 9
  op2_mb_c: 2
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 3
  output3_mb_r: 324
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 6
  op3_t: 3
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=18
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=18
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=18
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=18
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=18
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=18
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=18
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=18
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=44
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 16
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x35b7e540], [0, 0x367ae560]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x377c25e0]]'
  output1_dram_buffers: '[[2, 0x39b2c540]]'
  output2_dram_buffers: '[[2, 0x3bd9fa60]]'
  output3_dram_buffers: '[[2, 0x3d92c460]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 8
  output0_mb_r: 16
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 8
  op0_mb_r: 8
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 8
  output1_mb_r: 16
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 2
  op1_t: 8
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 8
  output2_mb_r: 16
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 8
  op2_mb_r: 2
  op2_mb_c: 3
  op2_ub_r: 4
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 8
  output3_mb_r: 16
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 8
  op3_mb_r: 4
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=45
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 42
  input_mb_r: 6
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x31864420], [4, 0x31964340], [5, 0x31a64260], [1, 0x31b64180], [3, 0x31c640a0], [4, 0x31d63fc0], [0, 0x31e63ee0], [5, 0x31f63e00], [3, 0x32063d20], [4, 0x32163c40], [0, 0x32263b60], [0, 0x32363a80], [2, 0x324639a0], [0, 0x325638c0], [3, 0x326637e0], [3, 0x32763700], [3, 0x32863620], [1, 0x32963540], [5, 0x32a63460], [4, 0x32b63380], [3, 0x32c632a0], [3, 0x32d631c0], [1, 0x32e630e0], [3, 0x32f63000], [1, 0x33062f20], [3, 0x33162e40], [0, 0x33262d60], [0, 0x33362c80], [0, 0x33462ba0], [5, 0x33562ac0], [2, 0x336629e0], [2, 0x33762900]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x34db57c0]]'
  output1_dram_buffers: '[[2, 0x38b82140]]'
  output2_dram_buffers: '[[2, 0x3ae3a4a0]]'
  output3_dram_buffers: '[[2, 0x3d3fb640]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 21
  output0_mb_r: 96
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 21
  op0_mb_r: 3
  op0_mb_c: 4
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 21
  output1_mb_r: 96
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 21
  op1_mb_r: 6
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 21
  output2_mb_r: 96
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 21
  op2_mb_r: 12
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 21
  output3_mb_r: 96
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 21
  op3_mb_r: 2
  op3_mb_c: 4
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=16
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=16
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=46
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 48
  input_mb_r: 6
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x30256180], [2, 0x30dc31a0], [5, 0x319301c0], [2, 0x3249d1e0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 3
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x34552080]]'
  output1_dram_buffers: '[[0, 0x375f1600]]'
  output2_dram_buffers: '[[0, 0x3a4075c0]]'
  output3_dram_buffers: '[[0, 0x3d1d79e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 48
  output0_mb_c: 5
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 24
  op0_mb_r: 3
  op0_mb_c: 5
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 48
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 24
  op1_mb_r: 3
  op1_mb_c: 5
  op1_ub_r: 4
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 24
  output2_mb_r: 48
  output2_mb_c: 5
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 24
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 48
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 24
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=16
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=16
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=16
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=16
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=47
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 1
  input_t: 40
  input_mb_r: 1
  input_mb_c: 7
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x301b1220], [3, 0x30a94240], [1, 0x31377260], [2, 0x31c5a280]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x326cebe0]]'
  output1_dram_buffers: '[[1, 0x34bb4900]]'
  output2_dram_buffers: '[[1, 0x3a6d1580]]'
  output3_dram_buffers: '[[1, 0x3d8eb760]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 20
  output0_mb_r: 4
  output0_mb_c: 56
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 20
  op0_mb_r: 1
  op0_mb_c: 14
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 20
  output1_mb_r: 4
  output1_mb_c: 56
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 20
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 20
  output2_mb_r: 4
  output2_mb_c: 56
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 20
  op2_mb_r: 2
  op2_mb_c: 14
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 20
  output3_mb_r: 4
  output3_mb_c: 56
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 20
  op3_mb_r: 1
  op3_mb_c: 14
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=1
#Test id=48
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 3
  op2_loc_c: 5
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 45
  input_mb_r: 12
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[1, 0x3187c960], [4, 0x3253de80], [4, 0x331ff3a0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 3]'
  input1_tms: '[vstack: 3]'
  input2_tms: '[vstack: 3]'
  input3_tms: '[vstack: 3]'
  ublock_order: r
  buf_size_mb: 6
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x365609a0]]'
  output1_dram_buffers: '[[1, 0x38cc2120]]'
  output2_dram_buffers: '[[1, 0x3b34b120]]'
  output3_dram_buffers: '[[1, 0x3d9a80c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 15
  output0_mb_r: 108
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 15
  op0_mb_r: 12
  op0_mb_c: 3
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 15
  output1_mb_r: 108
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 15
  op1_mb_r: 12
  op1_mb_c: 3
  op1_ub_r: 3
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 15
  output2_mb_r: 108
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 15
  op2_mb_r: 9
  op2_mb_c: 3
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 15
  output3_mb_r: 108
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 15
  op3_mb_r: 9
  op3_mb_c: 3
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=3
# effective_consumer_grid_size_r[0]=9
# effective_consumer_grid_size_c[0]=1
# effective_consumer_grid_size_r_reblock[0]=9
# effective_consumer_grid_size_c_reblock[0]=1
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=1
# tm_r_factor[1]=3
# effective_consumer_grid_size_r[1]=9
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=9
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=3
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=3
# effective_consumer_grid_size_r[2]=9
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=9
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=3
# effective_consumer_grid_size_r[3]=9
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=9
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=49
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 38
  input_mb_r: 7
  input_mb_c: 6
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x3003cfe0], [1, 0x30ce6e00], [1, 0x31990c20], [1, 0x3263aa40]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 4
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[vstack: 2]'
  input1_tms: '[vstack: 2]'
  input2_tms: '[vstack: 2]'
  input3_tms: '[vstack: 2]'
  ublock_order: r
  buf_size_mb: 4
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x33312e20]]'
  output1_dram_buffers: '[[2, 0x366a5fa0]]'
  output2_dram_buffers: '[[2, 0x39a366e0]]'
  output3_dram_buffers: '[[2, 0x3cd2a400]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 19
  output0_mb_r: 112
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 4
  op0_t: 19
  op0_mb_r: 4
  op0_mb_c: 3
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 19
  output1_mb_r: 112
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 19
  op1_mb_r: 14
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 19
  output2_mb_r: 112
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 19
  op2_mb_r: 4
  op2_mb_c: 6
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 19
  output3_mb_r: 112
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 19
  op3_mb_r: 14
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 3
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=1
# tm_r_factor[0]=2
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=1
# tm_r_factor[1]=2
# effective_consumer_grid_size_r[1]=16
# effective_consumer_grid_size_c[1]=1
# effective_consumer_grid_size_r_reblock[1]=16
# effective_consumer_grid_size_c_reblock[1]=1
# reblock_tm_fork_r_factor_int[1]=4
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=1
# tm_r_factor[2]=2
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=1
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=1
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=1
# tm_r_factor[3]=2
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=1
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=1
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
