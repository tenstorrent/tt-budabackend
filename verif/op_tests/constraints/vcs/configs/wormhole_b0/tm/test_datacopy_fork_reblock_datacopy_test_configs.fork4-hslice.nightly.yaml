#ntb_random_seed=0
#Test id=0
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 2
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x3d126f20], [2, 0x3d134140], [4, 0x3d141360], [0, 0x3d14e580], [1, 0x3d15b7a0], [3, 0x3d1689c0], [1, 0x3d175be0], [5, 0x3d182e00], [3, 0x3d190020], [2, 0x3d19d240], [2, 0x3d1aa460], [3, 0x3d1b7680], [1, 0x3d1c48a0], [2, 0x3d1d1ac0], [3, 0x3d1dece0], [5, 0x3d1ebf00], [2, 0x3d1f9120], [0, 0x3d206340], [5, 0x3d213560], [5, 0x3d220780], [0, 0x3d22d9a0], [2, 0x3d23abc0], [4, 0x3d247de0], [5, 0x3d255000]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 48]'
  input1_tms: '[hslice: 48]'
  input2_tms: '[hslice: 48]'
  input3_tms: '[hslice: 48]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3f8a0860]]'
  output1_dram_buffers: '[[0, 0x3fbfbec0], [2, 0x3fc64ee0], [4, 0x3fccdf00]]'
  output2_dram_buffers: '[[0, 0x3fd55dc0], [2, 0x3fda49e0], [4, 0x3fdf3600], [0, 0x3fe42220]]'
  output3_dram_buffers: '[[0, 0x3fec1a40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 6
  output0_mb_c: 1
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 48
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 48
  output1_mb_r: 4
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 48
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 48
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 3
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 48
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 3
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 48
  op3_mb_r: 3
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=48
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=48
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=48
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=48
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=48
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=48
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=48
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=48
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=48
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=48
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=12
#Test id=1
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x32847a20], [2, 0x328e40c0], [2, 0x32980760], [5, 0x32a1ce00], [2, 0x32ab94a0], [4, 0x32b55b40], [1, 0x32bf21e0], [0, 0x32c8e880], [4, 0x32d2af20], [5, 0x32dc75c0], [0, 0x32e63c60], [2, 0x32f00300], [1, 0x32f9c9a0], [3, 0x33039040], [1, 0x330d56e0], [4, 0x33171d80]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 2
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x33315560]]'
  output1_dram_buffers: '[[2, 0x3454f2a0]]'
  output2_dram_buffers: '[[2, 0x3b0b0fc0]]'
  output3_dram_buffers: '[[2, 0x3e1e6aa0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 8
  output0_mb_c: 77
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 11
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 8
  output1_mb_c: 77
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 11
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 8
  output2_mb_c: 77
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 2
  op2_mb_r: 1
  op2_mb_c: 11
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 8
  output3_mb_c: 77
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 11
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=2
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 3
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 4
  input_mb_r: 1
  input_mb_c: 14
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x308706e0], [3, 0x30dc5700], [1, 0x3131a720], [0, 0x3186f740], [0, 0x31dc4760], [1, 0x32319780], [5, 0x3286e7a0], [3, 0x32dc37c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3347b0c0]]'
  output1_dram_buffers: '[[5, 0x3620e580]]'
  output2_dram_buffers: '[[5, 0x398ec860]]'
  output3_dram_buffers: '[[5, 0x3c89dd20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 16
  output0_mb_r: 4
  output0_mb_c: 42
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 16
  op0_mb_r: 1
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 16
  output1_mb_r: 4
  output1_mb_c: 42
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 16
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 16
  output2_mb_r: 4
  output2_mb_c: 42
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 16
  op2_mb_r: 1
  op2_mb_c: 14
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 16
  output3_mb_r: 4
  output3_mb_c: 42
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 16
  op3_mb_r: 1
  op3_mb_c: 6
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=3
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 3
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x35b6f980], [4, 0x35b762a0], [3, 0x35b7cbc0], [1, 0x35b834e0], [2, 0x35b89e00], [4, 0x35b90720], [1, 0x35b97040], [0, 0x35b9d960], [4, 0x35ba4280], [0, 0x35baaba0], [4, 0x35bb14c0], [2, 0x35bb7de0], [5, 0x35bbe700], [0, 0x35bc5020], [1, 0x35bcb940], [2, 0x35bd2260]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x36060760], [4, 0x36071f80], [3, 0x360837a0], [1, 0x36094fc0], [2, 0x360a67e0], [4, 0x360b8000]]'
  output1_dram_buffers: '[[4, 0x3dce6320]]'
  output2_dram_buffers: '[[4, 0x3e536620], [4, 0x3e559640], [3, 0x3e57c660]]'
  output3_dram_buffers: '[[4, 0x3e73e440], [4, 0x3e761460], [3, 0x3e784480]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 2
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 12
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 3
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 1
  output2_ub_r: 2
  output2_ub_c: 2
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 3
  output3_t: 2
  output3_mb_r: 2
  output3_mb_c: 1
  output3_ub_r: 2
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 2
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=4
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 5
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 4
  input_mb_r: 6
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x37c1ca20], [0, 0x37caee40], [4, 0x37d41260], [3, 0x37dd3680], [1, 0x37e65aa0], [3, 0x37ef7ec0], [0, 0x37f8a2e0], [5, 0x3801c700], [0, 0x380aeb20], [3, 0x38140f40], [3, 0x381d3360], [2, 0x38265780], [4, 0x382f7ba0], [2, 0x38389fc0], [3, 0x3841c3e0], [2, 0x384ae800], [4, 0x38540c20], [1, 0x385d3040], [2, 0x38665460], [4, 0x386f7880], [5, 0x38789ca0], [1, 0x3881c0c0], [0, 0x388ae4e0], [4, 0x38940900], [2, 0x389d2d20], [4, 0x38a65140], [5, 0x38af7560], [3, 0x38b89980]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 12]'
  input1_tms: '[hslice: 12]'
  input2_tms: '[hslice: 12]'
  input3_tms: '[hslice: 12]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x395d84c0]]'
  output1_dram_buffers: '[[5, 0x3cb0f800]]'
  output2_dram_buffers: '[[5, 0x3dc24d80]]'
  output3_dram_buffers: '[[5, 0x3eecc840]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 42
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 48
  op0_mb_r: 14
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 48
  output1_mb_r: 42
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 48
  op1_mb_r: 14
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 42
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 48
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 42
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 48
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=12
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=12
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=12
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=12
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=12
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=12
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=12
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=12
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=12
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=12
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=5
- device: WORMHOLE_B0
  entries: 32
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 8
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x3bd60de0], [2, 0x3bde2e00], [2, 0x3be64e20], [4, 0x3bee6e40], [2, 0x3bf68e60], [5, 0x3bfeae80], [2, 0x3c06cea0], [3, 0x3c0eeec0], [4, 0x3c170ee0], [5, 0x3c1f2f00], [0, 0x3c274f20], [3, 0x3c2f6f40]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3e4adda0]]'
  output1_dram_buffers: '[[4, 0x3ec7b080]]'
  output2_dram_buffers: '[[4, 0x3f31eca0]]'
  output3_dram_buffers: '[[4, 0x3f977a60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 24
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 2
  op0_mb_r: 12
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 24
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 2
  output2_mb_r: 24
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 2
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 2
  output3_mb_r: 24
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 2
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 64
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=6
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 6
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 15
  input_mb_r: 12
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x30387f00], [4, 0x30663320], [4, 0x3093e740], [3, 0x30c19b60], [5, 0x30ef4f80], [4, 0x311d03a0], [5, 0x314ab7c0], [1, 0x31786be0], [2, 0x31a62000], [0, 0x31d3d420], [0, 0x32018840], [0, 0x322f3c60], [3, 0x325cf080], [2, 0x328aa4a0], [3, 0x32b858c0], [1, 0x32e60ce0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x33301d20]]'
  output1_dram_buffers: '[[1, 0x36a1cb40]]'
  output2_dram_buffers: '[[1, 0x39971400]]'
  output3_dram_buffers: '[[1, 0x3c790480]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 60
  output0_mb_r: 48
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 60
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 3
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 60
  output1_mb_r: 48
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 60
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 60
  output2_mb_r: 48
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 60
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 60
  output3_mb_r: 48
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 60
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=7
- device: WORMHOLE_B0
  entries: 28
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 3
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 7
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x3571b780], [0, 0x35970aa0], [5, 0x35bc5dc0], [0, 0x35e1b0e0], [2, 0x36070400], [5, 0x362c5720], [5, 0x3651aa40], [3, 0x3676fd60], [5, 0x369c5080], [4, 0x36c1a3a0]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 28]'
  input1_tms: '[hslice: 28]'
  input2_tms: '[hslice: 28]'
  input3_tms: '[hslice: 28]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3999e5e0]]'
  output1_dram_buffers: '[[3, 0x3b8940e0]]'
  output2_dram_buffers: '[[3, 0x3cfeac20]]'
  output3_dram_buffers: '[[3, 0x3e7d8880]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 5
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 28
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 5
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 28
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 5
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 28
  op2_mb_r: 5
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 5
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 28
  op3_mb_r: 5
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=28
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=28
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=28
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=14
# tm_c_factor[1]=28
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=84
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=84
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=42
# tm_c_factor[2]=28
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=28
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=28
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=14
# tm_c_factor[3]=28
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=28
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=28
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=14
#Test id=8
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 6
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 6
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 13
  input_mb_r: 1
  input_mb_c: 15
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x301436a0], [2, 0x319d42c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x33282a40]]'
  output1_dram_buffers: '[[0, 0x363d2580]]'
  output2_dram_buffers: '[[0, 0x39502ee0]]'
  output3_dram_buffers: '[[0, 0x3c62ed60]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 26
  output0_mb_r: 2
  output0_mb_c: 30
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 26
  op0_mb_r: 1
  op0_mb_c: 15
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 26
  output1_mb_r: 2
  output1_mb_c: 30
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 26
  op1_mb_r: 1
  op1_mb_c: 15
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 26
  output2_mb_r: 2
  output2_mb_c: 30
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 26
  op2_mb_r: 1
  op2_mb_c: 15
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 26
  output3_mb_r: 2
  output3_mb_c: 30
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 26
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 3
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=4
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=4
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=4
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=9
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 14
  input_mb_r: 2
  input_mb_c: 14
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x308a5020]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 3
  feeder_loc_r: 6
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x33b43b20]]'
  output1_dram_buffers: '[[1, 0x36d9a880]]'
  output2_dram_buffers: '[[1, 0x39afb3e0]]'
  output3_dram_buffers: '[[1, 0x3c89a400]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 2
  output0_mb_c: 49
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 28
  op0_mb_r: 2
  op0_mb_c: 7
  op0_ub_r: 1
  op0_ub_c: 7
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 2
  output1_mb_c: 49
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 28
  op1_mb_r: 1
  op1_mb_c: 7
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 2
  output2_mb_c: 49
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 28
  op2_mb_r: 1
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 7
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 2
  output3_mb_c: 49
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 28
  op3_mb_r: 1
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 7
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=2
#Test id=10
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 1
  input_mb_c: 6
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[5, 0x33b1a380], [2, 0x33b4afa0], [5, 0x33b7bbc0], [5, 0x33bac7e0], [3, 0x33bdd400], [4, 0x33c0e020]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 6]'
  input1_tms: '[hslice: 6]'
  input2_tms: '[hslice: 6]'
  input3_tms: '[hslice: 6]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3d0bc180]]'
  output1_dram_buffers: '[[5, 0x3ec7a8c0]]'
  output2_dram_buffers: '[[5, 0x3f5bef60]]'
  output3_dram_buffers: '[[5, 0x3f76bda0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 6
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 6
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 6
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 2
  op1_t: 6
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 6
  output2_mb_r: 6
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 6
  op2_mb_r: 3
  op2_mb_c: 4
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 6
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 6
  op3_mb_r: 1
  op3_mb_c: 4
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=6
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=6
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=12
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=12
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=6
# tm_c_factor[2]=6
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=6
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=11
- device: WORMHOLE_B0
  entries: 28
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 3
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 2
  input_mb_c: 5
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[0, 0x303e2c00], [4, 0x3058d520], [1, 0x30737e40], [1, 0x308e2760], [5, 0x30a8d080], [3, 0x30c379a0], [3, 0x30de22c0], [4, 0x30f8cbe0], [4, 0x31137500], [3, 0x312e1e20], [1, 0x3148c740], [1, 0x31637060], [4, 0x317e1980], [0, 0x3198c2a0], [4, 0x31b36bc0], [2, 0x31ce14e0], [3, 0x31e8be00], [0, 0x32036720], [1, 0x321e1040], [5, 0x3238b960]]'
  target_device: 0
  input_count: 14
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 60]'
  input1_tms: '[hslice: 60]'
  input2_tms: '[hslice: 60]'
  input3_tms: '[hslice: 60]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3261ec40]]'
  output1_dram_buffers: '[[0, 0x34936fc0]]'
  output2_dram_buffers: '[[0, 0x385de7e0]]'
  output3_dram_buffers: '[[0, 0x3aac78a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 60
  output0_mb_r: 10
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 60
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 60
  output1_mb_r: 10
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 60
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 60
  output2_mb_r: 10
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 60
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 60
  output3_mb_r: 10
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 60
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 56
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=13
# tm_c_factor[0]=60
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=60
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=60
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=15
# tm_c_factor[1]=60
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=60
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=60
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=15
# tm_c_factor[2]=60
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=60
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=60
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=15
# tm_c_factor[3]=60
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=60
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=60
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=15
#Test id=12
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 13
  input_mb_r: 2
  input_mb_c: 13
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x324d14a0], [4, 0x3277a940], [1, 0x32a23de0], [2, 0x32ccd280], [1, 0x32f76720], [4, 0x3321fbc0], [1, 0x334c9060], [5, 0x33772500], [4, 0x33a1b9a0], [1, 0x33cc4e40], [3, 0x33f6e2e0], [0, 0x34217780]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x345a8920]]'
  output1_dram_buffers: '[[0, 0x3690cbe0]]'
  output2_dram_buffers: '[[0, 0x38f35180]]'
  output3_dram_buffers: '[[0, 0x3c894740]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 26
  output0_mb_r: 6
  output0_mb_c: 26
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 26
  op0_mb_r: 1
  op0_mb_c: 13
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 26
  output1_mb_r: 6
  output1_mb_c: 26
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 26
  op1_mb_r: 1
  op1_mb_c: 13
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 26
  output2_mb_r: 6
  output2_mb_c: 26
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 26
  op2_mb_r: 1
  op2_mb_c: 13
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 26
  output3_mb_r: 6
  output3_mb_c: 26
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 26
  op3_mb_r: 1
  op3_mb_c: 13
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=1
#Test id=13
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 4
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 26
  input_mb_r: 1
  input_mb_c: 12
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x31132e40], [5, 0x32500e60]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x34a59040]]'
  output1_dram_buffers: '[[5, 0x380ecd60]]'
  output2_dram_buffers: '[[5, 0x3a8c23e0]]'
  output3_dram_buffers: '[[5, 0x3d06f880]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 52
  output0_mb_r: 1
  output0_mb_c: 96
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 52
  op0_mb_r: 1
  op0_mb_c: 16
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 1
  output1_mb_c: 96
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 52
  op1_mb_r: 1
  op1_mb_c: 12
  op1_ub_r: 1
  op1_ub_c: 8
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 52
  output2_mb_r: 1
  output2_mb_c: 96
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 52
  op2_mb_r: 1
  op2_mb_c: 16
  op2_ub_r: 1
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 52
  output3_mb_r: 1
  output3_mb_c: 96
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 52
  op3_mb_r: 1
  op3_mb_c: 16
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=14
- device: WORMHOLE_B0
  entries: 1
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x39c3a9a0], [1, 0x39c45c80], [1, 0x39c50f60], [4, 0x39c5c240], [3, 0x39c67520], [4, 0x39c72800], [3, 0x39c7dae0], [0, 0x39c88dc0], [5, 0x39c940a0], [3, 0x39c9f380], [5, 0x39caa660], [1, 0x39cb5940], [5, 0x39cc0c20], [2, 0x39ccbf00], [2, 0x39cd71e0], [0, 0x39ce24c0], [5, 0x39ced7a0], [5, 0x39cf8a80], [0, 0x39d03d60], [4, 0x39d0f040]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 44]'
  input1_tms: '[hslice: 44]'
  input2_tms: '[hslice: 44]'
  input3_tms: '[hslice: 44]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3e181fc0]]'
  output1_dram_buffers: '[[5, 0x3e338580]]'
  output2_dram_buffers: '[[5, 0x3fd31fa0]]'
  output3_dram_buffers: '[[5, 0x3fe229a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 44
  output0_mb_r: 5
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 44
  op0_mb_r: 5
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 44
  output1_mb_r: 5
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 44
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 44
  output2_mb_r: 5
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 44
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 44
  output3_mb_r: 5
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 44
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 2
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=44
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=44
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=44
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=11
# tm_c_factor[1]=44
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=44
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=44
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=11
# tm_c_factor[2]=44
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=44
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=44
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=11
# tm_c_factor[3]=44
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=44
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=44
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=11
#Test id=15
- device: WORMHOLE_B0
  entries: 64
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 15
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[1, 0x32382ee0], [3, 0x32d08700], [5, 0x3368df20], [4, 0x34013740]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 6]'
  input1_tms: '[hslice: 6]'
  input2_tms: '[hslice: 6]'
  input3_tms: '[hslice: 6]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x35693420]]'
  output1_dram_buffers: '[[1, 0x38d79300]]'
  output2_dram_buffers: '[[1, 0x3b3a40a0]]'
  output3_dram_buffers: '[[1, 0x3d9d49c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 1
  output0_mb_c: 50
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 6
  op0_mb_r: 1
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 1
  output1_mb_c: 50
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 6
  op1_mb_r: 1
  op1_mb_c: 10
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 6
  output2_mb_r: 1
  output2_mb_c: 50
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 6
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 1
  output3_mb_c: 50
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 6
  op3_mb_r: 1
  op3_mb_c: 10
  op3_ub_r: 1
  op3_ub_c: 5
  # Program vars
  loop_count: 2
  queue_wrap_size: 128
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=6
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=6
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=6
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=6
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=16
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 5
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x349d14e0], [2, 0x349de700], [1, 0x349eb920], [0, 0x349f8b40], [1, 0x34a05d60], [4, 0x34a12f80], [4, 0x34a201a0], [3, 0x34a2d3c0], [4, 0x34a3a5e0], [3, 0x34a47800], [5, 0x34a54a20], [5, 0x34a61c40], [1, 0x34a6ee60], [1, 0x34a7c080], [5, 0x34a892a0], [4, 0x34a964c0], [0, 0x34aa36e0], [2, 0x34ab0900], [0, 0x34abdb20], [5, 0x34acad40], [4, 0x34ad7f60], [2, 0x34ae5180], [1, 0x34af23a0], [4, 0x34aff5c0], [4, 0x34b0c7e0], [5, 0x34b19a00], [2, 0x34b26c20], [1, 0x34b33e40]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 48]'
  input1_tms: '[hslice: 48]'
  input2_tms: '[hslice: 48]'
  input3_tms: '[hslice: 48]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x35698680]]'
  output1_dram_buffers: '[[4, 0x3782d9a0]]'
  output2_dram_buffers: '[[4, 0x38fce220], [2, 0x39002a40], [1, 0x39037260], [0, 0x3906ba80], [1, 0x390a02a0], [4, 0x390d4ac0], [4, 0x391092e0]]'
  output3_dram_buffers: '[[4, 0x3f87df80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 7
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 48
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 48
  output1_mb_r: 7
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 48
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 7
  output2_t: 48
  output2_mb_r: 1
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 7
  op2_t: 48
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 48
  op3_mb_r: 7
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=48
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=48
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=48
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=12
# tm_c_factor[1]=48
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=48
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=48
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=12
# tm_c_factor[2]=48
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=7
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=7
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=12
# tm_c_factor[3]=48
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=48
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=48
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=12
#Test id=17
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 3
  input_mb_r: 1
  input_mb_c: 15
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[2, 0x30165380], [0, 0x304407a0], [2, 0x3071bbc0], [4, 0x309f6fe0], [4, 0x30cd2400], [1, 0x30fad820], [0, 0x31288c40], [1, 0x31564060], [2, 0x3183f480], [2, 0x31b1a8a0], [4, 0x31df5cc0], [0, 0x320d10e0], [3, 0x323ac500], [5, 0x32687920], [2, 0x32962d40], [0, 0x32c3e160]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 8]'
  input1_tms: '[hslice: 8]'
  input2_tms: '[hslice: 8]'
  input3_tms: '[hslice: 8]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x344d82e0]]'
  output1_dram_buffers: '[[2, 0x37600d60]]'
  output2_dram_buffers: '[[2, 0x3a3bed20]]'
  output3_dram_buffers: '[[2, 0x3d17ffa0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 24
  output0_mb_r: 8
  output0_mb_c: 15
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 24
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 24
  output1_mb_r: 8
  output1_mb_c: 15
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 24
  op1_mb_r: 2
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 24
  output2_mb_r: 8
  output2_mb_c: 15
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 24
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 24
  output3_mb_r: 8
  output3_mb_c: 15
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 24
  op3_mb_r: 1
  op3_mb_c: 15
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=8
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=8
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=8
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=8
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=8
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=8
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=8
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=8
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=18
- device: WORMHOLE_B0
  entries: 10
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 4
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 2
  input_mb_r: 9
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x30aa34e0], [5, 0x30d7e900], [2, 0x31059d20], [0, 0x31335140], [3, 0x31610560], [4, 0x318eb980], [1, 0x31bc6da0], [4, 0x31ea21c0], [4, 0x3217d5e0], [4, 0x32458a00], [1, 0x32733e20], [1, 0x32a0f240]]'
  target_device: 0
  input_count: 10
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 3]'
  input1_tms: '[hslice: 3]'
  input2_tms: '[hslice: 3]'
  input3_tms: '[hslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33943a60]]'
  output1_dram_buffers: '[[3, 0x373cd100]]'
  output2_dram_buffers: '[[3, 0x3b272cc0]]'
  output3_dram_buffers: '[[3, 0x3dac7d20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 36
  output0_mb_c: 8
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 6
  op0_mb_r: 6
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 6
  output1_mb_r: 36
  output1_mb_c: 8
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 3
  op1_t: 6
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 4
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 6
  output2_mb_r: 36
  output2_mb_c: 8
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 6
  op2_mb_r: 2
  op2_mb_c: 8
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 6
  output3_mb_r: 36
  output3_mb_c: 8
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 6
  op3_mb_r: 3
  op3_mb_c: 8
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 20
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=3
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=3
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=3
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=3
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=19
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 6
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[5, 0x3c2e3de0], [1, 0x3c2e9580], [4, 0x3c2eed20], [3, 0x3c2f44c0], [0, 0x3c2f9c60], [3, 0x3c2ff400], [4, 0x3c304ba0], [2, 0x3c30a340], [2, 0x3c30fae0], [5, 0x3c315280], [0, 0x3c31aa20], [4, 0x3c3201c0], [3, 0x3c325960], [4, 0x3c32b100], [1, 0x3c3308a0], [5, 0x3c336040], [0, 0x3c33b7e0], [0, 0x3c340f80], [3, 0x3c346720], [1, 0x3c34bec0], [2, 0x3c351660], [4, 0x3c356e00], [1, 0x3c35c5a0], [0, 0x3c361d40]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 5]'
  input1_tms: '[hslice: 5]'
  input2_tms: '[hslice: 5]'
  input3_tms: '[hslice: 5]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3e7f4540], [1, 0x3e815260], [4, 0x3e835f80], [3, 0x3e856ca0]]'
  output1_dram_buffers: '[[5, 0x3f919800], [1, 0x3f93a520], [4, 0x3f95b240], [3, 0x3f97bf60]]'
  output2_dram_buffers: '[[5, 0x3fc8e9e0], [1, 0x3fcd0400]]'
  output3_dram_buffers: '[[5, 0x3ff22220], [1, 0x3ff42f40], [4, 0x3ff63c60], [3, 0x3ff84980]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 4
  output0_t: 5
  output0_mb_r: 2
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 2
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 5
  op0_mb_r: 2
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 4
  output1_t: 5
  output1_mb_r: 1
  output1_mb_c: 6
  output1_ub_r: 2
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 5
  op1_mb_r: 1
  op1_mb_c: 6
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 2
  output2_grid_size_r: 1
  output2_t: 5
  output2_mb_r: 1
  output2_mb_c: 3
  output2_ub_r: 8
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 5
  op2_mb_r: 1
  op2_mb_c: 3
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 4
  output3_t: 5
  output3_mb_r: 1
  output3_mb_c: 3
  output3_ub_r: 2
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 5
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=5
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=5
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=5
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=5
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=5
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=5
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=5
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=10
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=10
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=5
# tm_c_factor[3]=5
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=5
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=5
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=20
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 2
  op1_loc_c: 3
  op1_loc_r: 4
  op2_loc_c: 4
  op2_loc_r: 7
  op3_loc_c: 6
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 4
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x30547280], [4, 0x308c4ea0], [3, 0x30c42ac0], [3, 0x30fc06e0], [4, 0x3133e300], [1, 0x316bbf20], [3, 0x31a39b40], [1, 0x31db7760], [5, 0x32135380], [4, 0x324b2fa0], [2, 0x32830bc0], [4, 0x32bae7e0], [1, 0x32f2c400], [3, 0x332aa020]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 55]'
  input1_tms: '[hslice: 55]'
  input2_tms: '[hslice: 55]'
  input3_tms: '[hslice: 55]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x33746ac0]]'
  output1_dram_buffers: '[[2, 0x368ba8c0]]'
  output2_dram_buffers: '[[2, 0x399e43c0]]'
  output3_dram_buffers: '[[2, 0x3ccae540]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 55
  output0_mb_r: 28
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 55
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 55
  output1_mb_r: 28
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 55
  op1_mb_r: 7
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 55
  output2_mb_r: 28
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 55
  op2_mb_r: 7
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 55
  output3_mb_r: 28
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 55
  op3_mb_r: 7
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=14
# tm_c_factor[0]=55
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=55
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=55
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=29
# tm_c_factor[1]=55
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=55
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=55
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=29
# tm_c_factor[2]=55
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=110
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=110
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=55
# tm_c_factor[3]=55
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=55
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=55
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=29
#Test id=21
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 2
  op1_loc_c: 2
  op1_loc_r: 0
  op2_loc_c: 3
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 1
  input_t: 17
  input_mb_r: 15
  input_mb_c: 2
  input_ub_r: 2
  input_ub_c: 3
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x3041ae40]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 5
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x33736280]]'
  output1_dram_buffers: '[[5, 0x368016c0]]'
  output2_dram_buffers: '[[5, 0x39b843c0]]'
  output3_dram_buffers: '[[5, 0x3ce84a00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 34
  output0_mb_r: 30
  output0_mb_c: 3
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 34
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 34
  output1_mb_r: 30
  output1_mb_c: 3
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 34
  op1_mb_r: 15
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 34
  output2_mb_r: 30
  output2_mb_c: 3
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 3
  op2_grid_size_r: 1
  op2_t: 34
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 34
  output3_mb_r: 30
  output3_mb_c: 3
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 34
  op3_mb_r: 5
  op3_mb_c: 3
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=5
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=6
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=22
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 2
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x347f2f80], [1, 0x348119a0], [3, 0x348303c0], [2, 0x3484ede0], [2, 0x3486d800], [3, 0x3488c220], [1, 0x348aac40], [1, 0x348c9660], [4, 0x348e8080], [2, 0x34906aa0], [2, 0x349254c0], [5, 0x34943ee0], [3, 0x34962900], [4, 0x34981320], [3, 0x3499fd40], [5, 0x349be760], [4, 0x349dd180], [5, 0x349fbba0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 21]'
  input1_tms: '[hslice: 21]'
  input2_tms: '[hslice: 21]'
  input3_tms: '[hslice: 21]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x358ccbe0]]'
  output1_dram_buffers: '[[0, 0x36d13a60], [1, 0x36dcb680], [3, 0x36e832a0]]'
  output2_dram_buffers: '[[0, 0x3ed31560]]'
  output3_dram_buffers: '[[0, 0x3f14a660], [1, 0x3f1a6480], [3, 0x3f2022a0], [2, 0x3f25e0c0], [2, 0x3f2b9ee0], [3, 0x3f315d00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 21
  output0_mb_r: 3
  output0_mb_c: 4
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 21
  op0_mb_r: 3
  op0_mb_c: 4
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 21
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 21
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 21
  output2_mb_r: 1
  output2_mb_c: 4
  output2_ub_r: 6
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 21
  op2_mb_r: 1
  op2_mb_c: 4
  op2_ub_r: 6
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 3
  output3_t: 21
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 2
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 21
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=21
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=21
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=21
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=7
# tm_c_factor[1]=21
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=21
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=21
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=7
# tm_c_factor[2]=21
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=21
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=21
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=7
# tm_c_factor[3]=21
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=42
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=42
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=14
#Test id=23
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 2
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 3
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[1, 0x3debbaa0], [2, 0x3dee30c0], [2, 0x3df0a6e0], [3, 0x3df31d00], [0, 0x3df59320], [4, 0x3df80940], [5, 0x3dfa7f60], [1, 0x3dfcf580], [5, 0x3dff6ba0], [4, 0x3e01e1c0], [4, 0x3e0457e0], [5, 0x3e06ce00], [2, 0x3e094420], [4, 0x3e0bba40], [0, 0x3e0e3060], [5, 0x3e10a680]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3e3d8560], [2, 0x3e4aa580], [2, 0x3e57c5a0]]'
  output1_dram_buffers: '[[1, 0x3ed1b440], [2, 0x3ee56460]]'
  output2_dram_buffers: '[[1, 0x3f704f00], [2, 0x3f7a2720], [2, 0x3f83ff40], [3, 0x3f8dd760]]'
  output3_dram_buffers: '[[1, 0x3fd5dc40], [2, 0x3fdac860], [2, 0x3fdfb480], [3, 0x3fe4a0a0], [0, 0x3fe98cc0], [4, 0x3fee78e0], [5, 0x3ff36500], [1, 0x3ff85120]]'
  output0_grid_size_c: 3
  output0_grid_size_r: 1
  output0_t: 2
  output0_mb_r: 6
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 2
  op0_mb_r: 6
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 2
  output1_mb_r: 6
  output1_mb_c: 1
  output1_ub_r: 2
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 2
  op1_mb_r: 6
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 2
  output2_mb_r: 6
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 3
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 2
  op2_mb_r: 6
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 3
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 3
  output3_ub_r: 3
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 3
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=24
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 7
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 9
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x333637c0], [5, 0x333ac0e0], [1, 0x333f4a00], [4, 0x3343d320], [1, 0x33485c40], [3, 0x334ce560], [3, 0x33516e80], [4, 0x3355f7a0], [1, 0x335a80c0], [5, 0x335f09e0], [5, 0x33639300], [5, 0x33681c20], [2, 0x336ca540], [0, 0x33712e60], [5, 0x3375b780], [0, 0x337a40a0], [3, 0x337ec9c0], [0, 0x338352e0], [0, 0x3387dc00], [2, 0x338c6520]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 5
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 36]'
  input1_tms: '[hslice: 36]'
  input2_tms: '[hslice: 36]'
  input3_tms: '[hslice: 36]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x33b3d3a0]]'
  output1_dram_buffers: '[[0, 0x37694dc0]]'
  output2_dram_buffers: '[[0, 0x3deda4c0]]'
  output3_dram_buffers: '[[0, 0x3f39f6e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 36
  output0_mb_r: 5
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 36
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 5
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 36
  output1_mb_r: 5
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 36
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 5
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 36
  output2_mb_r: 5
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 5
  op2_t: 36
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 36
  output3_mb_r: 5
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 36
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=36
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=36
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=36
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=9
# tm_c_factor[1]=36
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=36
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=36
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=9
# tm_c_factor[2]=36
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=5
# effective_consumer_grid_size_c[2]=36
# effective_consumer_grid_size_r_reblock[2]=5
# effective_consumer_grid_size_c_reblock[2]=36
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=9
# tm_c_factor[3]=36
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=36
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=36
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=9
#Test id=25
- device: WORMHOLE_B0
  entries: 24
  op0_loc_c: 2
  op0_loc_r: 4
  op1_loc_c: 3
  op1_loc_r: 5
  op2_loc_c: 4
  op2_loc_r: 6
  op3_loc_c: 5
  op3_loc_r: 6
  input_t: 1
  input_mb_r: 1
  input_mb_c: 9
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x31ad8ca0], [1, 0x31dd89c0], [0, 0x320d86e0], [0, 0x323d8400], [0, 0x326d8120], [2, 0x329d7e40], [5, 0x32cd7b60], [0, 0x32fd7880]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 14]'
  input1_tms: '[hslice: 14]'
  input2_tms: '[hslice: 14]'
  input3_tms: '[hslice: 14]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3399cca0]]'
  output1_dram_buffers: '[[3, 0x36253280]]'
  output2_dram_buffers: '[[3, 0x38d4c680]]'
  output3_dram_buffers: '[[3, 0x3ab20e00]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 14
  output0_mb_r: 4
  output0_mb_c: 9
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 14
  op0_mb_r: 1
  op0_mb_c: 3
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 14
  output1_mb_r: 4
  output1_mb_c: 9
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 14
  op1_mb_r: 2
  op1_mb_c: 3
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 14
  output2_mb_r: 4
  output2_mb_c: 9
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 14
  op2_mb_r: 2
  op2_mb_c: 9
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 14
  output3_mb_r: 4
  output3_mb_c: 9
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 3
  op3_grid_size_r: 1
  op3_t: 14
  op3_mb_r: 1
  op3_mb_c: 3
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 48
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=14
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=14
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=14
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=7
# tm_c_factor[1]=14
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=14
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=14
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=7
# tm_c_factor[2]=14
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=14
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=14
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=7
# tm_c_factor[3]=14
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=42
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=42
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=21
#Test id=26
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 3
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[2, 0x3e9a4520], [2, 0x3e9a5f80], [4, 0x3e9a79e0], [5, 0x3e9a9440], [2, 0x3e9aaea0], [1, 0x3e9ac900], [1, 0x3e9ae360], [3, 0x3e9afdc0], [1, 0x3e9b1820], [3, 0x3e9b3280], [3, 0x3e9b4ce0], [0, 0x3e9b6740], [3, 0x3e9b81a0], [0, 0x3e9b9c00], [2, 0x3e9bb660], [1, 0x3e9bd0c0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3e9ca180], [2, 0x3e9ce7a0], [4, 0x3e9d2dc0], [5, 0x3e9d73e0], [2, 0x3e9dba00], [1, 0x3e9e0020]]'
  output1_dram_buffers: '[[2, 0x3f063740]]'
  output2_dram_buffers: '[[2, 0x3f9735c0], [2, 0x3f9807e0]]'
  output3_dram_buffers: '[[2, 0x3fcccb20], [2, 0x3fcd9d40]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 6
  output0_t: 2
  output0_mb_r: 2
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 6
  op0_t: 2
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 2
  output1_mb_r: 3
  output1_mb_c: 1
  output1_ub_r: 4
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 2
  op1_mb_r: 3
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 3
  output2_mb_c: 2
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 2
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 2
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=27
- device: WORMHOLE_B0
  entries: 6
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 11
  input_mb_r: 2
  input_mb_c: 3
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[1, 0x37e6ea00], [3, 0x384ab020]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x395f2000]]'
  output1_dram_buffers: '[[1, 0x3a7d0480]]'
  output2_dram_buffers: '[[1, 0x3b626240]]'
  output3_dram_buffers: '[[1, 0x3c330820]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 22
  output0_mb_r: 2
  output0_mb_c: 12
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 3
  op0_grid_size_r: 1
  op0_t: 22
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 22
  output1_mb_r: 2
  output1_mb_c: 12
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 22
  op1_mb_r: 1
  op1_mb_c: 6
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 22
  output2_mb_r: 2
  output2_mb_c: 12
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 22
  op2_mb_r: 2
  op2_mb_c: 3
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 22
  output3_mb_r: 2
  output3_mb_c: 12
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 22
  op3_mb_r: 1
  op3_mb_c: 12
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 12
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=3
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=28
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 1
  op1_loc_c: 3
  op1_loc_r: 3
  op2_loc_c: 5
  op2_loc_r: 6
  op3_loc_c: 6
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 2
  input_mb_c: 12
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x3d08fb00], [0, 0x3d215b20], [5, 0x3d39bb40], [1, 0x3d521b60], [5, 0x3d6a7b80]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 5
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 48]'
  input1_tms: '[hslice: 48]'
  input2_tms: '[hslice: 48]'
  input3_tms: '[hslice: 48]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3d8b95c0]]'
  output1_dram_buffers: '[[5, 0x3e220f60]]'
  output2_dram_buffers: '[[5, 0x3eaa3580]]'
  output3_dram_buffers: '[[5, 0x3f54f440]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 48
  output0_mb_r: 10
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 48
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 48
  output1_mb_r: 10
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 48
  op1_mb_r: 5
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 48
  output2_mb_r: 10
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 48
  op2_mb_r: 2
  op2_mb_c: 2
  op2_ub_r: 5
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 48
  output3_mb_r: 10
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 48
  op3_mb_r: 5
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=48
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=48
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=48
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=48
# tm_c_factor[1]=48
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=96
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=96
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=96
# tm_c_factor[2]=48
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=48
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=48
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=48
# tm_c_factor[3]=48
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=96
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=96
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=96
#Test id=29
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 5
  input_mb_r: 12
  input_mb_c: 1
  input_ub_r: 6
  input_ub_c: 1
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x312061c0], [1, 0x314e15e0], [2, 0x317bca00], [3, 0x31a97e20], [4, 0x31d73240], [0, 0x3204e660], [2, 0x32329a80], [4, 0x32604ea0], [5, 0x328e02c0], [3, 0x32bbb6e0], [5, 0x32e96b00], [2, 0x33171f20], [5, 0x3344d340], [0, 0x33728760]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 7
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x33ae86e0]]'
  output1_dram_buffers: '[[5, 0x363fe540]]'
  output2_dram_buffers: '[[5, 0x3aada7e0]]'
  output3_dram_buffers: '[[5, 0x3d5b2960]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 504
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 10
  op0_mb_r: 9
  op0_mb_c: 1
  op0_ub_r: 7
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 504
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 7
  op1_t: 10
  op1_mb_r: 12
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 504
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 10
  op2_mb_r: 9
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 10
  output3_mb_r: 504
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 7
  op3_t: 10
  op3_mb_r: 12
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=3
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=7
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=7
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=3
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=7
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=7
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=30
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 0
  op2_loc_c: 4
  op2_loc_r: 3
  op3_loc_c: 6
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 1
  input_mb_c: 15
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[0, 0x319e8260], [3, 0x31ada080], [3, 0x31bcbea0], [3, 0x31cbdcc0], [1, 0x31dafae0], [0, 0x31ea1900], [1, 0x31f93720], [2, 0x32085540], [2, 0x32177360], [3, 0x32269180], [2, 0x3235afa0], [2, 0x3244cdc0], [3, 0x3253ebe0], [2, 0x32630a00], [5, 0x32722820], [3, 0x32814640]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 60]'
  input1_tms: '[hslice: 60]'
  input2_tms: '[hslice: 60]'
  input3_tms: '[hslice: 60]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x32908ae0]]'
  output1_dram_buffers: '[[0, 0x3382f3c0]]'
  output2_dram_buffers: '[[0, 0x34a3b120]]'
  output3_dram_buffers: '[[0, 0x3cb19ca0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 60
  output0_mb_r: 16
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 60
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 60
  output1_mb_r: 16
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 60
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 60
  output2_mb_r: 16
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 60
  op2_mb_r: 8
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 60
  output3_mb_r: 16
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 60
  op3_mb_r: 8
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=60
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=60
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=60
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=30
# tm_c_factor[1]=60
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=60
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=60
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=30
# tm_c_factor[2]=60
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=60
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=60
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=30
# tm_c_factor[3]=60
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=60
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=60
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=30
#Test id=31
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 5
  op1_loc_c: 4
  op1_loc_r: 6
  op2_loc_c: 5
  op2_loc_r: 7
  op3_loc_c: 6
  op3_loc_r: 6
  input_t: 2
  input_mb_r: 6
  input_mb_c: 8
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x327f99e0], [2, 0x32e11a00], [5, 0x33429a20], [4, 0x33a41a40], [4, 0x34059a60], [0, 0x34671a80]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 2
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 32]'
  input1_tms: '[hslice: 32]'
  input2_tms: '[hslice: 32]'
  input3_tms: '[hslice: 32]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x34de91a0]]'
  output1_dram_buffers: '[[4, 0x373ae160]]'
  output2_dram_buffers: '[[4, 0x3affbd00]]'
  output3_dram_buffers: '[[4, 0x3d643800]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 64
  output0_mb_r: 18
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 1
  op0_t: 64
  op0_mb_r: 9
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 64
  output1_mb_r: 18
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 64
  op1_mb_r: 9
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 64
  output2_mb_r: 18
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 64
  op2_mb_r: 9
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 64
  output3_mb_r: 18
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 64
  op3_mb_r: 9
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=32
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=64
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=64
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=32
# tm_c_factor[1]=32
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=32
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=32
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=16
# tm_c_factor[2]=32
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=32
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=32
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=16
# tm_c_factor[3]=32
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=64
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=64
# reblock_tm_fork_r_factor_int[3]=2
# reblock_tm_fork_c_factor_int[3]=32
#Test id=32
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 7
  input_mb_r: 1
  input_mb_c: 5
  input_ub_r: 2
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x302f1940], [3, 0x30525f60], [3, 0x3075a580], [0, 0x3098eba0], [3, 0x30bc31c0], [0, 0x30df77e0], [0, 0x3102be00], [3, 0x31260420], [2, 0x31494a40], [3, 0x316c9060], [5, 0x318fd680], [2, 0x31b31ca0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x37ab4120]]'
  output1_dram_buffers: '[[4, 0x39f157c0]]'
  output2_dram_buffers: '[[4, 0x3c22e260]]'
  output3_dram_buffers: '[[4, 0x3dfb9880]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 6
  output0_mb_c: 10
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 28
  op0_mb_r: 2
  op0_mb_c: 10
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 6
  output1_mb_c: 10
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 28
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 6
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 3
  op2_t: 28
  op2_mb_r: 1
  op2_mb_c: 5
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 6
  output3_mb_c: 10
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 3
  op3_t: 28
  op3_mb_r: 1
  op3_mb_c: 5
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=3
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=3
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=33
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 1
  input_t: 1
  input_mb_r: 5
  input_mb_c: 9
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[4, 0x33d5d240], [5, 0x33e128e0], [2, 0x33ec7f80], [3, 0x33f7d620], [4, 0x34032cc0], [3, 0x340e8360]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 3
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 54]'
  input1_tms: '[hslice: 54]'
  input2_tms: '[hslice: 54]'
  input3_tms: '[hslice: 54]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3e47dbe0]]'
  output1_dram_buffers: '[[4, 0x3f080500]]'
  output2_dram_buffers: '[[4, 0x3f5dc740]]'
  output3_dram_buffers: '[[4, 0x3fa20e80]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 54
  output0_mb_r: 10
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 5
  op0_t: 54
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 54
  output1_mb_r: 10
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 54
  op1_mb_r: 10
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 54
  output2_mb_r: 10
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 54
  op2_mb_r: 5
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 54
  output3_mb_r: 10
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 5
  op3_t: 54
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=54
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=5
# effective_consumer_grid_size_c[0]=54
# effective_consumer_grid_size_r_reblock[0]=5
# effective_consumer_grid_size_c_reblock[0]=54
# reblock_tm_fork_r_factor_int[0]=4
# reblock_tm_fork_c_factor_int[0]=18
# tm_c_factor[1]=54
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=54
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=54
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=18
# tm_c_factor[2]=54
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=54
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=54
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=18
# tm_c_factor[3]=54
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=5
# effective_consumer_grid_size_c[3]=54
# effective_consumer_grid_size_r_reblock[3]=5
# effective_consumer_grid_size_c_reblock[3]=54
# reblock_tm_fork_r_factor_int[3]=4
# reblock_tm_fork_c_factor_int[3]=18
#Test id=34
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 1
  op2_loc_c: 6
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[4, 0x3c08fb40], [1, 0x3c13eb60], [3, 0x3c1edb80], [5, 0x3c29cba0], [5, 0x3c34bbc0], [4, 0x3c3fabe0], [1, 0x3c4a9c00], [5, 0x3c558c20], [3, 0x3c607c40], [4, 0x3c6b6c60], [3, 0x3c765c80], [0, 0x3c814ca0], [5, 0x3c8c3cc0], [3, 0x3c972ce0], [2, 0x3ca21d00], [0, 0x3cad0d20], [0, 0x3cb7fd40], [5, 0x3cc2ed60]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 1
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 6]'
  input1_tms: '[hslice: 6]'
  input2_tms: '[hslice: 6]'
  input3_tms: '[hslice: 6]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3cd7e5e0], [1, 0x3d198600], [3, 0x3d5b2620]]'
  output1_dram_buffers: '[[4, 0x3d9d3c40], [1, 0x3dbe0c60], [3, 0x3ddedc80], [5, 0x3dffaca0], [5, 0x3e207cc0], [4, 0x3e414ce0]]'
  output2_dram_buffers: '[[4, 0x3e684d00], [1, 0x3e891d20], [3, 0x3ea9ed40], [5, 0x3ecabd60], [5, 0x3eeb8d80], [4, 0x3f0c5da0]]'
  output3_dram_buffers: '[[4, 0x3f376220], [1, 0x3f99d240]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 3
  output0_t: 12
  output0_mb_r: 2
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 5
  op0_grid_size_c: 1
  op0_grid_size_r: 3
  op0_t: 12
  op0_mb_r: 2
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 5
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 12
  output1_mb_r: 1
  output1_mb_c: 5
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 12
  op1_mb_r: 1
  op1_mb_c: 5
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 6
  output2_t: 12
  output2_mb_r: 1
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 5
  op2_grid_size_c: 1
  op2_grid_size_r: 6
  op2_t: 12
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 1
  op2_ub_c: 5
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 12
  output3_mb_r: 3
  output3_mb_c: 5
  output3_ub_r: 1
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 12
  op3_mb_r: 3
  op3_mb_c: 5
  op3_ub_r: 1
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=6
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=3
# effective_consumer_grid_size_c[0]=6
# effective_consumer_grid_size_r_reblock[0]=3
# effective_consumer_grid_size_c_reblock[0]=6
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=2
# tm_c_factor[1]=6
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=6
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=6
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=2
# tm_c_factor[2]=6
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=6
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=6
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=6
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=35
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 3
  input_mb_r: 1
  input_mb_c: 13
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[5, 0x31a34e20], [4, 0x31c10340], [0, 0x31deb860], [2, 0x31fc6d80], [0, 0x321a22a0], [4, 0x3237d7c0], [5, 0x32558ce0], [1, 0x32734200], [0, 0x3290f720], [5, 0x32aeac40], [0, 0x32cc6160], [4, 0x32ea1680], [3, 0x3307cba0], [3, 0x332580c0], [0, 0x334335e0], [0, 0x3360eb00], [2, 0x337ea020], [0, 0x339c5540], [3, 0x33ba0a60], [5, 0x33d7bf80], [1, 0x33f574a0], [3, 0x341329c0], [1, 0x3430dee0], [4, 0x344e9400]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 3]'
  input1_tms: '[hslice: 3]'
  input2_tms: '[hslice: 3]'
  input3_tms: '[hslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x34d6a000]]'
  output1_dram_buffers: '[[5, 0x37a38c00]]'
  output2_dram_buffers: '[[5, 0x3a6d21a0]]'
  output3_dram_buffers: '[[5, 0x3d36e740]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 9
  output0_mb_r: 8
  output0_mb_c: 78
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 9
  op0_mb_r: 1
  op0_mb_c: 13
  op0_ub_r: 1
  op0_ub_c: 6
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 9
  output1_mb_r: 8
  output1_mb_c: 78
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 9
  op1_mb_r: 1
  op1_mb_c: 13
  op1_ub_r: 1
  op1_ub_c: 6
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 9
  output2_mb_r: 8
  output2_mb_c: 78
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 8
  op2_t: 9
  op2_mb_r: 1
  op2_mb_c: 13
  op2_ub_r: 1
  op2_ub_c: 6
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 9
  output3_mb_r: 8
  output3_mb_c: 78
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 9
  op3_mb_r: 1
  op3_mb_c: 13
  op3_ub_r: 1
  op3_ub_c: 6
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=3
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=3
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=3
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=3
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=36
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 3
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 4
  input_t: 2
  input_mb_r: 1
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 3
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x34659920], [1, 0x346c2940], [5, 0x3472b960], [3, 0x34794980], [3, 0x347fd9a0], [3, 0x348669c0], [1, 0x348cf9e0], [3, 0x34938a00], [4, 0x349a1a20], [3, 0x34a0aa40], [3, 0x34a73a60], [1, 0x34adca80], [5, 0x34b45aa0], [5, 0x34baeac0], [4, 0x34c17ae0], [2, 0x34c80b00], [4, 0x34ce9b20], [5, 0x34d52b40]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 9]'
  input1_tms: '[hslice: 9]'
  input2_tms: '[hslice: 9]'
  input3_tms: '[hslice: 9]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x34f25180], [1, 0x34fc29a0], [5, 0x350601c0], [3, 0x350fd9e0], [3, 0x3519b200], [3, 0x35238a20], [1, 0x352d6240], [3, 0x35373a60], [4, 0x35411280], [3, 0x354aeaa0], [3, 0x3554c2c0], [1, 0x355e9ae0]]'
  output1_dram_buffers: '[[0, 0x356c4100], [1, 0x3593a120], [5, 0x35bb0140]]'
  output2_dram_buffers: '[[0, 0x36484c60], [1, 0x36835c80]]'
  output3_dram_buffers: '[[0, 0x374fa520]]'
  output0_grid_size_c: 2
  output0_grid_size_r: 6
  output0_t: 18
  output0_mb_r: 1
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 6
  op0_t: 18
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 3
  output1_t: 18
  output1_mb_r: 1
  output1_mb_c: 2
  output1_ub_r: 2
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 18
  op1_mb_r: 1
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 18
  output2_mb_r: 3
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 4
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 18
  op2_mb_r: 3
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 4
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 18
  output3_mb_r: 6
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 4
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 18
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=9
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=6
# effective_consumer_grid_size_c[0]=18
# effective_consumer_grid_size_r_reblock[0]=6
# effective_consumer_grid_size_c_reblock[0]=18
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=6
# tm_c_factor[1]=9
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=9
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=9
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=3
# tm_c_factor[2]=9
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=9
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=9
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=3
# tm_c_factor[3]=9
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=9
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=9
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=3
#Test id=37
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 2
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 6
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[5, 0x3c691d40], [3, 0x3c6c6560], [3, 0x3c6fad80], [4, 0x3c72f5a0], [3, 0x3c763dc0], [1, 0x3c7985e0], [1, 0x3c7cce00], [3, 0x3c801620], [3, 0x3c835e40], [5, 0x3c86a660], [0, 0x3c89ee80], [1, 0x3c8d36a0], [3, 0x3c907ec0], [1, 0x3c93c6e0], [2, 0x3c970f00], [5, 0x3c9a5720]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 2]'
  input1_tms: '[hslice: 2]'
  input2_tms: '[hslice: 2]'
  input3_tms: '[hslice: 2]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[5, 0x3d09bde0], [3, 0x3d104e00], [3, 0x3d16de20], [4, 0x3d1d6e40], [3, 0x3d23fe60], [1, 0x3d2a8e80], [1, 0x3d311ea0], [3, 0x3d37aec0]]'
  output1_dram_buffers: '[[5, 0x3d4c3300], [3, 0x3d52c320], [3, 0x3d595340], [4, 0x3d5fe360], [3, 0x3d667380], [1, 0x3d6d03a0], [1, 0x3d7393c0], [3, 0x3d7a23e0]]'
  output2_dram_buffers: '[[5, 0x3e7c24a0], [3, 0x3e9664c0]]'
  output3_dram_buffers: '[[5, 0x3ed55300], [3, 0x3eef9320]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 8
  output0_t: 2
  output0_mb_r: 1
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 3
  op0_grid_size_c: 1
  op0_grid_size_r: 8
  op0_t: 2
  op0_mb_r: 1
  op0_mb_c: 4
  op0_ub_r: 1
  op0_ub_c: 3
  output1_grid_size_c: 1
  output1_grid_size_r: 8
  output1_t: 2
  output1_mb_r: 1
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 3
  op1_grid_size_c: 1
  op1_grid_size_r: 8
  op1_t: 2
  op1_mb_r: 1
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 3
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 2
  output2_mb_r: 2
  output2_mb_c: 12
  output2_ub_r: 2
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 2
  op2_mb_r: 2
  op2_mb_c: 12
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 2
  output3_mb_r: 1
  output3_mb_c: 12
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 2
  op3_mb_r: 1
  op3_mb_c: 12
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=2
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=8
# effective_consumer_grid_size_c[0]=2
# effective_consumer_grid_size_r_reblock[0]=8
# effective_consumer_grid_size_c_reblock[0]=2
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=2
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=8
# effective_consumer_grid_size_c[1]=2
# effective_consumer_grid_size_r_reblock[1]=8
# effective_consumer_grid_size_c_reblock[1]=2
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=2
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=2
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=2
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=2
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=2
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=2
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=38
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 2
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 6
  op2_loc_c: 5
  op2_loc_r: 5
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 2
  input_mb_r: 1
  input_mb_c: 13
  input_ub_r: 1
  input_ub_c: 8
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[3, 0x374ec920], [2, 0x37839940], [3, 0x37b86960], [5, 0x37ed3980], [2, 0x382209a0], [3, 0x3856d9c0], [5, 0x388ba9e0], [2, 0x38c07a00]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 26]'
  input1_tms: '[hslice: 26]'
  input2_tms: '[hslice: 26]'
  input3_tms: '[hslice: 26]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x3936bfe0]]'
  output1_dram_buffers: '[[3, 0x3b013c80]]'
  output2_dram_buffers: '[[3, 0x3cadb660]]'
  output3_dram_buffers: '[[3, 0x3e54f1a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 52
  output0_mb_r: 8
  output0_mb_c: 4
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 4
  op0_t: 52
  op0_mb_r: 1
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 2
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 52
  output1_mb_r: 8
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 52
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 4
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 52
  output2_mb_r: 8
  output2_mb_c: 4
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 1
  op2_t: 52
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 52
  output3_mb_r: 8
  output3_mb_c: 4
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 4
  op3_t: 52
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 4
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=26
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=4
# effective_consumer_grid_size_c[0]=26
# effective_consumer_grid_size_r_reblock[0]=4
# effective_consumer_grid_size_c_reblock[0]=26
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=26
# tm_c_factor[1]=26
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=52
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=52
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=52
# tm_c_factor[2]=26
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=52
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=52
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=52
# tm_c_factor[3]=26
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=26
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=26
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=26
#Test id=39
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 2
  op1_loc_c: 4
  op1_loc_r: 1
  op2_loc_c: 5
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 2
  input_mb_r: 4
  input_mb_c: 4
  input_ub_r: 1
  input_ub_c: 5
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x30796d60], [5, 0x30845d80], [0, 0x308f4da0], [2, 0x309a3dc0], [1, 0x30a52de0], [3, 0x30b01e00]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 0
  feeder_loc_r: 1
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 3]'
  input1_tms: '[hslice: 3]'
  input2_tms: '[hslice: 3]'
  input3_tms: '[hslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x35e3e440], [5, 0x3604b460]]'
  output1_dram_buffers: '[[4, 0x37bf3920], [5, 0x37e00940]]'
  output2_dram_buffers: '[[4, 0x380f0e60], [5, 0x38132880], [0, 0x381742a0], [2, 0x381b5cc0], [1, 0x381f76e0], [3, 0x38239100], [4, 0x3827ab20], [2, 0x382bc540], [2, 0x382fdf60], [0, 0x3833f980], [2, 0x383813a0], [4, 0x383c2dc0], [4, 0x384047e0], [2, 0x38446200], [0, 0x38487c20], [4, 0x384c9640]]'
  output3_dram_buffers: '[[4, 0x3940a5c0], [5, 0x396175e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 6
  output0_mb_r: 2
  output0_mb_c: 5
  output0_ub_r: 2
  output0_ub_c: 4
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 6
  op0_mb_r: 2
  op0_mb_c: 5
  op0_ub_r: 2
  op0_ub_c: 4
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 6
  output1_mb_r: 4
  output1_mb_c: 4
  output1_ub_r: 1
  output1_ub_c: 5
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 6
  op1_mb_r: 4
  op1_mb_c: 4
  op1_ub_r: 1
  op1_ub_c: 5
  output2_grid_size_c: 2
  output2_grid_size_r: 8
  output2_t: 6
  output2_mb_r: 1
  output2_mb_c: 10
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 8
  op2_t: 6
  op2_mb_r: 1
  op2_mb_c: 10
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 6
  output3_mb_r: 2
  output3_mb_c: 10
  output3_ub_r: 2
  output3_ub_c: 2
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 6
  op3_mb_r: 2
  op3_mb_c: 10
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 1
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=3
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=3
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=3
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=8
# effective_consumer_grid_size_c[2]=6
# effective_consumer_grid_size_r_reblock[2]=8
# effective_consumer_grid_size_c_reblock[2]=6
# reblock_tm_fork_r_factor_int[2]=4
# reblock_tm_fork_c_factor_int[2]=2
# tm_c_factor[3]=3
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=3
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=3
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=1
#Test id=40
- device: WORMHOLE_B0
  entries: 2
  op0_loc_c: 4
  op0_loc_r: 6
  op1_loc_c: 5
  op1_loc_r: 2
  op2_loc_c: 6
  op2_loc_r: 0
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 1
  input_mb_r: 4
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[4, 0x38b8a920], [5, 0x38b8ef40], [4, 0x38b93560], [0, 0x38b97b80], [3, 0x38b9c1a0], [0, 0x38ba07c0], [3, 0x38ba4de0], [0, 0x38ba9400], [2, 0x38bada20], [2, 0x38bb2040], [4, 0x38bb6660], [5, 0x38bbac80], [3, 0x38bbf2a0], [0, 0x38bc38c0], [5, 0x38bc7ee0], [1, 0x38bcc500], [1, 0x38bd0b20], [0, 0x38bd5140], [3, 0x38bd9760], [5, 0x38bddd80], [2, 0x38be23a0], [5, 0x38be69c0], [3, 0x38beafe0], [3, 0x38bef600]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x3cbe2680], [5, 0x3cc16ea0]]'
  output1_dram_buffers: '[[4, 0x3d4698e0], [5, 0x3d47b100], [4, 0x3d48c920], [0, 0x3d49e140], [3, 0x3d4af960], [0, 0x3d4c1180]]'
  output2_dram_buffers: '[[4, 0x3dda0ce0], [5, 0x3ddbb100], [4, 0x3ddd5520], [0, 0x3ddef940]]'
  output3_dram_buffers: '[[4, 0x3f541740], [5, 0x3f54e960], [4, 0x3f55bb80], [0, 0x3f568da0], [3, 0x3f575fc0], [0, 0x3f5831e0], [3, 0x3f590400], [0, 0x3f59d620]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 2
  output0_t: 4
  output0_mb_r: 3
  output0_mb_c: 1
  output0_ub_r: 8
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 4
  op0_mb_r: 3
  op0_mb_c: 1
  op0_ub_r: 8
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 6
  output1_t: 4
  output1_mb_r: 8
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 6
  op1_t: 4
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 4
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 4
  op2_mb_r: 12
  op2_mb_c: 1
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 8
  output3_t: 4
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 6
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 4
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 6
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 4
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=11
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=6
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=6
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=2
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=1
#Test id=41
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 4
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 2
  input_mb_c: 14
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[3, 0x30082c20], [3, 0x306bb440], [5, 0x30cf3c60], [3, 0x3132c480], [4, 0x31964ca0], [4, 0x31f9d4c0], [3, 0x325d5ce0], [0, 0x32c0e500]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 49]'
  input1_tms: '[hslice: 49]'
  input2_tms: '[hslice: 49]'
  input3_tms: '[hslice: 49]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[3, 0x33391b00]]'
  output1_dram_buffers: '[[3, 0x365b03a0]]'
  output2_dram_buffers: '[[3, 0x397f3780]]'
  output3_dram_buffers: '[[3, 0x3cd9f7e0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 49
  output0_mb_r: 16
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 49
  op0_mb_r: 4
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 49
  output1_mb_r: 16
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 49
  op1_mb_r: 16
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 49
  output2_mb_r: 16
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 2
  op2_grid_size_r: 2
  op2_t: 49
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 49
  output3_mb_r: 16
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 49
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 2
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=49
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=98
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=98
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=98
# tm_c_factor[1]=49
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=98
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=98
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=98
# tm_c_factor[2]=49
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=98
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=98
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=98
# tm_c_factor[3]=49
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=49
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=49
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=49
#Test id=42
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 4
  op0_loc_r: 0
  op1_loc_c: 5
  op1_loc_r: 5
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 8
  input_ub_r: 3
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x3595afe0], [2, 0x35a7f800], [4, 0x35ba4020], [5, 0x35cc8840], [5, 0x35ded060], [5, 0x35f11880], [4, 0x360360a0], [3, 0x3615a8c0], [0, 0x3627f0e0], [3, 0x363a3900], [2, 0x364c8120], [1, 0x365ec940], [1, 0x36711160], [3, 0x36835980], [1, 0x3695a1a0], [0, 0x36a7e9c0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 64]'
  input1_tms: '[hslice: 64]'
  input2_tms: '[hslice: 64]'
  input3_tms: '[hslice: 64]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x3785e580]]'
  output1_dram_buffers: '[[2, 0x3a8129c0]]'
  output2_dram_buffers: '[[2, 0x3cb75c00]]'
  output3_dram_buffers: '[[2, 0x3e61ae20]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 64
  output0_mb_r: 12
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 64
  op0_mb_r: 12
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 64
  output1_mb_r: 12
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 3
  op1_t: 64
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 64
  output2_mb_r: 12
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 64
  op2_mb_r: 2
  op2_mb_c: 1
  op2_ub_r: 3
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 64
  output3_mb_r: 12
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 6
  op3_t: 64
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=64
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=64
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=64
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=16
# tm_c_factor[1]=64
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=3
# effective_consumer_grid_size_c[1]=64
# effective_consumer_grid_size_r_reblock[1]=3
# effective_consumer_grid_size_c_reblock[1]=64
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=16
# tm_c_factor[2]=64
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=64
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=64
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=16
# tm_c_factor[3]=64
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=6
# effective_consumer_grid_size_c[3]=64
# effective_consumer_grid_size_r_reblock[3]=6
# effective_consumer_grid_size_c_reblock[3]=64
# reblock_tm_fork_r_factor_int[3]=3
# reblock_tm_fork_c_factor_int[3]=16
#Test id=43
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 2
  op1_loc_c: 5
  op1_loc_r: 7
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 2
  input_t: 1
  input_mb_r: 1
  input_mb_c: 11
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[4, 0x3679cde0], [2, 0x367f6400], [0, 0x3684fa20], [3, 0x368a9040], [2, 0x36902660], [3, 0x3695bc80], [1, 0x369b52a0], [5, 0x36a0e8c0], [1, 0x36a67ee0], [3, 0x36ac1500], [5, 0x36b1ab20], [2, 0x36b74140], [4, 0x36bcd760], [0, 0x36c26d80], [3, 0x36c803a0], [4, 0x36cd99c0], [4, 0x36d32fe0], [5, 0x36d8c600], [4, 0x36de5c20], [4, 0x36e3f240], [3, 0x36e98860]]'
  target_device: 0
  input_count: 8
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 7
  feeder_loc_c: 1
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 33]'
  input1_tms: '[hslice: 33]'
  input2_tms: '[hslice: 33]'
  input3_tms: '[hslice: 33]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[4, 0x36f0d000]]'
  output1_dram_buffers: '[[4, 0x37672a40]]'
  output2_dram_buffers: '[[4, 0x3d8a5c00]]'
  output3_dram_buffers: '[[4, 0x3e1e3ce0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 33
  output0_mb_r: 7
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 33
  op0_mb_r: 7
  op0_mb_c: 1
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 33
  output1_mb_r: 7
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 33
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 7
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 33
  output2_mb_r: 7
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 33
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 7
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 33
  output3_mb_r: 7
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 33
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 7
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=8
# tm_c_factor[0]=33
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=33
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=33
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=11
# tm_c_factor[1]=33
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=33
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=33
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=11
# tm_c_factor[2]=33
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=33
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=33
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=11
# tm_c_factor[3]=33
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=33
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=33
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=11
#Test id=44
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 1
  op0_loc_r: 5
  op1_loc_c: 2
  op1_loc_r: 7
  op2_loc_c: 5
  op2_loc_r: 6
  op3_loc_c: 6
  op3_loc_r: 4
  input_t: 5
  input_mb_r: 2
  input_mb_c: 12
  input_ub_r: 1
  input_ub_c: 4
  input_data_format: 'Float32'
  out_data_format: 'Float32'
  input_dram_buffers: '[[2, 0x30671280], [0, 0x3158f2a0], [4, 0x324ad2c0]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 3
  feeder_loc_c: 0
  feeder_loc_r: 3
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 8]'
  input1_tms: '[hslice: 8]'
  input2_tms: '[hslice: 8]'
  input3_tms: '[hslice: 8]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x33404940]]'
  output1_dram_buffers: '[[2, 0x3618c0a0]]'
  output2_dram_buffers: '[[2, 0x3a3017e0]]'
  output3_dram_buffers: '[[2, 0x3d11d580]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 40
  output0_mb_r: 6
  output0_mb_c: 6
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 2
  op0_t: 40
  op0_mb_r: 3
  op0_mb_c: 6
  op0_ub_r: 1
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 40
  output1_mb_r: 6
  output1_mb_c: 6
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 3
  op1_grid_size_r: 1
  op1_t: 40
  op1_mb_r: 3
  op1_mb_c: 2
  op1_ub_r: 2
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 40
  output2_mb_r: 6
  output2_mb_c: 6
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 40
  op2_mb_r: 3
  op2_mb_c: 3
  op2_ub_r: 2
  op2_ub_c: 2
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 40
  output3_mb_r: 6
  output3_mb_c: 6
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 3
  op3_t: 40
  op3_mb_r: 2
  op3_mb_c: 3
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=8
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=8
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=8
# reblock_tm_fork_r_factor_int[0]=2
# reblock_tm_fork_c_factor_int[0]=8
# tm_c_factor[1]=8
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=24
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=24
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=24
# tm_c_factor[2]=8
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=8
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=8
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=8
# tm_c_factor[3]=8
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=3
# effective_consumer_grid_size_c[3]=16
# effective_consumer_grid_size_r_reblock[3]=3
# effective_consumer_grid_size_c_reblock[3]=16
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=16
#Test id=45
- device: WORMHOLE_B0
  entries: 16
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 3
  op2_loc_c: 6
  op2_loc_r: 4
  op3_loc_c: 7
  op3_loc_r: 3
  input_t: 1
  input_mb_r: 1
  input_mb_c: 1
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[[2, 0x3672d6c0], [4, 0x3674c0e0], [5, 0x3676ab00], [1, 0x36789520], [3, 0x367a7f40], [4, 0x367c6960], [0, 0x367e5380], [5, 0x36803da0], [3, 0x368227c0], [4, 0x368411e0], [0, 0x3685fc00], [0, 0x3687e620], [2, 0x3689d040], [0, 0x368bba60], [3, 0x368da480], [3, 0x368f8ea0], [3, 0x369178c0], [1, 0x369362e0], [5, 0x36954d00], [4, 0x36973720], [3, 0x36992140], [3, 0x369b0b60], [1, 0x369cf580], [3, 0x369edfa0], [1, 0x36a0c9c0], [3, 0x36a2b3e0], [0, 0x36a49e00], [0, 0x36a68820], [0, 0x36a87240], [5, 0x36aa5c60], [2, 0x36ac4680], [2, 0x36ae30a0]]'
  target_device: 0
  input_count: 4
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 8
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: HiFi3
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 28]'
  input1_tms: '[hslice: 28]'
  input2_tms: '[hslice: 28]'
  input3_tms: '[hslice: 28]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x36ef9f40]]'
  output1_dram_buffers: '[[2, 0x380fa540]]'
  output2_dram_buffers: '[[2, 0x39e4d040], [4, 0x3a037060]]'
  output3_dram_buffers: '[[2, 0x3c11a100], [4, 0x3c304120]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 2
  output0_mb_c: 1
  output0_ub_r: 4
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 28
  op0_mb_r: 2
  op0_mb_c: 1
  op0_ub_r: 4
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 1
  output1_mb_c: 1
  output1_ub_r: 8
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 28
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 2
  output2_t: 28
  output2_mb_r: 1
  output2_mb_c: 1
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 28
  op2_mb_r: 1
  op2_mb_c: 1
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 2
  output3_t: 28
  output3_mb_r: 4
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 2
  op3_t: 28
  op3_mb_r: 4
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 32
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=10
# tm_c_factor[0]=28
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=28
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=28
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=7
# tm_c_factor[1]=28
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=28
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=28
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=7
# tm_c_factor[2]=28
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=28
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=28
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=7
# tm_c_factor[3]=28
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=28
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=28
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=7
#Test id=46
- device: WORMHOLE_B0
  entries: 4
  op0_loc_c: 3
  op0_loc_r: 6
  op1_loc_c: 4
  op1_loc_r: 5
  op2_loc_c: 5
  op2_loc_r: 1
  op3_loc_c: 6
  op3_loc_r: 2
  input_t: 2
  input_mb_r: 4
  input_mb_c: 2
  input_ub_r: 1
  input_ub_c: 1
  input_data_format: 'Bfp8_b'
  out_data_format: 'Bfp8_b'
  input_dram_buffers: '[[0, 0x348cbb60], [2, 0x348dd380], [5, 0x348eeba0], [2, 0x349003c0], [5, 0x34911be0], [3, 0x34923400], [1, 0x34934c20], [5, 0x34946440], [5, 0x34957c60], [1, 0x34969480], [5, 0x3497aca0], [2, 0x3498c4c0]]'
  target_device: 0
  input_count: 1
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 4
  feeder_loc_c: 0
  feeder_loc_r: 4
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: '[hslice: 3]'
  input1_tms: '[hslice: 3]'
  input2_tms: '[hslice: 3]'
  input3_tms: '[hslice: 3]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[0, 0x3620fa20]]'
  output1_dram_buffers: '[[0, 0x363e84a0], [2, 0x364514c0]]'
  output2_dram_buffers: '[[0, 0x3af37a40], [2, 0x3af6c260], [5, 0x3afa0a80], [2, 0x3afd52a0]]'
  output3_dram_buffers: '[[0, 0x3ea4d960], [2, 0x3ea67d80], [5, 0x3ea821a0], [2, 0x3ea9c5c0], [5, 0x3eab69e0], [3, 0x3ead0e00], [1, 0x3eaeb220], [5, 0x3eb05640]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 6
  output0_mb_r: 8
  output0_mb_c: 2
  output0_ub_r: 2
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 6
  op0_mb_r: 8
  op0_mb_c: 2
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 2
  output1_t: 6
  output1_mb_r: 8
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 2
  op1_grid_size_c: 1
  op1_grid_size_r: 2
  op1_t: 6
  op1_mb_r: 8
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 2
  output2_grid_size_c: 1
  output2_grid_size_r: 4
  output2_t: 6
  output2_mb_r: 1
  output2_mb_c: 2
  output2_ub_r: 4
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 4
  op2_t: 6
  op2_mb_r: 1
  op2_mb_c: 2
  op2_ub_r: 4
  op2_ub_c: 1
  output3_grid_size_c: 2
  output3_grid_size_r: 4
  output3_t: 6
  output3_mb_r: 1
  output3_mb_c: 1
  output3_ub_r: 4
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 4
  op3_t: 6
  op3_mb_r: 1
  op3_mb_c: 1
  op3_ub_r: 4
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 8
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.65
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=9
# tm_c_factor[0]=3
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=3
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=3
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=3
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=2
# effective_consumer_grid_size_c[1]=3
# effective_consumer_grid_size_r_reblock[1]=2
# effective_consumer_grid_size_c_reblock[1]=3
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=3
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=4
# effective_consumer_grid_size_c[2]=3
# effective_consumer_grid_size_r_reblock[2]=4
# effective_consumer_grid_size_c_reblock[2]=3
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=3
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=4
# effective_consumer_grid_size_c[3]=6
# effective_consumer_grid_size_r_reblock[3]=4
# effective_consumer_grid_size_c_reblock[3]=6
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=2
#Test id=47
- device: WORMHOLE_B0
  entries: 8
  op0_loc_c: 4
  op0_loc_r: 1
  op1_loc_c: 5
  op1_loc_r: 4
  op2_loc_c: 6
  op2_loc_r: 2
  op3_loc_c: 7
  op3_loc_r: 5
  input_t: 1
  input_mb_r: 2
  input_mb_c: 15
  input_ub_r: 1
  input_ub_c: 7
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x343b86e0], [3, 0x3470d900], [1, 0x34a62b20], [2, 0x34db7d40], [0, 0x3510cf60], [2, 0x35462180]]'
  target_device: 0
  input_count: 2
  unary_type: datacopy
  input_grid_size_c: 3
  input_grid_size_r: 2
  feeder_loc_c: 1
  feeder_loc_r: 5
  math_fidelity: HiFi3
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 45]'
  input1_tms: '[hslice: 45]'
  input2_tms: '[hslice: 45]'
  input3_tms: '[hslice: 45]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x3a4e3240]]'
  output1_dram_buffers: '[[1, 0x3c2a85a0]]'
  output2_dram_buffers: '[[1, 0x3d731f20]]'
  output3_dram_buffers: '[[1, 0x3ebb4240]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 45
  output0_mb_r: 4
  output0_mb_c: 7
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 45
  op0_mb_r: 2
  op0_mb_c: 7
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 45
  output1_mb_r: 4
  output1_mb_c: 7
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 4
  op1_t: 45
  op1_mb_r: 1
  op1_mb_c: 1
  op1_ub_r: 1
  op1_ub_c: 7
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 45
  output2_mb_r: 4
  output2_mb_c: 7
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 45
  op2_mb_r: 2
  op2_mb_c: 7
  op2_ub_r: 1
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 45
  output3_mb_r: 4
  output3_mb_c: 7
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 1
  op3_t: 45
  op3_mb_r: 4
  op3_mb_c: 7
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 16
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=12
# tm_c_factor[0]=45
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=45
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=45
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=15
# tm_c_factor[1]=45
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=4
# effective_consumer_grid_size_c[1]=45
# effective_consumer_grid_size_r_reblock[1]=4
# effective_consumer_grid_size_c_reblock[1]=45
# reblock_tm_fork_r_factor_int[1]=2
# reblock_tm_fork_c_factor_int[1]=15
# tm_c_factor[2]=45
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=45
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=45
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=15
# tm_c_factor[3]=45
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=1
# effective_consumer_grid_size_c[3]=45
# effective_consumer_grid_size_r_reblock[3]=1
# effective_consumer_grid_size_c_reblock[3]=45
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=15
#Test id=48
- device: WORMHOLE_B0
  entries: 12
  op0_loc_c: 4
  op0_loc_r: 4
  op1_loc_c: 5
  op1_loc_r: 0
  op2_loc_c: 6
  op2_loc_r: 6
  op3_loc_c: 7
  op3_loc_r: 0
  input_t: 7
  input_mb_r: 16
  input_mb_c: 1
  input_ub_r: 2
  input_ub_c: 1
  input_data_format: 'Float16_b'
  out_data_format: 'Float16_b'
  input_dram_buffers: '[[1, 0x35856d40], [4, 0x35dabd60], [4, 0x36300d80], [5, 0x36855da0]]'
  target_device: 0
  input_count: 6
  unary_type: datacopy
  input_grid_size_c: 4
  input_grid_size_r: 1
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 4]'
  input1_tms: '[hslice: 4]'
  input2_tms: '[hslice: 4]'
  input3_tms: '[hslice: 4]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[1, 0x389c47e0]]'
  output1_dram_buffers: '[[1, 0x3ac7ba60]]'
  output2_dram_buffers: '[[1, 0x3cfec7e0]]'
  output3_dram_buffers: '[[1, 0x3e6831a0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 28
  output0_mb_r: 32
  output0_mb_c: 1
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 1
  op0_grid_size_r: 1
  op0_t: 28
  op0_mb_r: 16
  op0_mb_c: 1
  op0_ub_r: 2
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 28
  output1_mb_r: 32
  output1_mb_c: 1
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 1
  op1_grid_size_r: 1
  op1_t: 28
  op1_mb_r: 4
  op1_mb_c: 1
  op1_ub_r: 8
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 28
  output2_mb_r: 32
  output2_mb_c: 1
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 1
  op2_t: 28
  op2_mb_r: 4
  op2_mb_c: 1
  op2_ub_r: 8
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 28
  output3_mb_r: 32
  output3_mb_c: 1
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 1
  op3_grid_size_r: 8
  op3_t: 28
  op3_mb_r: 2
  op3_mb_c: 1
  op3_ub_r: 2
  op3_ub_c: 1
  # Program vars
  loop_count: 1
  queue_wrap_size: 24
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=15
# tm_c_factor[0]=4
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=1
# effective_consumer_grid_size_c[0]=4
# effective_consumer_grid_size_r_reblock[0]=1
# effective_consumer_grid_size_c_reblock[0]=4
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=1
# tm_c_factor[1]=4
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=4
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=4
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=1
# tm_c_factor[2]=4
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=1
# effective_consumer_grid_size_c[2]=4
# effective_consumer_grid_size_r_reblock[2]=1
# effective_consumer_grid_size_c_reblock[2]=4
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=1
# tm_c_factor[3]=4
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=8
# effective_consumer_grid_size_c[3]=4
# effective_consumer_grid_size_r_reblock[3]=8
# effective_consumer_grid_size_c_reblock[3]=4
# reblock_tm_fork_r_factor_int[3]=8
# reblock_tm_fork_c_factor_int[3]=1
#Test id=49
- device: WORMHOLE_B0
  entries: 64
  op0_loc_c: 1
  op0_loc_r: 0
  op1_loc_c: 3
  op1_loc_r: 2
  op2_loc_c: 5
  op2_loc_r: 5
  op3_loc_c: 6
  op3_loc_r: 4
  input_t: 1
  input_mb_r: 2
  input_mb_c: 10
  input_ub_r: 1
  input_ub_c: 2
  input_data_format: 'Float16'
  out_data_format: 'Float16'
  input_dram_buffers: '[[2, 0x31d20ca0], [1, 0x32234cc0], [1, 0x32748ce0], [1, 0x32c5cd00], [0, 0x33170d20], [5, 0x33684d40]]'
  target_device: 0
  input_count: 16
  unary_type: datacopy
  input_grid_size_c: 1
  input_grid_size_r: 6
  feeder_loc_c: 0
  feeder_loc_r: 2
  math_fidelity: HiFi2
  untilize_output0:  'true'
  untilize_output1:  'true'
  untilize_output2:  'true'
  untilize_output3:  'true'
  input0_tms: '[hslice: 10]'
  input1_tms: '[hslice: 10]'
  input2_tms: '[hslice: 10]'
  input3_tms: '[hslice: 10]'
  ublock_order: r
  buf_size_mb: 2
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[[2, 0x360f6a40]]'
  output1_dram_buffers: '[[2, 0x3a115c00]]'
  output2_dram_buffers: '[[2, 0x3c09ffe0]]'
  output3_dram_buffers: '[[2, 0x3df2b4c0]]'
  output0_grid_size_c: 1
  output0_grid_size_r: 1
  output0_t: 10
  output0_mb_r: 12
  output0_mb_c: 2
  output0_ub_r: 1
  output0_ub_c: 1
  op0_grid_size_c: 2
  op0_grid_size_r: 2
  op0_t: 10
  op0_mb_r: 1
  op0_mb_c: 1
  op0_ub_r: 6
  op0_ub_c: 1
  output1_grid_size_c: 1
  output1_grid_size_r: 1
  output1_t: 10
  output1_mb_r: 12
  output1_mb_c: 2
  output1_ub_r: 1
  output1_ub_c: 1
  op1_grid_size_c: 2
  op1_grid_size_r: 1
  op1_t: 10
  op1_mb_r: 2
  op1_mb_c: 1
  op1_ub_r: 6
  op1_ub_c: 1
  output2_grid_size_c: 1
  output2_grid_size_r: 1
  output2_t: 10
  output2_mb_r: 12
  output2_mb_c: 2
  output2_ub_r: 1
  output2_ub_c: 1
  op2_grid_size_c: 1
  op2_grid_size_r: 2
  op2_t: 10
  op2_mb_r: 3
  op2_mb_c: 2
  op2_ub_r: 2
  op2_ub_c: 1
  output3_grid_size_c: 1
  output3_grid_size_r: 1
  output3_t: 10
  output3_mb_r: 12
  output3_mb_c: 2
  output3_ub_r: 1
  output3_ub_c: 1
  op3_grid_size_c: 2
  op3_grid_size_r: 2
  op3_t: 10
  op3_mb_r: 6
  op3_mb_c: 1
  op3_ub_r: 1
  op3_ub_c: 1
  # Program vars
  loop_count: 2
  queue_wrap_size: 128
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.15
  comparison_config_check_pct: 0.90
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=16
# tm_c_factor[0]=10
# tm_r_factor[0]=1
# effective_consumer_grid_size_r[0]=2
# effective_consumer_grid_size_c[0]=20
# effective_consumer_grid_size_r_reblock[0]=2
# effective_consumer_grid_size_c_reblock[0]=20
# reblock_tm_fork_r_factor_int[0]=1
# reblock_tm_fork_c_factor_int[0]=20
# tm_c_factor[1]=10
# tm_r_factor[1]=1
# effective_consumer_grid_size_r[1]=1
# effective_consumer_grid_size_c[1]=20
# effective_consumer_grid_size_r_reblock[1]=1
# effective_consumer_grid_size_c_reblock[1]=20
# reblock_tm_fork_r_factor_int[1]=1
# reblock_tm_fork_c_factor_int[1]=20
# tm_c_factor[2]=10
# tm_r_factor[2]=1
# effective_consumer_grid_size_r[2]=2
# effective_consumer_grid_size_c[2]=10
# effective_consumer_grid_size_r_reblock[2]=2
# effective_consumer_grid_size_c_reblock[2]=10
# reblock_tm_fork_r_factor_int[2]=1
# reblock_tm_fork_c_factor_int[2]=10
# tm_c_factor[3]=10
# tm_r_factor[3]=1
# effective_consumer_grid_size_r[3]=2
# effective_consumer_grid_size_c[3]=20
# effective_consumer_grid_size_r_reblock[3]=2
# effective_consumer_grid_size_c_reblock[3]=20
# reblock_tm_fork_r_factor_int[3]=1
# reblock_tm_fork_c_factor_int[3]=20
