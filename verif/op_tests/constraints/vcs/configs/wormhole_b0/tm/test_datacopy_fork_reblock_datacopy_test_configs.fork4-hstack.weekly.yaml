#ntb_random_seed=0
#Test id=0
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=1
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=2
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=3
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=4
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=5
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=6
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=7
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=8
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=9
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=10
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=11
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=12
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=13
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=14
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=15
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=16
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=17
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=18
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
#Test id=19
- device: WORMHOLE_B0
  entries: x
  op0_loc_c: 0
  op0_loc_r: 0
  op1_loc_c: 0
  op1_loc_r: 0
  op2_loc_c: 0
  op2_loc_r: 0
  op3_loc_c: 0
  op3_loc_r: 0
  input_t: 0
  input_mb_r: 0
  input_mb_c: 0
  input_ub_r: 0
  input_ub_c: 0
  input_data_format: 'Bfp8'
  out_data_format: 'Bfp8'
  input_dram_buffers: '[]'
  target_device: 0
  input_count: 0
  unary_type: datacopy
  input_grid_size_c: 0
  input_grid_size_r: 0
  feeder_loc_c: 0
  feeder_loc_r: 0
  math_fidelity: LoFi
  untilize_output0: 'false'
  untilize_output1: 'false'
  untilize_output2: 'false'
  untilize_output3: 'false'
  input0_tms: 
  input1_tms: 
  input2_tms: 
  input3_tms: 
  ublock_order: r
  buf_size_mb: x
  # Scale output queue grid and mblock size if output is untilized
  # Net2pipe requires grid size 1x1 if untilized output is written to the queue
  output0_dram_buffers: '[]'
  output1_dram_buffers: '[]'
  output2_dram_buffers: '[]'
  output3_dram_buffers: '[]'
  output0_grid_size_c: 0
  output0_grid_size_r: 0
  output0_t: 0
  output0_mb_r: 0
  output0_mb_c: 0
  output0_ub_r: 0
  output0_ub_c: 0
  op0_grid_size_c: 0
  op0_grid_size_r: 0
  op0_t: 0
  op0_mb_r: 0
  op0_mb_c: 0
  op0_ub_r: 0
  op0_ub_c: 0
  output1_grid_size_c: 0
  output1_grid_size_r: 0
  output1_t: 0
  output1_mb_r: 0
  output1_mb_c: 0
  output1_ub_r: 0
  output1_ub_c: 0
  op1_grid_size_c: 0
  op1_grid_size_r: 0
  op1_t: 0
  op1_mb_r: 0
  op1_mb_c: 0
  op1_ub_r: 0
  op1_ub_c: 0
  output2_grid_size_c: 0
  output2_grid_size_r: 0
  output2_t: 0
  output2_mb_r: 0
  output2_mb_c: 0
  output2_ub_r: 0
  output2_ub_c: 0
  op2_grid_size_c: 0
  op2_grid_size_r: 0
  op2_t: 0
  op2_mb_r: 0
  op2_mb_c: 0
  op2_ub_r: 0
  op2_ub_c: 0
  output3_grid_size_c: 0
  output3_grid_size_r: 0
  output3_t: 0
  output3_mb_r: 0
  output3_mb_c: 0
  output3_ub_r: 0
  output3_ub_c: 0
  op3_grid_size_c: 0
  op3_grid_size_r: 0
  op3_t: 0
  op3_mb_r: 0
  op3_mb_c: 0
  op3_ub_r: 0
  op3_ub_c: 0
  # Program vars
  loop_count: x
  queue_wrap_size: x
  # Test and stimulus config
  comparison_config_type: 'AllCloseHw'
  comparison_config_atol: 0.01
  comparison_config_rtol: 0.30
  comparison_config_check_pct: 0.70
  comparison_config_check_pcc: 0.99
  comparison_config_verbosity: 'Concise'
  stimulus_config_type: 'Uniform'
  stimulus_config_uniform_lower_bound: '-1.0'
  stimulus_config_uniform_upper_bound: '1.0'
#===== Used Resources ====
# max_fork_streams_used_per_core=x
# tm_c_factor[0]=x
# tm_r_factor[0]=x
# effective_consumer_grid_size_r[0]=x
# effective_consumer_grid_size_c[0]=x
# effective_consumer_grid_size_r_reblock[0]=x
# effective_consumer_grid_size_c_reblock[0]=x
# reblock_tm_fork_r_factor_int[0]=x
# reblock_tm_fork_c_factor_int[0]=x
# tm_c_factor[1]=x
# tm_r_factor[1]=x
# effective_consumer_grid_size_r[1]=x
# effective_consumer_grid_size_c[1]=x
# effective_consumer_grid_size_r_reblock[1]=x
# effective_consumer_grid_size_c_reblock[1]=x
# reblock_tm_fork_r_factor_int[1]=x
# reblock_tm_fork_c_factor_int[1]=x
# tm_c_factor[2]=x
# tm_r_factor[2]=x
# effective_consumer_grid_size_r[2]=x
# effective_consumer_grid_size_c[2]=x
# effective_consumer_grid_size_r_reblock[2]=x
# effective_consumer_grid_size_c_reblock[2]=x
# reblock_tm_fork_r_factor_int[2]=x
# reblock_tm_fork_c_factor_int[2]=x
# tm_c_factor[3]=x
# tm_r_factor[3]=x
# effective_consumer_grid_size_r[3]=x
# effective_consumer_grid_size_c[3]=x
# effective_consumer_grid_size_r_reblock[3]=x
# effective_consumer_grid_size_c_reblock[3]=x
# reblock_tm_fork_r_factor_int[3]=x
# reblock_tm_fork_c_factor_int[3]=x
