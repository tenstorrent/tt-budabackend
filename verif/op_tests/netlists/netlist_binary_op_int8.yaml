devices:
  arch: [wormhole_b0]

queues:
  input0:  {type: queue, input: HOST, entries: 12, grid_size: [1, 1], t: 4, mblock: [1, 3], ublock: [4, 1], df: Int8, target_device: 0, loc: dram, dram: [[2, 0x1d5c0f60]]}
  input1:  {type: queue, input: HOST, entries: 12, grid_size: [1, 1], t: 4, mblock: [1, 3], ublock: [4, 1], df: Int8, target_device: 0, loc: dram, dram: [[2, 0x23d16a60]]}
  output:  {type: queue, input: op0 , entries: 12, grid_size: [1, 1], t: 4, mblock: [1, 3], ublock: [4, 1], df: Int32, target_device: 0, loc: dram, dram: [[0, 0x25247780]]}

graphs:
  test_op:
    target_device: 0
    input_count:  3
    op0: 
      type: multiply
      grid_loc: [0, 0]
      grid_size: [1, 1]
      inputs: [input0, input1]
      in_df: [Int8, Int8]
      acc_df: Int32
      out_df: Int32
      intermed_df: Int32
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi4
      untilize_output: false 
      t: 4
      mblock: [1,  3]
      ublock: [4, 1]
      input_0_tms:

programs:
  - program0:
      - var : [$c_loop_count, $c_input_count]
      - staticvar : {$lptr: 0, $gptr: 0}
      - varinst: [$c_loop_count, set, 2]  # load loop count
      - varinst: [$c_input_count, set, 3]  # load input count
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, incwrap, $c_input_count, 24]
      - varinst: [$gptr, incwrap, $c_input_count, 24]
      - endloop 

test-config:
  test-args:
    program_loop_count: 2
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.01
    check_pct: 0.99
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -127
    uniform_upper_bound: 127