devices:
  arch: wormhole_b0

queues:
  input0:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Int32, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  output0: {type: queue, input: op0 , entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Int32, target_device: 0, loc: dram, dram: [[0, 0x3e000000]]}

graphs:
  test_op:
    target_device: 0
    input_count:  1
    op0:
      type: nop
      grid_loc: [0, 0]
      grid_size: [1, 1]
      inputs: [input0]
      in_df: [Int32]
      acc_df: Int32
      out_df: Int32
      intermed_df: Int32
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi4
      attributes: {relu_en: true, relu_threshold: 0.0, relu_mode: min}
      t: 1
      mblock: [2, 2]
      ublock: [2, 2]

programs:
  - program0:
      - var : [$c_loop_count, $c_input_count, $c_zero]
      - staticvar : {$lptr: 0, $gptr: 0}
      - varinst: [$c_loop_count, set, 1]
      - varinst : [$c_input_count, set, 1]
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}
         }
         }
      - varinst: [$lptr, incwrap, $c_input_count, 2]
      - varinst: [$gptr, incwrap, $c_input_count, 2]
      - endloop

test-config:
  test-args:
    program_loop_count: 1
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.01
    check_pct: 0.99
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -127.0
    uniform_upper_bound: 127.0
