devices:
  arch: [grayskull, wormhole, wormhole_b0]

queues:

  # input
  input_0_reduce:                             {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 4, mblock: [1, 2], ublock: [1, 1], ublock_order: r, df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}

  # output
  ModuleBuilder.simple_reduce.output_reduce:  {input: reduce.lc1_output_nop_0, type: queue, entries: 1, grid_size: [1, 1], t: 2, mblock: [1, 1], ublock: [1, 2], ublock_order: r, df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x31000000]]}

  # constant
  lc.input_tensor.reduce.0:                   {input: HOST, type: queue, entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [1, 1], ublock_order: r, df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x8200100]]}

graphs:
  fwd_0:
    target_device: 0
    input_count: 1
    reduce.lc1: {type: matmul, grid_loc: [0, 0], grid_size: [1, 1], inputs: [input_0_reduce, lc.input_tensor.reduce.0],
         t: 2, mblock: [1, 1], ublock: [1, 2], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b, Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3,
         input_1_tms: [broadcast: {z: 4}], attributes: {accumulate: true, m_k: 1, u_kt: 2, z: 2}}
    reduce.lc1_output_nop_0: {type: nop, grid_loc: [0, 1], grid_size: [1, 1], inputs: [reduce.lc1], untilize_output: true,
         t: 2, mblock: [1, 1], ublock: [1, 2], buf_size_mb: 2, ublock_order: r, in_df: [Float16_b], out_df: Float16_b, intermed_df: Float16_b, acc_df: Float16_b, math_fidelity: HiFi3}


programs:
  - run_fwd:
    - var: {$c_microbatch_size: 1, $c_one: 1, $c_zero: 0, $p_loop_count: 1}
    - staticvar: {$gptr_q0: 0, $lptr_q0: 0}
    - loop: $p_loop_count
    -   execute: {graph_name: fwd_0, queue_settings: {
               input_0_reduce: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q0, rd_ptr_global: $gptr_q0},
               lc.input_tensor.reduce.0: {prologue: true, epilogue: false, zero: False, rd_ptr_local: $c_zero, rd_ptr_global: $c_zero}} }
    -   varinst: [$gptr_q0, incwrap, $c_microbatch_size, 2]
    -   varinst: [$lptr_q0, incwrap, $c_microbatch_size, 2]
    - endloop

test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.0
    check_pcc: 0.9
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -2.0
    uniform_upper_bound: 2.0

