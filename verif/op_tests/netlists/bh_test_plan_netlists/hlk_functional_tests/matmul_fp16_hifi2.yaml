#SKIP

devices:
  arch: [wormhole_b0, blackhole]

queues:
  input0:  {type: ram, input: HOST, entries: 2, grid_size: [1, 1], t: 2, mblock: [2, 2], ublock: [2, 4], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  input1:  {type: ram, input: HOST, entries: 2, grid_size: [1, 1], t: 2, mblock: [2, 2], ublock: [4, 4], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x3a000000]]}
  output0: {type: queue, input: op0 , entries: 2, grid_size: [1, 1], t: 2, mblock: [2, 2], ublock: [2, 4], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x45000000]]}

graphs:
  test_op:
    target_device: 0
    input_count: 2
    op0:
      type: matmul
      grid_loc: [0, 0]   # [r,c]
      grid_size: [1, 1] # [r,c]
      inputs: [input0, input1]
      in_df: [Float16, Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi2
      attributes: {m_k: 2, u_kt: 4}
      untilize_output: false
      t: 2
      mblock: [2, 2]
      ublock: [2, 4]

programs:
  - program0:
      - var : [$c_loop_count, $c_input_count, $c_zero]
      - staticvar : {$lptr: 0, $gptr: 0}
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - varinst : [$c_input_count, set, 2]
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero},
         input1: {prologue: false, epilogue: false, zero: False, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero}}}
      - varinst: [$lptr, incwrap, $c_input_count, 4] # add two variables
      - varinst: [$gptr, incwrap, $c_input_count, 4] # add two variables
      - endloop

test-config:
  test-args:
    program_loop_count: 1
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.8
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -2.0
    uniform_upper_bound: 2.0


