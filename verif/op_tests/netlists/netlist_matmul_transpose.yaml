devices:
  arch: [grayskull, wormhole_b0]

queues:
  input0:  {type: queue, input: HOST, entries: 4, grid_size: [1, 1], t: 1, mblock: [1, 3], ublock: [2, 2], df: Bfp8_b, target_device: 0, loc: dram, dram: [[5, 0x5000000]]}
  input1:  {type: queue, input: HOST, entries: 4, grid_size: [1, 1], t: 1, mblock: [3, 3], ublock: [2, 2], df: Bfp8_b, target_device: 0, loc: dram, dram: [[5, 0x51d4a00]]}
  output: {type: queue, input: op0 , entries: 4, grid_size: [1, 1], t: 1, mblock: [1, 3], ublock: [2, 2], df: Bfp8_b, target_device: 0, loc: dram, dram: [[5, 0x529ee20]]}

graphs:
  test_op:
    target_device: 0
    input_count:  2
    op0: 
      type: matmul
      grid_loc: [0, 0]   # [r,c]
      grid_size: [1, 1] # [r,c]
      inputs: [input0, input1] 
      in_df: [Bfp8_b, Bfp8_b] 
      acc_df: Bfp8_b
      out_df: Bfp8_b  
      intermed_df: Bfp8_b
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi2
      attributes: {m_k: 3, u_kt: 2}
      untilize_output: false 
      t: 1
      mblock: [1,  3]
      ublock: [2, 2]
      input_0_tms:
      input_1_tms: ['transpose']
      
programs:
  - program0:
      - var : [$c_loop_count, $c_input_count]
      - staticvar : {$lptr: 0, $gptr: 0}
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - varinst : [$c_input_count, set, 2]
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, incwrap, $c_input_count, 8] # add two variables
      - varinst: [$gptr, incwrap, $c_input_count, 8] # add two variables
      - endloop 

test-config:
  test-args:
    program_loop_count: 1
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.8
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -2.0
    uniform_upper_bound: 2.0
    # type: Constant
    # constant_value: 1

