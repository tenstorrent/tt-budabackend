devices:
  arch: [wormhole, wormhole_b0, blackhole]
queues:
  input: {type: queue, input: HOST, entries: 20, grid_size: [7, 7], t: 1, mblock: [1, 3], ublock: [2, 2], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x10000000], [0, 0x1007f840], [0, 0x100ff080],
      [0, 0x1017e8c0], [0, 0x101fe100], [0, 0x1027d940], [0, 0x102fd180], [0, 0x1037c9c0], [0, 0x103fc200], [0, 0x1047ba40], [0, 0x104fb280], [0, 0x1057aac0], [0, 0x105fa300], [0, 0x10679b40], [0, 0x106f9380],
      [0, 0x10778bc0], [0, 0x107f8400], [0, 0x10877c40], [0, 0x108f7480], [0, 0x10976cc0], [0, 0x109f6500], [0, 0x10a75d40], [0, 0x10af5580], [0, 0x10b74dc0], [0, 0x10bf4600], [0, 0x10c73e40], [0, 0x10cf3680],
      [0, 0x10d72ec0], [0, 0x10df2700], [0, 0x10e71f40], [0, 0x10ef1780], [0, 0x10f70fc0], [0, 0x10ff0800], [0, 0x11070040], [0, 0x110ef880], [0, 0x1116f0c0], [0, 0x111ee900], [0, 0x1126e140], [0, 0x112ed980],
      [0, 0x1136d1c0], [0, 0x113eca00], [0, 0x1146c240], [0, 0x114eba80], [0, 0x1156b2c0], [0, 0x115eab00], [0, 0x1166a340], [0, 0x116e9b80], [0, 0x117693c0], [0, 0x117e8c00]]}
  output: {type: ram, input: op0, entries: 1, grid_size: [7, 7], t: 1, mblock: [1, 3], ublock: [2, 2], df: Float32, target_device: 0, loc: dram, dram: [[0, 0x11868440], [0, 0x11874a80], [0, 0x118810c0],
      [0, 0x1188d700], [0, 0x11899d40], [0, 0x118a6380], [0, 0x118b29c0], [0, 0x118bf000], [0, 0x118cb640], [0, 0x118d7c80], [0, 0x118e42c0], [0, 0x118f0900], [0, 0x118fcf40], [0, 0x11909580], [0, 0x11915bc0],
      [0, 0x11922200], [0, 0x1192e840], [0, 0x1193ae80], [0, 0x119474c0], [0, 0x11953b00], [0, 0x11960140], [0, 0x1196c780], [0, 0x11978dc0], [0, 0x11985400], [0, 0x11991a40], [0, 0x1199e080], [0, 0x119aa6c0],
      [0, 0x119b6d00], [0, 0x119c3340], [0, 0x119cf980], [0, 0x119dbfc0], [0, 0x119e8600], [0, 0x119f4c40], [0, 0x11a01280], [0, 0x11a0d8c0], [0, 0x11a19f00], [0, 0x11a26540], [0, 0x11a32b80], [0, 0x11a3f1c0],
      [0, 0x11a4b800], [0, 0x11a57e40], [0, 0x11a64480], [0, 0x11a70ac0], [0, 0x11a7d100], [0, 0x11a89740], [0, 0x11a95d80], [0, 0x11aa23c0], [0, 0x11aaea00], [0, 0x11abb040]]}

graphs:
  test_op:
    target_device: 0
    input_count: 5
    op0:
      type: datacopy
      grid_loc: [0, 1]   # [r,c]
      grid_size: [7, 7] # [r,c]
      inputs: [input]
      in_df: [Float16_b]
      acc_df: Float32
      out_df: Float32
      intermed_df: Float32
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: LoFi
      untilize_output: false
      gradient_op: true
      t: 1
      mblock: [1, 3]
      ublock: [2, 2]
      input_0_tms:
programs:
- program0:
  - var: [$c_loop_count, $c_input_count, $ramrdptr, $ramwrptr]
  - staticvar: {$lptr: 0, $gptr: 0}
        #      - varinst: [$c_loop_count, set, 2]  # load loop count
  - varinst: [$c_loop_count, set, 2]        # load loop count
  - varinst: [$c_input_count, set, 5]      # load input count
  - loop: $c_loop_count
  - execute: {graph_name: test_op, queue_settings: {input: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}, output: {prologue: true, epilogue: true, zero: true,
          rd_ptr_global: $ramrdptr, wr_ptr_global: $ramwrptr}}}
  - varinst: [$lptr, incwrap, $c_input_count, 40]
  - varinst: [$gptr, incwrap, $c_input_count, 40]
  - endloop

test-config:
  test-args:
    program_loop_count: 2
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.9
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -1.0
    uniform_upper_bound: 1.0

