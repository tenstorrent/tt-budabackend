devices:
  arch: [wormhole_b0]

queues:
  input0:  {type: queue, input: HOST, entries: 2, grid_size: [1, 1], t: 3, mblock: [13, 2], ublock: [1, 4], df: Int8, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  input1:  {type: queue, input: HOST, entries: 2, grid_size: [1, 1], t: 3, mblock: [13, 2], ublock: [1, 4], df: Int8, target_device: 0, loc: dram, dram: [[1, 0x31000000]]}
  input2:  {type: queue, input: HOST, entries: 2, grid_size: [1, 1], t: 3, mblock: [13, 2], ublock: [1, 4], df: Int32, target_device: 0, loc: dram, dram: [[2, 0x32000000]]}
  output0: {type: queue, input: op0 , entries: 2, grid_size: [1, 1], t: 3, mblock: [13, 2], ublock: [1, 4], df: Int32, target_device: 0, loc: dram, dram: [[4, 0x3e000000]]}

graphs:
  test_op:
    target_device: 0
    input_count:  2
    op0: 
      type: fused_op
      grid_loc: [0, 0]
      grid_size: [1, 1]
      inputs: [input0, input1, input2]
      in_df: [Int8, Int8, Int32]
      acc_df: Int32
      out_df: Int32
      intermed_df: Int32
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi4
      untilize_output: false 
      gradient_op: false
      attributes: {fused_op_id: 0}
      t: 3
      mblock: [13, 2]
      ublock: [1, 4]

programs:
  - program0:
      - staticvar: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - var: [$ramrdptr, $ramwrptr]
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - varinst: [$c_input_count, set, 2]  # load loop count
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input2: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}
         }}
      -   varinst: [$lptr, incwrap, $c_input_count, 4]
      -   varinst: [$gptr, incwrap, $c_input_count, 4]
      - endloop 

fused_ops:
  0:
    inputs: 3
    intermediates: 1
    schedules: 
      -
        - add: { type: add,     inputs: [input0, input1],                      mblock: [13, 2], ublock: [1, 4], output: intermed0}
        - max: { type: maximum, inputs: [intermed0, input2], pop: [intermed0], mblock: [13, 2], ublock: [1, 4], output: output}

test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.01
    check_pct: 0.99
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -1000
    uniform_upper_bound: 1000

