devices:
  arch: [grayskull, wormhole_b0]

queues:
  input0:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [8, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  input1:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [8, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[1, 0x30000000]]}
  input2:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [8, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[2, 0x32000000]]}
  input3:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[3, 0x33000000]]}
  output0:  {type: queue, input: op0 , entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [8, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[2, 0x3e000000]]}

graphs:
  test_op:
    target_device: 0
    input_count:  1
    op0: 
      type: fused_op
      grid_loc: [0, 0]   # [r,c]
      grid_size: [1, 1] # [r,c]
      inputs: [input0, input1, input2, input3]
      in_df: [Float16_b, Float16_b, Float16_b, Float16_b] 
      acc_df: Float16_b
      out_df: Float16_b  
      intermed_df: Float16_b
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi3
      untilize_output: false 
      gradient_op: false
      attributes: {fused_op_id: 0, kernel_broadcast: {input_3: 1}}
      t: 1
      mblock: [1, 1]
      ublock: [8, 1]
      input_3_tms: [broadcast: {r: 8}]
      
programs:
  - program0:
      - staticvar: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - var: [$ramrdptr, $ramwrptr]
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - varinst: [$c_input_count, set, 1]  # load loop count
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input2: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input3: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      -   varinst: [$lptr, incwrap, $c_input_count, 2]
      -   varinst: [$gptr, incwrap, $c_input_count, 2]
      - endloop 

fused_ops:
  0: 
    inputs: 4
    intermediates: 0
    schedules: 
      -
        - intermediates.conv2d_0.dc.add.6.0: { type: add, inputs: [input0, input1], mblock: [1, 1], ublock: [8, 1], output: dest}
        - intermediates.conv2d_0.dc.add.7.0: { type: add, inputs: [dest, input2], mblock: [1, 1], ublock: [8, 1], output: dest}
        - add_12.0: { type: add, inputs: [dest, input3], mblock: [1, 1], ublock: [8, 1], output: dest}
        - leaky_relu_13.0: { type: lrelu, inputs: [dest], attributes: {slope: 1.000000e-01}, mblock: [1, 1], ublock: [8, 1], output: output}


test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.9
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    #type: Constant
    #constant_value: 2.0
    #type: DebugTileId
    #debug_tile_id_base: 1.0
    #debug_tile_id_step: 1.0
    uniform_lower_bound: -2.0
    uniform_upper_bound: 2.0