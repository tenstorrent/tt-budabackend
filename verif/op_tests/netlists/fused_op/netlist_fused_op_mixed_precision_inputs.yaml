devices:
  arch: [grayskull, wormhole, wormhole_b0]

queues:
  input0:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 3], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x10000000]]}
  input1:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [3, 1], ublock: [2, 2], df: Bfp8, target_device: 0, loc: dram, dram: [[0, 0x20000000]]}
  input2:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float32, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  input3:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Bfp4, target_device: 0, loc: dram, dram: [[0, 0x32000000]]}
  output0:  {type: queue, input: op0 , entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x34000000]]}

graphs:
  test_op:
    target_device: 0
    input_count: 1
    op0:
      type: fused_op
      grid_loc: [0, 0]   # [r,c]
      grid_size: [1, 1] # [r,c]
      inputs: [input0, input1, input2, input3]
      in_df: [Float16, Bfp8, Float32, Bfp4]
      acc_df: Float32
      out_df: Float16
      intermed_df: Bfp8
      ublock_order: r
      buf_size_mb: 1
      math_fidelity: HiFi3
      untilize_output: false
      gradient_op: false
      attributes: {fused_op_id: 0}
      t: 1
      mblock: [1, 1]
      ublock: [2, 2]

programs:
  - program0:
      - staticvar: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - var: [$ramrdptr, $ramwrptr]
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - varinst: [$c_input_count, set, 1]  # load loop count
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input2: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input3: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}
         }}
      -   varinst: [$lptr, incwrap, $c_input_count, 2]
      -   varinst: [$gptr, incwrap, $c_input_count, 2]
      - endloop

fused_ops:
  0:
    inputs: 4
    intermediates: 1
    schedules:
      -
        - add0: {type: matmul, inputs: [input0, input1],  mblock: [1, 1], ublock: [2, 2], attributes: {m_k: 3, u_kt: 2}, output: intermed0}
      -
        - add1: {type: add, inputs: [input2, input3], mblock: [1, 1], ublock: [2, 2], attributes: {m_k: 4, u_kt: 2}, output: dest}
        - add2: {type: add, inputs: [dest, intermed0], mblock: [1, 1], ublock: [2, 2], pop: [intermed0], output: output}

test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.9
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -1.0
    uniform_upper_bound: 1.0
