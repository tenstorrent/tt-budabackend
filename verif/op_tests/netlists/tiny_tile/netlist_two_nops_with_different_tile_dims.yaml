devices:
  arch: wormhole_b0

queues:
  input:  {type: queue, input: HOST, entries: 4, grid_size: [1, 1], t: 2, mblock: [2, 2], ublock: [2, 2], tile_dim: [2, 32], df: Bfp8, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  output: {type: queue, input: op1 , entries: 4, grid_size: [1, 1], t: 2, mblock: [2, 2], ublock: [2, 2], tile_dim: [32, 32], df: Bfp8, target_device: 0, loc: dram, dram: [[0, 0x38000000]]}

graphs:
  test_op:
    target_device: 0
    input_count: 4
    op0: 
      type: nop 
      grid_loc: [0, 0] 
      grid_size: [1, 1]
      inputs: [input] 
      in_df: [Bfp8] 
      acc_df: Bfp8
      out_df: Bfp8  
      intermed_df: Bfp8 
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi3 
      untilize_output: false 
      t: 2
      mblock: [2, 2]
      ublock: [2, 2]
      tile_dim: [2, 32]
    op1:
      type: nop 
      grid_loc: [0, 1] 
      grid_size: [1, 1]
      inputs: [op0] 
      in_df: [Bfp8] 
      acc_df: Bfp8
      out_df: Bfp8  
      intermed_df: Bfp8 
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi3 
      untilize_output: false 
      t: 2
      mblock: [2, 2]
      ublock: [2, 2]
      tile_dim: [32, 32]
      
programs:
  - program0:
      - staticvar: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - varinst: [$c_loop_count,  set, 1]  # load loop count
      - varinst: [$c_input_count, set, 4]  # load input count
      - loop: $c_loop_count
      -   execute: {graph_name: test_op, queue_settings: {
            input: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      -   varinst: [$lptr, incwrap, $c_input_count, 8]
      -   varinst: [$gptr, incwrap, $c_input_count, 8]
      - endloop 

test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -1.0
    uniform_upper_bound: 1.0

