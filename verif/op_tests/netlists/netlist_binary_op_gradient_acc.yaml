devices:
  arch: [grayskull, wormhole_b0, blackhole]
queues:
  input0: {type: queue, input: HOST, entries: 3, grid_size: [5, 3], t: 2, mblock: [1, 3], ublock: [1, 6], df: Bfp8_b, target_device: 0, loc: dram, dram: [[2, 0x10000000], [2, 0x1001e640], [2, 0x1003cc80],
      [2, 0x1005b2c0], [2, 0x10079900], [2, 0x10097f40], [2, 0x100b6580], [2, 0x100d4bc0], [2, 0x100f3200], [2, 0x10111840], [2, 0x1012fe80], [2, 0x1014e4c0], [2, 0x1016cb00], [2, 0x1018b140], [2, 0x101a9780]]}
  input1: {type: queue, input: HOST, entries: 3, grid_size: [5, 3], t: 2, mblock: [1, 3], ublock: [1, 6], df: Float32, target_device: 0, loc: dram, dram: [[2, 0x101c7dc0], [2, 0x10237400], [2, 0x102a6a40],
      [2, 0x10316080], [2, 0x103856c0], [2, 0x103f4d00], [2, 0x10464340], [2, 0x104d3980], [2, 0x10542fc0], [2, 0x105b2600], [2, 0x10621c40], [2, 0x10691280], [2, 0x107008c0], [2, 0x1076ff00], [2, 0x107df540]]}
  output: {type: ram, input: op0, entries: 1, grid_size: [5, 3], t: 2, mblock: [1, 3], ublock: [1, 6], df: Bfp8_b, target_device: 0, loc: dram, dram: [[2, 0x1084eb80], [2, 0x10858dc0], [2, 0x10863000],
      [2, 0x1086d240], [2, 0x10877480], [2, 0x108816c0], [2, 0x1088b900], [2, 0x10895b40], [2, 0x1089fd80], [2, 0x108a9fc0], [2, 0x108b4200], [2, 0x108be440], [2, 0x108c8680], [2, 0x108d28c0], [2, 0x108dcb00]]}

graphs:
  test_op:
    target_device: 0
    input_count: 3
    op0:
      type: multiply
      grid_loc: [0, 4]   # [r,c]
      grid_size: [5, 3] # [r,c]
      inputs: [input0, input1]
      in_df: [Bfp8_b, Float32]
      acc_df: Float16
      out_df: Bfp8_b
      intermed_df: Bfp8_b
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi3
      untilize_output: false
      gradient_op: true
      t: 2
      mblock: [1, 3]
      ublock: [1, 6]
      input_0_tms:
      input_1_tms:
programs:
- program0:
  - var: [$c_loop_count, $c_input_count, $ramrdptr, $ramwrptr]
  - staticvar: {$lptr: 0, $gptr: 0}
  - varinst: [$c_loop_count, set, 1]        # load loop count
  - varinst: [$c_input_count, set, 3]      # load input count
  - loop: $c_loop_count
  - execute: {graph_name: test_op, queue_settings: {input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}, input1: {prologue: false, epilogue: false, zero: false,
          rd_ptr_local: $lptr, rd_ptr_global: $gptr}, output: {prologue: true, epilogue: true, zero: true, rd_ptr_global: $ramrdptr, wr_ptr_global: $ramwrptr}}}
  - varinst: [$lptr, incwrap, $c_input_count, 6]
  - varinst: [$gptr, incwrap, $c_input_count, 6]
  - endloop

test-config:
  test-args:
    program_loop_count: 1
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.3
    check_pct: 0.85
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -2.0
    uniform_upper_bound: 2.0

