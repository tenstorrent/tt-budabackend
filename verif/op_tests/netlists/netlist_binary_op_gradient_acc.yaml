devices:
  arch: [grayskull, wormhole_b0]
queues:
  input0:  {type: queue, input: HOST, entries: 3, grid_size: [5, 3], t: 2, mblock: [1, 3], ublock: [1, 6], df: Bfp8_b, target_device: 0, loc: dram, dram: [[2, 0x15c68ea0], [5, 0x15c86740], [2, 0x15ca3fe0], [1, 0x15cc1880], [5, 0x15cdf120], [2, 0x15cfc9c0], [5, 0x15d1a260], [0, 0x15d37b00], [5, 0x15d553a0], [4, 0x15d72c40], [0, 0x15d904e0], [0, 0x15dadd80], [2, 0x15dcb620], [5, 0x15de8ec0], [5, 0x15e06760]]}
  input1:  {type: queue, input: HOST, entries: 3, grid_size: [5, 3], t: 2, mblock: [1, 3], ublock: [1, 6], df: Float32, target_device: 0, loc: dram, dram: [[2, 0x212eb0e0], [3, 0x21357e80], [2, 0x213c4c20], [1, 0x214319c0], [3, 0x2149e760], [2, 0x2150b500], [5, 0x215782a0], [0, 0x215e5040], [3, 0x21651de0], [3, 0x216beb80], [0, 0x2172b920], [0, 0x217986c0], [2, 0x21805460], [5, 0x21872200], [5, 0x218defa0]]}
  output: {type: ram, input: op0 , entries: 1, grid_size: [5, 3], t: 2, mblock: [1, 3], ublock: [1, 6], df: Bfp8_b, target_device: 0, loc: dram, dram: [[2, 0x2f173da0], [4, 0x2f191640], [2, 0x2f1aeee0], [1, 0x2f1cc780], [4, 0x2f1ea020], [2, 0x2f2078c0], [5, 0x2f225160], [0, 0x2f242a00], [4, 0x2f2602a0], [4, 0x2f27db40], [0, 0x2f29b3e0], [0, 0x2f2b8c80], [2, 0x2f2d6520], [5, 0x2f2f3dc0], [5, 0x2f311660]]}

graphs:
  test_op:
    target_device: 0
    input_count:  3
    op0: 
      type: multiply
      grid_loc: [0, 4]   # [r,c]
      grid_size: [5, 3] # [r,c]
      inputs: [input0, input1] 
      in_df: [Bfp8_b, Float32] 
      acc_df: Float16
      out_df: Bfp8_b  
      intermed_df: Bfp8_b
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi3
      untilize_output: false 
      gradient_op: true
      t: 2
      mblock: [1,  3]
      ublock: [1, 6]
      input_0_tms:
      input_1_tms:
      
programs:
  - program0:
      - var : [$c_loop_count, $c_input_count, $ramrdptr, $ramwrptr]
      - staticvar : {$lptr: 0, $gptr: 0}
      - varinst: [$c_loop_count, set,  1]   # load loop count
      - varinst: [$c_input_count, set, 3]  # load input count
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         output: {prologue: true, epilogue: true, zero: true, rd_ptr_global: $ramrdptr, wr_ptr_global: $ramwrptr}}}
      - varinst: [$lptr, incwrap, $c_input_count, 6]
      - varinst: [$gptr, incwrap, $c_input_count, 6]
      - endloop 

test-config:
  test-args:
    program_loop_count: 1
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.3
    check_pct: 0.85
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -2.0
    uniform_upper_bound: 2.0

