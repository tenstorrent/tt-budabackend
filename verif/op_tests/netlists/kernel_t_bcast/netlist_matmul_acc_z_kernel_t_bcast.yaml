devices:
  arch: WORMHOLE_B0

queues:
  input_0: {type: queue, grid_size: [1, 1], t: 1, mblock: [3, 1], ublock: [1, 1], df: Int8, input: HOST, entries: 1, target_device: 0, loc: dram, dram: [[0, 0x1b0bcc80]], }
  input_1: {type: queue, grid_size: [1, 1], t: 8, mblock: [1, 1], ublock: [9, 9], df: Int8, input: HOST, entries: 1, target_device: 0, loc: dram, dram: [[0, 0x1f52c840]], }
  input_2: {type: queue, grid_size: [1, 1], t: 2, mblock: [6, 9], ublock: [1, 1], df: Int32, input: HOST, entries: 1, target_device: 0, loc: dram, dram: [[0, 0x29612640]], }
  input_3: {type: queue, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float32, input: HOST, entries: 1, target_device: 0, loc: dram, dram: [[0, 0x2a973ba0]], }
  output0: {type: queue, grid_size: [1, 1], t: 2, mblock: [6, 9], ublock: [1, 1], df: Int8, input: op, entries: 1, target_device: 0, loc: dram, dram: [[0, 0x35950a40]], }

graphs:
  test_op:
    target_device: 0
    input_count: 1
    op: {type: matmul, grid_size: [1, 1], t: 2, mblock: [6, 9], ublock: [1, 1], out_df: Int8, grid_loc: [0, 0], inputs: [input_0, input_1, input_2, input_3], in_df: [Int8, Int8, Int32, Float32], math_fidelity: HiFi4, intermed_df: Int32, acc_df: Int32, attributes: {requant: true, dequant: false, zero_point: 37, accumulate: true, z: 4, stoch_rnd_mode: none, bias: true, m_k: 1, u_kt: 9, kernel_broadcast_per_t : {input_0 : 27}, kernel_broadcast_per_t : {input_3 : 45}, }, ublock_order: r, buf_size_mb: 2, untilize_output: false, gradient_op: false, input_0_tms: [broadcast: {r: 2}, broadcast: {c: 9}, broadcast: {z: 8}, ], input_1_tms: [transpose], input_2_tms: [], input_3_tms: [broadcast: {r: 6}, broadcast: {c: 9}, broadcast: {z: 2}, ], }
    
    
    
    
    

programs:
  - program0:
      - var : [$c_loop_count, $c_input_count]
      - staticvar : {$lptr: 0, $gptr: 0}
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - varinst : [$c_input_count, set, 1]
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input_0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input_1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input_2: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input_3: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         }}
      - varinst: [$lptr, incwrap, $c_input_count, 2] # add two variables
      - varinst: [$gptr, incwrap, $c_input_count, 2] # add two variables
      - endloop

test-config:
  test-args:
    program_loop_count: 1
  comparison-config: {type: AllClose, atol: 0.01, rtol: 0.15, check_pct: 0.4, check_pcc: 0.99, verbosity: Concise, check_tile_rows_range: [1, 32], check_tile_cols_range: [1, 32] }
  stimulus-config:
    overrides:
      input_0: {type: Uniform, uniform_lower_bound: -10.0, uniform_upper_bound: 10.0}
      input_1: {type: Uniform, uniform_lower_bound: -10.0, uniform_upper_bound: 10.0}
      input_2: {type: Uniform, uniform_lower_bound: -10.0, uniform_upper_bound: 10.0}
      input_3: {type: Uniform, uniform_lower_bound: -2.0, uniform_upper_bound: 2.0}
