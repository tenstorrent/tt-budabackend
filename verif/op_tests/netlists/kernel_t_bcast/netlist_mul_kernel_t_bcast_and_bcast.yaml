devices:
  arch: [grayskull, wormhole_b0]

queues:
  input0:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 3, mblock: [1, 1], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  input1:  {type: queue, input: HOST, entries: 1, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x31000000]]}
  output0: {type: queue, input: op0 , entries: 1, grid_size: [1, 1], t: 3, mblock: [1, 1], ublock: [2, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x3e000000]]}

graphs:
  test_op:
    target_device: 0
    input_count:  1
    op0:
      type: multiply
      grid_loc: [0, 0]
      grid_size: [1, 1]
      inputs: [input0, input1]
      in_df: [Float16_b, Float16_b]
      acc_df: Float16_b
      out_df: Float16_b
      intermed_df: Float16_b
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: HiFi3
      attributes: {kernel_broadcast_per_t: {input_0 : 1}, kernel_broadcast: {input_1 : 2}}
      t: 3
      mblock: [1, 1]
      ublock: [2, 1]
      input_0_tms: [broadcast: {r: 2}]
      input_1_tms: [broadcast: {z: 3}]

programs:
  - program0:
      - var : [$c_loop_count, $c_input_count, $c_zero]
      - staticvar : {$lptr: 0, $gptr: 0}
      - varinst: [$c_loop_count, set, 1]
      - varinst : [$c_input_count, set, 1]
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, incwrap, $c_input_count, 2]
      - varinst: [$gptr, incwrap, $c_input_count, 2]
      - endloop

test-config:
  test-args:
    program_loop_count: 1
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.01
    check_pct: 0.99
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    overrides:
      input0:
        type: DebugTileId
        debug_tile_id_base: 0
        debug_tile_id_step: 1
      input1:
        type: DebugTileId
        debug_tile_id_base: 10
        debug_tile_id_step: 1
