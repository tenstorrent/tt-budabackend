devices:
  arch: [grayskull, wormhole_b0]

queues:
  input0:  {type: queue, input: HOST, entries: 1, grid_size: [7, 6], t: 1, mblock: [2, 4], ublock: [2, 2], df: Float16_b, target_device: 0, loc: dram, dram: [[2, 0x17a126a0], [1, 0x17c1a6c0], [3, 0x17e226e0], [2, 0x1802a700], [3, 0x18232720], [0, 0x1843a740], [3, 0x18642760], [1, 0x1884a780], [3, 0x18a527a0], [4, 0x18c5a7c0], [0, 0x18e627e0], [4, 0x1906a800], [4, 0x19272820], [5, 0x1947a840], [3, 0x19682860], [0, 0x1988a880], [4, 0x19a928a0], [5, 0x19c9a8c0], [2, 0x19ea28e0], [1, 0x1a0aa900], [4, 0x1a2b2920], [3, 0x1a4ba940], [2, 0x1a6c2960], [4, 0x1a8ca980], [1, 0x1aad29a0], [5, 0x1acda9c0], [3, 0x1aee29e0], [3, 0x1b0eaa00], [0, 0x1b2f2a20], [2, 0x1b4faa40], [1, 0x1b702a60], [2, 0x1b90aa80], [3, 0x1bb12aa0], [3, 0x1bd1aac0], [4, 0x1bf22ae0], [1, 0x1c12ab00], [5, 0x1c332b20], [1, 0x1c53ab40], [4, 0x1c742b60], [4, 0x1c94ab80], [2, 0x1cb52ba0], [1, 0x1cd5abc0]]}
  input1:  {type: queue, input: HOST, entries: 1, grid_size: [8, 6], t: 1, mblock: [3, 1], ublock: [2, 2], df: Bfp8_b, target_device: 0, loc: dram, dram: [[2, 0x1f8ec120], [1, 0x1f9be140], [3, 0x1fa90160], [2, 0x1fb62180], [3, 0x1fc341a0], [0, 0x1fd061c0], [3, 0x1fdd81e0], [1, 0x1feaa200], [3, 0x1ff7c220], [4, 0x2004e240], [0, 0x20120260], [4, 0x201f2280], [4, 0x202c42a0], [5, 0x203962c0], [3, 0x204682e0], [0, 0x2053a300], [4, 0x2060c320], [5, 0x206de340], [2, 0x207b0360], [1, 0x20882380], [4, 0x209543a0], [3, 0x20a263c0], [2, 0x20af83e0], [4, 0x20bca400], [1, 0x20c9c420], [5, 0x20d6e440], [3, 0x20e40460], [3, 0x20f12480], [0, 0x20fe44a0], [2, 0x210b64c0], [1, 0x211884e0], [2, 0x2125a500], [3, 0x2132c520], [3, 0x213fe540], [4, 0x214d0560], [1, 0x215a2580], [5, 0x216745a0], [1, 0x217465c0], [4, 0x218185e0], [4, 0x218ea600], [2, 0x219bc620], [1, 0x21a8e640], [0, 0x21b60660], [2, 0x21c32680], [4, 0x21d046a0], [5, 0x21dd66c0], [3, 0x21ea86e0], [4, 0x21f7a700]]}
  output: {type: queue, input: op0 , entries: 1, grid_size: [7, 6], t: 1, mblock: [2, 1], ublock: [2, 2], df: Float32, target_device: 0, loc: dram, dram: [[2, 0x2f8c4260], [1, 0x2fccc280], [3, 0x300d42a0], [2, 0x304dc2c0], [3, 0x308e42e0], [0, 0x30cec300], [3, 0x310f4320], [1, 0x314fc340], [3, 0x31904360], [4, 0x31d0c380], [0, 0x321143a0], [4, 0x3251c3c0], [4, 0x329243e0], [5, 0x32d2c400], [3, 0x33134420], [0, 0x3353c440], [4, 0x33944460], [5, 0x33d4c480], [2, 0x341544a0], [1, 0x3455c4c0], [4, 0x349644e0], [3, 0x34d6c500], [2, 0x35174520], [4, 0x3557c540], [1, 0x35984560], [5, 0x35d8c580], [3, 0x361945a0], [3, 0x3659c5c0], [0, 0x369a45e0], [2, 0x36dac600], [1, 0x371b4620], [2, 0x375bc640], [3, 0x379c4660], [3, 0x37dcc680], [4, 0x381d46a0], [1, 0x385dc6c0], [5, 0x389e46e0], [1, 0x38dec700], [4, 0x391f4720], [4, 0x395fc740], [2, 0x39a04760], [1, 0x39e0c780]]}

graphs:
  test_op:
    target_device: 0
    input_count:  1
    op0: 
      type: matmul
      grid_loc: [0, 0]   # [r,c]
      grid_size: [7, 6] # [r,c]
      inputs: [input0, input1] 
      in_df: [Float16_b, Bfp8_b] 
      acc_df: Float16
      out_df: Float32  
      intermed_df: Float16_b
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: LoFi
      attributes: {m_k: 24, u_kt: 2, l1_acc: False, 
        sfpu_op: invalid, sfpu_execution_thread: math, 
        relu_en:  true, relu_threshold: 0.950000, relu_mode: min, min_buffer_input: 0}
      untilize_output: false 
      t: 1
      mblock: [2, 1]
      ublock: [2, 2]
      input_0_tms:
      input_1_tms: None
      
programs:
  - program0:
      - var : [$c_loop_count, $c_input_count]
      - staticvar : {$lptr: 0, $gptr: 0}
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - varinst : [$c_input_count, set, 1]
      - loop: $c_loop_count
      - execute: {graph_name: test_op, queue_settings: {
         input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr},
         input1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, incwrap, $c_input_count, 2] # add two variables
      - varinst: [$gptr, incwrap, $c_input_count, 2] # add two variables
      - endloop 

test-config:
  test-args:
    program_loop_count: 1
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.55
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -2.0
    uniform_upper_bound: 2.0

