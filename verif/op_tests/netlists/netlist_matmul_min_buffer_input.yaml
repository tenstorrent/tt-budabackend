devices:
  arch: [grayskull, wormhole_b0, blackhole]

queues:
  input0: {type: queue, input: HOST, entries: 1, grid_size: [7, 6], t: 1, mblock: [2, 4], ublock: [2, 2], df: Float16_b, target_device: 0, loc: dram, dram: [[2, 0x10000000], [2, 0x10011040], [2, 0x10022080],
      [2, 0x100330c0], [2, 0x10044100], [2, 0x10055140], [2, 0x10066180], [2, 0x100771c0], [2, 0x10088200], [2, 0x10099240], [2, 0x100aa280], [2, 0x100bb2c0], [2, 0x100cc300], [2, 0x100dd340], [2, 0x100ee380],
      [2, 0x100ff3c0], [2, 0x10110400], [2, 0x10121440], [2, 0x10132480], [2, 0x101434c0], [2, 0x10154500], [2, 0x10165540], [2, 0x10176580], [2, 0x101875c0], [2, 0x10198600], [2, 0x101a9640], [2, 0x101ba680],
      [2, 0x101cb6c0], [2, 0x101dc700], [2, 0x101ed740], [2, 0x101fe780], [2, 0x1020f7c0], [2, 0x10220800], [2, 0x10231840], [2, 0x10242880], [2, 0x102538c0], [2, 0x10264900], [2, 0x10275940], [2, 0x10286980],
      [2, 0x102979c0], [2, 0x102a8a00], [2, 0x102b9a40]]}
  input1: {type: queue, input: HOST, entries: 1, grid_size: [8, 6], t: 1, mblock: [3, 1], ublock: [2, 2], df: Bfp8_b, target_device: 0, loc: dram, dram: [[2, 0x102caa80], [2, 0x102ce0c0], [2, 0x102d1700],
      [2, 0x102d4d40], [2, 0x102d8380], [2, 0x102db9c0], [2, 0x102df000], [2, 0x102e2640], [2, 0x102e5c80], [2, 0x102e92c0], [2, 0x102ec900], [2, 0x102eff40], [2, 0x102f3580], [2, 0x102f6bc0], [2, 0x102fa200],
      [2, 0x102fd840], [2, 0x10300e80], [2, 0x103044c0], [2, 0x10307b00], [2, 0x1030b140], [2, 0x1030e780], [2, 0x10311dc0], [2, 0x10315400], [2, 0x10318a40], [2, 0x1031c080], [2, 0x1031f6c0], [2, 0x10322d00],
      [2, 0x10326340], [2, 0x10329980], [2, 0x1032cfc0], [2, 0x10330600], [2, 0x10333c40], [2, 0x10337280], [2, 0x1033a8c0], [2, 0x1033df00], [2, 0x10341540], [2, 0x10344b80], [2, 0x103481c0], [2, 0x1034b800],
      [2, 0x1034ee40], [2, 0x10352480], [2, 0x10355ac0], [2, 0x10359100], [2, 0x1035c740], [2, 0x1035fd80], [2, 0x103633c0], [2, 0x10366a00], [2, 0x1036a040]]}
  output: {type: queue, input: op0, entries: 1, grid_size: [7, 6], t: 1, mblock: [2, 1], ublock: [2, 2], df: Float32, target_device: 0, loc: dram, dram: [[2, 0x1036d680], [2, 0x10375ac0], [2, 0x1037df00],
      [2, 0x10386340], [2, 0x1038e780], [2, 0x10396bc0], [2, 0x1039f000], [2, 0x103a7440], [2, 0x103af880], [2, 0x103b7cc0], [2, 0x103c0100], [2, 0x103c8540], [2, 0x103d0980], [2, 0x103d8dc0], [2, 0x103e1200],
      [2, 0x103e9640], [2, 0x103f1a80], [2, 0x103f9ec0], [2, 0x10402300], [2, 0x1040a740], [2, 0x10412b80], [2, 0x1041afc0], [2, 0x10423400], [2, 0x1042b840], [2, 0x10433c80], [2, 0x1043c0c0], [2, 0x10444500],
      [2, 0x1044c940], [2, 0x10454d80], [2, 0x1045d1c0], [2, 0x10465600], [2, 0x1046da40], [2, 0x10475e80], [2, 0x1047e2c0], [2, 0x10486700], [2, 0x1048eb40], [2, 0x10496f80], [2, 0x1049f3c0], [2, 0x104a7800],
      [2, 0x104afc40], [2, 0x104b8080], [2, 0x104c04c0]]}

graphs:
  test_op:
    target_device: 0
    input_count: 1
    op0:
      type: matmul
      grid_loc: [0, 0]   # [r,c]
      grid_size: [7, 6] # [r,c]
      inputs: [input0, input1]
      in_df: [Float16_b, Bfp8_b]
      acc_df: Float16
      out_df: Float32
      intermed_df: Float16_b
      ublock_order: r
      buf_size_mb: 2
      math_fidelity: LoFi
      attributes: {m_k: 24, u_kt: 2, l1_acc: false, sfpu_op: invalid, sfpu_execution_thread: math, relu_en: true, relu_threshold: 0.950000, relu_mode: min, min_buffer_input: 0}
      untilize_output: false
      t: 1
      mblock: [2, 1]
      ublock: [2, 2]
      input_0_tms:
      input_1_tms: None

programs:
- program0:
  - var: [$c_loop_count, $c_input_count]
  - staticvar: {$lptr: 0, $gptr: 0}
  - varinst: [$c_loop_count, set, 1]      # load loop count
  - varinst: [$c_input_count, set, 1]
  - loop: $c_loop_count
  - execute: {graph_name: test_op, queue_settings: {input0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}, input1: {prologue: false, epilogue: false, zero: false,
          rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
  - varinst: [$lptr, incwrap, $c_input_count, 2]     # add two variables
  - varinst: [$gptr, incwrap, $c_input_count, 2]     # add two variables
  - endloop

test-config:
  test-args:
    program_loop_count: 1
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.55
    check_pcc: 0.99
    verbosity: Concise
  stimulus-config:
    type: Uniform
    uniform_lower_bound: -2.0
    uniform_upper_bound: 2.0

