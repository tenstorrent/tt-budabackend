devices:
 arch: [wormhole, wormhole_b0]

queues:
  q0    : {type: queue, input: HOST    , entries: 4, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x21000000], [0, 0x22000000], [0, 0x23000000], [0, 0x24000000]]}
  q1    : {type: queue, input: HOST    , entries: 4, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x25000000], [0, 0x26000000], [0, 0x27000000], [0, 0x28000000]]}
  output: {type: queue, input: binary_add , entries: 4, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x29000000], [0, 0x2a000000], [0, 0x2b000000], [0, 0x2c000000]]}

graphs:
  test_unary_chip0:
    target_device: 0
    input_count: 1

  test_unary_chip1:
    target_device: 1
    input_count: 1
    binary_add: {type: add, grid_loc: [2, 2], grid_size: [2, 2], inputs: [q0, q1], acc_df: Float16, in_df: [Float16,Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}


programs:
  - program0:
      - var: [$0, $1, $5, $8]
      - var: [$2]
      - varinst: [$5, set, 1] # LOAD an 8 into $5
      - varinst: [$8, set, 1] # LOAD a  1 into $8 
      - loop: $5
      - execute: { graph_name: test_unary_chip0, queue_settings: {}}
      - execute: {
          graph_name: test_unary_chip1, queue_settings: {
            q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}, 
            q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}
          }
        }
      - varinst: [$0, add, $0, $8] # add two variables
      - endloop: 

