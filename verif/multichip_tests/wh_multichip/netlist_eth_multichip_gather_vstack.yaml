devices:
 arch: [wormhole, wormhole_b0]

queues:
  q0    : {type: queue, input: HOST    , entries: 2, grid_size: [2, 1], t: 2, mblock: [1, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x30000000], [0, 0x31000000]]}
  q1    : {type: queue, input: HOST    , entries: 2, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30000000], [0, 0x31000000], [0, 0x32000000], [0, 0x33000000]]}
  output: {type: queue, input: matmul1 , entries: 4, grid_size: [4, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x34000000], [0, 0x35000000], [0, 0x36000000], [0, 0x37000000], [0, 0x38000000], [0, 0x39000000], [0, 0x3A000000], [0, 0x3B000000]]}

graphs:
  test_unary_chip0:
    target_device: 0
    input_count: 1
    unary0: {type: exp, grid_loc: [0, 0], grid_size: [2, 1], inputs: [q0], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 2, mblock: [1, 2], ublock: [2, 2], input_0_tms: []}
  test_unary_chip1: 
    target_device: 1
    input_count: 1
    unary1: {type: exp, grid_loc: [0, 0], grid_size: [2, 2], inputs: [q1], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    matmul1: {type: matmul, grid_loc: [2, 2], grid_size: [4, 2], inputs: [unary0, unary1], acc_df: Float16, in_df: [Float16,Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: [vstack: 2], attributes: {m_k: 4, u_kt: 1}}

programs:
  - program0:
      - staticvar: {$0: 0, $2: 0, $5: 1, $ubatch: 1, $wrap: 4}
      - loop: $5
      - execute: {graph_name: test_unary_chip0, queue_settings: {
            q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}}}
      - execute: {graph_name: test_unary_chip1, queue_settings: {
            q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $2, rd_ptr_global: $2}}}
      - varinst: [$0, incwrap, $ubatch, $wrap] # add two variables
      - varinst: [$2, incwrap, $ubatch, $wrap] # add two variables
      - endloop: 

