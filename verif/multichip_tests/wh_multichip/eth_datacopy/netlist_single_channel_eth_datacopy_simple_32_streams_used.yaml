devices:
 arch: [wormhole,wormhole_b0]

queues:
  q0    : {type: queue, input: HOST   , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  q1    : {type: queue, input: HOST   , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x31000000]]}

  
  output: {type: queue, input: unary1 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30000000]]}
  output2: {type: queue, input: unary2 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30100000]]}
  output3: {type: queue, input: unary3 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30200000]]}
  output4: {type: queue, input: unary4 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30300000]]}
  output5: {type: queue, input: unary5 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30400000]]}
  output6: {type: queue, input: unary6 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30500000]]}
  output7: {type: queue, input: unary7 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30600000]]}
  output8: {type: queue, input: unary8 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30700000]]}
  output9: {type: queue, input: unary9 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30800000]]}
  output10: {type: queue, input: unary10 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30900000]]}
  output11: {type: queue, input: unary11 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30a00000]]}
  output12: {type: queue, input: unary12 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30b00000]]}
  output13: {type: queue, input: unary13 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30c00000]]}
  output14: {type: queue, input: unary14 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30d00000]]}
  output15: {type: queue, input: unary15 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30e00000]]}
  output16: {type: queue, input: unary16 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30f00000]]}

  
  output17: {type: queue, input: unary2_1 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31000000]]}
  output18: {type: queue, input: unary2_2 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31100000]]}
  output19: {type: queue, input: unary2_3 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31200000]]}
  output20: {type: queue, input: unary2_4 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31300000]]}
  output21: {type: queue, input: unary2_5 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31400000]]}
  output22: {type: queue, input: unary2_6 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31500000]]}
  output23: {type: queue, input: unary2_7 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31600000]]}
  output24: {type: queue, input: unary2_8 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31700000]]}
  output25: {type: queue, input: unary2_9 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31800000]]}
  output26: {type: queue, input: unary2_10 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31900000]]}
  output27: {type: queue, input: unary2_11 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31a00000]]}
  output28: {type: queue, input: unary2_12 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31b00000]]}
  output29: {type: queue, input: unary2_13 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31c00000]]}
  output30: {type: queue, input: unary2_14 , entries: 2, grid_size: [1, 1], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x31d00000]]}



graphs:
  test_unary_chip0:
    target_device: 0
    input_count: 1
    q0_reader: {type: gelu, grid_loc: [0, 0], grid_size: [1, 1], inputs: [q0], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    eth_datacopy: {type: ethernet_datacopy,  grid_size: [1,1], attributes: {ingress_channels: [8], egress_channels: [0], dest_device: 1}, inputs: [q0_reader], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    
    q1_reader: {type: gelu, grid_loc: [1, 0], grid_size: [1, 1], inputs: [q1], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    eth_datacopy2: {type: ethernet_datacopy,  grid_size: [1,1], attributes: {ingress_channels: [8], egress_channels: [0], dest_device: 1}, inputs: [q1_reader], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}

  test_unary_chip1:
    target_device: 1
    input_count: 1
    unary1: {type: datacopy, grid_loc: [0, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2: {type: datacopy, grid_loc: [1, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary3: {type: datacopy, grid_loc: [2, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary4: {type: datacopy, grid_loc: [3, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary5: {type: datacopy, grid_loc: [4, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary6: {type: datacopy, grid_loc: [5, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary7: {type: datacopy, grid_loc: [6, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary8: {type: datacopy, grid_loc: [7, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary9: {type: datacopy, grid_loc: [8, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary10: {type: datacopy, grid_loc: [9, 0], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary11: {type: datacopy, grid_loc: [0, 1], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary12: {type: datacopy, grid_loc: [1, 1], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary13: {type: datacopy, grid_loc: [2, 1], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary14: {type: datacopy, grid_loc: [3, 1], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary15: {type: datacopy, grid_loc: [4, 1], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary16: {type: datacopy, grid_loc: [5, 1], grid_size: [1, 1], inputs: [eth_datacopy], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    
    unary2_1: {type: datacopy, grid_loc: [1, 2], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_2: {type: datacopy, grid_loc: [2, 2], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_3: {type: datacopy, grid_loc: [3, 2], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_4: {type: datacopy, grid_loc: [4, 2], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_5: {type: datacopy, grid_loc: [5, 2], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_6: {type: datacopy, grid_loc: [6, 2], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_7: {type: datacopy, grid_loc: [7, 2], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_8: {type: datacopy, grid_loc: [8, 2], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_9: {type: datacopy, grid_loc: [9, 2], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_10: {type: datacopy, grid_loc: [1, 3], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_11: {type: datacopy, grid_loc: [2, 3], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_12: {type: datacopy, grid_loc: [3, 3], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_13: {type: datacopy, grid_loc: [4, 3], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary2_14: {type: datacopy, grid_loc: [5, 3], grid_size: [1, 1], inputs: [eth_datacopy2], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 1, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}

programs:
  - program0:
      - var: [$0, $1, $5, $8]
      - varinst: [$5, set, 1] # LOAD an 8 into $5
      - varinst: [$8, set, 1] # LOAD a  1 into $8 
      - loop: $5
      - execute: {graph_name: test_unary_chip0, queue_settings: {
        q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0},
        q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}
        }}
      - execute: {graph_name: test_unary_chip1, queue_settings: {}}
      - varinst: [$0, add, $0, $8] # add two variables
      - varinst: [$1, add, $1, $8] # add two variables
      - endloop: 

