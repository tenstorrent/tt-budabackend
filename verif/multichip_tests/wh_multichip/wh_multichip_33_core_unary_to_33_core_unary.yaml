devices:
 arch: [wormhole, wormhole_b0]

queues:
  q0    : {type: queue, input: HOST   , entries: 1, grid_size: [4, 8], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [
    [0, 0x10000000], [0, 0x20000000], [0, 0x20000000], [0, 0x30000000], [0, 0x40000000], [0, 0x50000000], [0, 0x60000000], [0, 0x70000000], 
    [0, 0x11000000], [0, 0x21000000], [0, 0x21000000], [0, 0x31000000], [0, 0x41000000], [0, 0x51000000], [0, 0x61000000], [0, 0x71000000], 
    [0, 0x12000000], [0, 0x22000000], [0, 0x22000000], [0, 0x32000000], [0, 0x42000000], [0, 0x52000000], [0, 0x62000000], [0, 0x72000000], 
    [0, 0x13000000], [0, 0x23000000], [0, 0x23000000], [0, 0x33000000], [0, 0x43000000], [0, 0x53000000], [0, 0x63000000], [0, 0x73000000]
    ]}
  q1    : {type: queue, input: HOST   , entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [
    [0, 0x10000000]
  ]}
  output: {type: queue, input: unary1 , entries: 1, grid_size: [4, 8], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [
    [0, 0x80000000], [0, 0x90000000], [0, 0xA0000000], [0, 0xB0000000], [0, 0xC0000000], [0, 0xD0000000], [0, 0xE0000000], [0, 0xF0000000], 
    [0, 0x81000000], [0, 0x91000000], [0, 0xA1000000], [0, 0xB1000000], [0, 0xC1000000], [0, 0xD1000000], [0, 0xE1000000], [0, 0xF1000000], 
    [0, 0x82000000], [0, 0x92000000], [0, 0xA2000000], [0, 0xB2000000], [0, 0xC2000000], [0, 0xD2000000], [0, 0xE2000000], [0, 0xF2000000], 
    [0, 0x83000000], [0, 0x93000000], [0, 0xA3000000], [0, 0xB3000000], [0, 0xC3000000], [0, 0xD3000000], [0, 0xE3000000], [0, 0xF3000000]
    ]}
  output1: {type: queue, input: unary1 , entries: 1, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [
    [0, 0x80000000]
    ]}

graphs:
  test_unary_chip0:
    target_device: 0
    input_count: 1
    unary0: {type: exp, grid_loc: [0, 0], grid_size: [4,8], inputs: [q0], acc_df: Float16, in_df: [Float16], out_df: Float16, ublock_order: r, buf_size_mb: 2,  intermed_df: Float16, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}
    unary2: {type: exp, grid_loc: [5, 0], grid_size: [1,1], inputs: [q1], acc_df: Float16, in_df: [Float16], out_df: Float16, ublock_order: r, buf_size_mb: 2,  intermed_df: Float16, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

  test_unary_chip1:
    target_device: 1
    input_count: 1
    unary1: {type: exp, grid_loc: [0, 0], grid_size: [4,8], inputs: [unary0], acc_df: Float16, in_df: [Float16], out_df: Float16, ublock_order: r, buf_size_mb: 2,  intermed_df: Float16, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}
    unary3: {type: exp, grid_loc: [5, 0], grid_size: [1,1], inputs: [unary2], acc_df: Float16, in_df: [Float16], out_df: Float16, ublock_order: r, buf_size_mb: 2,  intermed_df: Float16, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

programs:
  - program0:
      - var: [$0, $1, $5, $8]
      - varinst: [$5, set, 1] # LOAD an 8 into $5
      - varinst: [$8, set, 1] # LOAD a  1 into $8 
      - loop: $5
      - execute: {graph_name: test_unary_chip0, queue_settings: {
        q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0},
        q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}
        }}
      - execute: {graph_name: test_unary_chip1, queue_settings: {}}
      - varinst: [$0, add, $0, $8] # add two variables
      - varinst: [$1, add, $1, $8] # add two variables
      - endloop: 

