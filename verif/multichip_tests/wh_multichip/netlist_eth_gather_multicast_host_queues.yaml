devices:
  arch: [wormhole_b0]

queues:
  q0    : {type: queue, input: HOST    , entries: 2, grid_size: [2, 1], t: 1, mblock: [1, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: host, host: [[0, 0x0], [0, 0x1000000]]}
  q1    : {type: queue, input: HOST    , entries: 2, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 0, loc: host, host: [[0, 0x20000000], [0, 0x21000000], [0, 0x22000000], [0, 0x23000000]]}
  output: {type: queue, input: unary0  , entries: 2, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: host, host: [[0, 0x3000000]]}

graphs:
  test_unary_chip0:
    target_device: 0
    input_count: 1
    unary0: {type: nop, grid_loc: [0, 0], grid_size: [1, 1], inputs: [matmul1], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: true, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

  test_unary_chip1:
    target_device: 1
    input_count: 1
    matmul1: {type: matmul, grid_loc: [2, 2], grid_size: [2, 2], inputs: [q0, q1], acc_df: Float16, in_df: [Float16,Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: [], attributes: {m_k: 2, u_kt: 2}}

programs:
  - program0:
      - var: [$0, $1, $5, $8]
      - var: [$2]
      - varinst: [$5, set, 1]
      - varinst: [$8, set, 1]
      - loop: $5
      - execute: {graph_name: test_unary_chip0, queue_settings: {}}
      - execute: {graph_name: test_unary_chip1, queue_settings: {
        q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0},
        q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $2, rd_ptr_global: $2}}}
      - varinst: [$0, add, $0, $8] # add two variables
      - varinst: [$2, add, $2, $8] # add two variables
      - endloop:

