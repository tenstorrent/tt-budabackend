devices:
  arch: [wormhole, wormhole_b0]

queues:
  q0    : {type: queue, input: HOST    , entries: 2, grid_size: [2, 1], t: 1, mblock: [1, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x30000000], [0, 0x31000000]]}
  q1    : {type: queue, input: HOST    , entries: 2, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float32, target_device: 1, loc: dram, dram: [[0, 0x30000000], [0, 0x31000000], [0, 0x32000000], [0, 0x33000000]]}
  output: {type: queue, input: matmul1 , entries: 2, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x34000000], [0, 0x35000000], [0, 0x36000000], [0, 0x37000000]]}
  output1: {type: queue, input: other_branch_0_2 , entries: 2, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[1, 0x34000000], [1, 0x35000000], [1, 0x36000000], [1, 0x37000000]]}
  output2: {type: queue, input: other_branch_1_2 , entries: 2, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[2, 0x34000000], [2, 0x35000000], [2, 0x36000000], [2, 0x37000000]]}

graphs:
  test_unary_chip0:
    target_device: 0
    input_count: 1
    other_branch_0_0: {type: datacopy, grid_loc: [0, 0], grid_size: [2, 2], inputs: [q0], acc_df: Bfp8, in_df: [Float16], out_df: Bfp8,  intermed_df: Bfp8, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    other_branch_0_1: {type: datacopy, grid_loc: [2, 0], grid_size: [2, 2], inputs: [other_branch_0_0], acc_df: Float16, in_df: [Bfp8], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    other_branch_1_0: {type: datacopy, grid_loc: [4, 0], grid_size: [2, 2], inputs: [q0], acc_df: Bfp4, in_df: [Float16], out_df: Bfp4,  intermed_df: Bfp4, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    other_branch_1_1: {type: datacopy, grid_loc: [6, 0], grid_size: [2, 2], inputs: [other_branch_1_0], acc_df: Float16, in_df: [Bfp4], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    unary0: {type: datacopy, grid_loc: [0, 2], grid_size: [2, 1], inputs: [q0], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 2], ublock: [2, 2], input_0_tms: []}
  test_unary_chip1: 
    target_device: 1
    input_count: 1
    unary1: {type: datacopy, grid_loc: [0, 0], grid_size: [2, 2], inputs: [q1], acc_df: Float32, in_df: [Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    matmul1: {type: matmul, grid_loc: [2, 2], grid_size: [2, 2], inputs: [unary0, unary1], acc_df: Float16, in_df: [Float16,Float32], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: [], attributes: {m_k: 2, u_kt: 2}}
    other_branch_0_2: {type: datacopy, grid_loc: [4, 0], grid_size: [2, 2], inputs: [other_branch_0_1], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}
    other_branch_1_2: {type: datacopy, grid_loc: [6, 0], grid_size: [2, 2], inputs: [other_branch_1_1], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [2, 2], input_0_tms: []}

programs:
  - program0:
      - var: [$0, $1, $5, $8]
      - var: [$2]
      - staticvar: {$lptr: 0, $gptr: 0, $ubatch_size: 1, $dbl_q_size: 4}
      - varinst: [$5, set, 1] # LOAD an 8 into $5
      - varinst: [$8, set, 1] # LOAD a  1 into $8 
      - loop: $5
      - execute: {graph_name: test_unary_chip0, queue_settings: {
            q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - execute: {graph_name: test_unary_chip1, queue_settings: {
            q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, incwrap, $ubatch_size, $dbl_q_size] # add two variables
      - varinst: [$gptr, incwrap, $ubatch_size, $dbl_q_size] # add two variables
      - endloop: 

