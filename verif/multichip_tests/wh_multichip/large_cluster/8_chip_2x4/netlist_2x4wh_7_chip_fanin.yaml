devices:
 arch: [wormhole, wormhole_b0]

# device map
#     0   1   2   3   4   5   6   7
#    -------------------------------
# 0 |   |   |   |   |   |   |   |   |
#    -------------------------------
# 1 |   |   |   |   |   |   |   |   |
#    -------------------------------
# 2 |   |   |   |   | 2 | 1 | 4 | 7 |
#    -------------------------------
# 3 |   |   |   |   | 3 | 0*| 5 | 6 |
#    -------------------------------
# 4 |   |   |   |   |   |   |   |   |
#    -------------------------------


queues:
  q1    : {type: queue, input: HOST   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 1, loc: dram, dram: [
    [0, 0x10000000], [0, 0x11000000], [0, 0x12000000], [0, 0x13000000], [0, 0x14000000], [0, 0x15000000], [0, 0x16000000], [0, 0x17000000], 
    [0, 0x18000000], [0, 0x19000000], [0, 0x1a000000], [0, 0x1b000000]
    ]}
  q2    : {type: queue, input: HOST   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 2, loc: dram, dram: [
    [0, 0x10000000], [0, 0x11000000], [0, 0x12000000], [0, 0x13000000], [0, 0x14000000], [0, 0x15000000], [0, 0x16000000], [0, 0x17000000], 
    [0, 0x18000000], [0, 0x19000000], [0, 0x1a000000], [0, 0x1b000000]
    ]}
  q3    : {type: queue, input: HOST   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 3, loc: dram, dram: [
    [0, 0x10000000], [0, 0x11000000], [0, 0x12000000], [0, 0x13000000], [0, 0x14000000], [0, 0x15000000], [0, 0x16000000], [0, 0x17000000], 
    [0, 0x18000000], [0, 0x19000000], [0, 0x1a000000], [0, 0x1b000000]
    ]}
  q4    : {type: queue, input: HOST   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 4, loc: dram, dram: [
    [0, 0x10000000], [0, 0x11000000], [0, 0x12000000], [0, 0x13000000], [0, 0x14000000], [0, 0x15000000], [0, 0x16000000], [0, 0x17000000], 
    [0, 0x18000000], [0, 0x19000000], [0, 0x1a000000], [0, 0x1b000000]
    ]}
  q5    : {type: queue, input: HOST   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 5, loc: dram, dram: [
    [0, 0x10000000], [0, 0x11000000], [0, 0x12000000], [0, 0x13000000], [0, 0x14000000], [0, 0x15000000], [0, 0x16000000], [0, 0x17000000], 
    [0, 0x18000000], [0, 0x19000000], [0, 0x1a000000], [0, 0x1b000000]
    ]}
  q6    : {type: queue, input: HOST   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 6, loc: dram, dram: [
    [0, 0x10000000], [0, 0x11000000], [0, 0x12000000], [0, 0x13000000], [0, 0x14000000], [0, 0x15000000], [0, 0x16000000], [0, 0x17000000], 
    [0, 0x18000000], [0, 0x19000000], [0, 0x1a000000], [0, 0x1b000000]
    ]}
  q7    : {type: queue, input: HOST   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 7, loc: dram, dram: [
    [0, 0x10000000], [0, 0x11000000], [0, 0x12000000], [0, 0x13000000], [0, 0x14000000], [0, 0x15000000], [0, 0x16000000], [0, 0x17000000], 
    [0, 0x18000000], [0, 0x19000000], [0, 0x1a000000], [0, 0x1b000000]
    ]}

  output0    : {type: queue, input: op0   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 0, loc: dram, dram: [
    [0, 0x10000000], [0, 0x11000000], [0, 0x12000000], [0, 0x13000000], [0, 0x14000000], [0, 0x15000000], [0, 0x16000000], [0, 0x17000000], 
    [0, 0x18000000], [0, 0x19000000], [0, 0x1a000000], [0, 0x1b000000]
    ]}
  output1    : {type: queue, input: op1   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 0, loc: dram, dram: [
    [1, 0x10000000], [1, 0x11000000], [1, 0x12000000], [1, 0x13000000], [1, 0x14000000], [1, 0x15000000], [1, 0x16000000], [1, 0x17000000], 
    [1, 0x18000000], [1, 0x19000000], [1, 0x1a000000], [1, 0x1b000000]
    ]}
  output2    : {type: queue, input: op2   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 0, loc: dram, dram: [
    [2, 0x10000000], [2, 0x11000000], [2, 0x12000000], [2, 0x13000000], [2, 0x14000000], [2, 0x15000000], [2, 0x16000000], [2, 0x17000000], 
    [2, 0x18000000], [2, 0x19000000], [2, 0x1a000000], [2, 0x1b000000]
    ]}
  output3    : {type: queue, input: op3   , entries: 32, grid_size: [3, 4], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float32, target_device: 0, loc: dram, dram: [
    [3, 0x10000000], [3, 0x11000000], [3, 0x12000000], [3, 0x13000000], [3, 0x14000000], [3, 0x15000000], [3, 0x16000000], [3, 0x17000000], 
    [3, 0x18000000], [3, 0x19000000], [3, 0x1a000000], [3, 0x1b000000]
    ]}


graphs:
  test_unary_chip0:
    target_device: 0
    input_count: 32
    op0: {type: add, grid_loc: [0, 0], grid_size: [3, 4], inputs: [op_a, op_d], acc_df: Float32, in_df: [Float32, Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}
    op1: {type: add, grid_loc: [0, 4], grid_size: [3, 4], inputs: [op_b, op_e], acc_df: Float32, in_df: [Float32, Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}
    op2: {type: add, grid_loc: [3, 0], grid_size: [3, 4], inputs: [op_c, op_g], acc_df: Float32, in_df: [Float32, Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}
    op3: {type: datacopy, grid_loc: [3, 4], grid_size: [3, 4], inputs: [op_f], acc_df: Float32, in_df: [Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

  test_unary_chip1:
    target_device: 1
    input_count: 32
    op_b: {type: datacopy, grid_loc: [0, 0], grid_size: [3, 4], inputs: [q1], acc_df: Float32, in_df: [Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

  test_unary_chip2:
    target_device: 2
    input_count: 32
    op_a: {type: datacopy, grid_loc: [0, 0], grid_size: [3, 4], inputs: [q2], acc_df: Float32, in_df: [Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

  test_unary_chip3:
    target_device: 3
    input_count: 32
    op_g: {type: datacopy, grid_loc: [0, 0], grid_size: [3, 4], inputs: [q3], acc_df: Float32, in_df: [Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

  test_unary_chip4:
    target_device: 4
    input_count: 32
    op_c: {type: datacopy, grid_loc: [0, 0], grid_size: [3, 4], inputs: [q4], acc_df: Float32, in_df: [Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

  test_unary_chip5:
    target_device: 5
    input_count: 32
    op_f: {type: datacopy, grid_loc: [0, 0], grid_size: [3, 4], inputs: [q5], acc_df: Float32, in_df: [Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

  test_unary_chip6:
    target_device: 6
    input_count: 32
    op_e: {type: datacopy, grid_loc: [0, 0], grid_size: [3, 4], inputs: [q6], acc_df: Float32, in_df: [Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}

  test_unary_chip7:
    target_device: 7
    input_count: 32
    op_d: {type: datacopy, grid_loc: [0, 0], grid_size: [3, 4], inputs: [q7], acc_df: Float32, in_df: [Float32], out_df: Float32,  intermed_df: Float32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2], input_0_tms: []}
    
programs:
  - program0:
      - var: [$0, $1, $5, $8]
      - varinst: [$5, set, 1] # LOAD an 8 into $5
      - varinst: [$8, set, 1] # LOAD a  1 into $8 
      - loop: $5
      - execute: {graph_name: test_unary_chip0, queue_settings: {}}
      - execute: {graph_name: test_unary_chip1, queue_settings: {q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}}}
      - execute: {graph_name: test_unary_chip2, queue_settings: {q2: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}}}
      - execute: {graph_name: test_unary_chip3, queue_settings: {q3: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}}}
      - execute: {graph_name: test_unary_chip4, queue_settings: {q4: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}}}
      - execute: {graph_name: test_unary_chip5, queue_settings: {q5: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}}}
      - execute: {graph_name: test_unary_chip6, queue_settings: {q6: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}}}
      - execute: {graph_name: test_unary_chip7, queue_settings: {q7: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $0, rd_ptr_global: $0}}}
      - varinst: [$0, add, $0, $8] # add two variables
      - endloop: 

