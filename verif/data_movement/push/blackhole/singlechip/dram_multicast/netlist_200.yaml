# test_config_id=2
devices:
  arch: wormhole_b0

queues:
  input0_dram:
    type: queue
    input: HOST
    entries: 1
    grid_size: [1, 2]
    t: 1
    mblock: [28, 20]
    ublock: [6, 1]
    df: Float16
    ublock_order: r
    target_device: 0
    loc: dram
    dram: [[4, 0x10000000], [4, 0x106f9040]]

  input1_dram:
    type: queue
    input: HOST
    entries: 1
    grid_size: [5, 3]
    t: 6
    mblock: [2, 1]
    ublock: [4, 2]
    df: Float16
    ublock_order: r
    target_device: 0
    loc: dram
    dram: [[5, 0x10000000], [5, 0x10033040], [5, 0x10066080], [5, 0x100990c0], [5, 0x100cc100], [5, 0x100ff140], [5, 0x10132180], [5, 0x101651c0], [5, 0x10198200], [5, 0x101cb240], [5, 0x101fe280], [5,
        0x102312c0], [5, 0x10264300], [5, 0x10297340], [5, 0x102ca380]]

  output_dram:
    type: queue
    input: target_op0
    entries: 1
    grid_size: [7, 2]
    t: 6
    mblock: [2, 1]
    ublock: [2, 3]
    df: Float16
    ublock_order: r
    target_device: 0
    loc: dram
    dram: [[5, 0x102fd3c0], [5, 0x10323800], [5, 0x10349c40], [5, 0x10370080], [5, 0x103964c0], [5, 0x103bc900], [5, 0x103e2d40], [5, 0x10409180], [5, 0x1042f5c0], [5, 0x10455a00], [5, 0x1047be40], [5,
        0x104a2280], [5, 0x104c86c0], [5, 0x104eeb00]]

graphs:
  test_op:
    target_device: 0
    input_count: 1
    target_op0:
      type: matmul
      grid_loc: [1, 1]
      grid_size: [7, 2]
      inputs: [input0_dram, input1_dram]
      in_df: [Float16, Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: r
      buf_size_mb: 6
      math_fidelity: HiFi4
      attributes: {m_k: 20, u_kt: 2}
      t: 6
      mblock: [2, 1]
      ublock: [2, 3]
      input_0_tms: [hslice: 1, vslice: 6]
      untilize_output: false

programs:
- program0:
  - staticvar: [$lptr, $gptr]
  - var: [$c_microbatch_count, $c_zero, $c_wrap]
  - varinst: [$c_microbatch_count, set, 1]
  - varinst: [$c_zero, set, 0]
  - varinst: [$c_wrap, set, 2]
  - varinst: [$c_wrap, mul, $c_wrap, 1]    # c_wrap = 2*microbatch_size
  - varinst: [$c_wrap, mul, $c_wrap, 1]   # c_wrap = 2*microbatch_size*microbatch_count
  - loop: $c_microbatch_count   #loop over number of microbatches that make a minibatch
  - execute: {graph_name: test_op, queue_settings: {input0_dram: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}, input1_dram: {prologue: false, epilogue: false,
          zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
  - varinst: [$lptr, incwrap, 1, $c_wrap]
  - varinst: [$gptr, incwrap, 1, $c_wrap]
  - endloop

test-config:
  test-args:
    microbatch_count: 1 # entries / input_count
    microbatch_size: 1 # input_count
    minibatch_count: 1 # host loop iterations
