# test_config_id=17
devices:
  arch: wormhole_b0

queues:
  input0_dram:
    type: queue
    input: HOST
    entries: 1
    grid_size: [2, 5]
    t: 12
    mblock: [6, 2]
    ublock: [1, 6]
    df: Float16
    ublock_order: r
    target_device: 0
    loc: dram
    dram: [[4, 0x10000000], [4, 0x101cb040], [4, 0x10396080], [4, 0x105610c0], [4, 0x1072c100], [4, 0x108f7140], [4, 0x10ac2180], [4, 0x10c8d1c0], [4, 0x10e58200], [4, 0x11023240]]

  output_dram:
    type: queue
    input: op0
    entries: 1
    grid_size: [2, 1]
    t: 72
    mblock: [2, 5]
    ublock: [4, 2]
    df: Float16
    ublock_order: c
    target_device: 0
    loc: dram
    dram: [[2, 0x10000000], [2, 0x10bf4040]]

graphs:
  test_multi_tm_datacopy_datacopy:
    target_device: 0
    input_count: 1
    feeder0:
      type: datacopy
      grid_loc: [0, 2]
      grid_size: [2, 5]
      inputs: [input0_dram]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: c
      buf_size_mb: 4
      math_fidelity: HiFi4
      t: 12
      mblock: [6, 2]
      ublock: [1, 6]
      input_0_pad: {rt: 0, ct: 0, pad_value: 0.0}
    op0:
      type: datacopy
      grid_loc: [6, 0]
      grid_size: [2, 1]
      inputs: [feeder0]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: c
      buf_size_mb: 1
      math_fidelity: HiFi4
      untilize_output: false
      t: 72
      mblock: [2, 5]
      ublock: [4, 2]

      input_0_unpad: {rt: 3, ct: 6}
      input_0_tms: [hslice: 6]
      input_0_pad: {rt: 7, ct: 1, pad_value: 0.0}

programs:
- test_multi_tm_datacopy_matmul_program:
  - param: [$p_microbatch_count, $p_microbatch_size]
  - staticvar: [$lptr, $gptr]
  - var: {$c_zero: 0, $c_wrap: 2}                           # c_wrap = 2 - finally need to be equal to 2*entries == 2*microbatch_size*microbatch_count
  - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_size]    # c_wrap = 2*microbatch_size
  - varinst: [$c_wrap, mul, $c_wrap, $p_microbatch_count]   # c_wrap = 2*microbatch_size*microbatch_count
  - loop: $p_microbatch_count   #loop over number of microbatches that make a minibatch
  - execute: {graph_name: test_multi_tm_datacopy_datacopy, queue_settings: {input0_dram: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
  - varinst: [$lptr, incwrap, $p_microbatch_size, $c_wrap]
  - varinst: [$gptr, incwrap, $p_microbatch_size, $c_wrap]
  - endloop

test-config:
  test-args:
    microbatch_count: 1 # entries / input_count
    microbatch_size: 1 # input_count
    minibatch_count: 1 # host loop iterations
