# test_config_id=2
devices:
  arch: wormhole_b0

queues:
  input0_dram:
    type: ram
    input: HOST
    entries: 1
    grid_size: [1, 1]
    t: 1
    mblock: [10, 2]
    ublock: [3, 1]
    df: Float16
    ublock_order: c
    target_device: 0
    loc: dram
    dram: [[2, 0x10000000]]

  output_dram:
    type: queue
    input: feeder0
    entries: 1
    grid_size: [1, 1]
    t: 6
    mblock: [2, 1]
    ublock: [5, 1]
    df: Float16
    ublock_order: c
    target_device: 0
    loc: dram
    dram: [[2, 0x1001fe40]]

graphs:
  test_op:
    target_device: 0
    input_count: 1
    feeder0:
      type: datacopy
      grid_loc: [0, 0]
      grid_size: [1, 1]
      inputs: [input0_dram]
      in_df: [Float16]
      acc_df: Float16
      out_df: Float16
      intermed_df: Float16
      ublock_order: c
      buf_size_mb: 1
      math_fidelity: HiFi4
      t: 6
      mblock: [2, 1]
      ublock: [5, 1]
      input_0_tms: [hslice: 2, vslice: 3]
      untilize_output: false

programs:
- program0:
  - var: [$c_microbatch_count, $c_zero]
  - staticvar: {$gptr_q0: 0, $lptr_q0: 0}
  - varinst: [$c_microbatch_count, set, 1]
  - varinst: [$c_zero, set, 0]
  - loop: $c_microbatch_count   #loop over number of microbatches that make a minibatch
  - execute: {graph_name: test_op, queue_settings: {input0_dram: {prologue: true, epilogue: false, zero: false, rd_ptr_global: $c_zero, wr_ptr_global: $c_zero}}}
  - endloop

test-config:
  test-args:
    microbatch_count: 1 # entries / input_count
    microbatch_size: 1 # input_count
    minibatch_count: 1 # host loop iterations
