# Untilize directly to queue allocated in host memory

devices:
  arch: [grayskull, wormhole, wormhole_b0]

queues:
  in: {type: queue, input: HOST   , entries: $TEMPLATE_QueueEntries, grid_size: [$TEMPLATE_grid_r, $TEMPLATE_grid_c], t: $TEMPLATE_t, mblock: [$TEMPLATE_mblock_m, $TEMPLATE_mblock_n], ublock: [1, 1], df: $TEMPLATE_DeviceFormat, target_device: 0, loc: $TEMPLATE_QueueLocation, $TEMPLATE_QueueLocation: [$TEMPLATE_QueueAddress], layout: $TEMPLATE_layout}
  out: {type: queue, input: unary0 , entries: $TEMPLATE_QueueEntries, grid_size: [1, 1], t: $TEMPLATE_t, mblock: [$TEMPLATE_mblock_m, $TEMPLATE_mblock_n], ublock: [1, 1], df: $TEMPLATE_DeviceFormat, target_device: 0, loc: host, host: [0x100]}

graphs:
  test_unary:
    target_device: 0
    input_count: $TEMPLATE_QueueEntries
    unary0: {type: nop, grid_loc: [0, 0], grid_size: [$TEMPLATE_grid_r, $TEMPLATE_grid_c], inputs: [in], in_df: [$TEMPLATE_DeviceFormat], acc_df: $TEMPLATE_DeviceAccFormat, out_df: $TEMPLATE_DeviceFormat,  intermed_df: $TEMPLATE_DeviceFormat, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: $TEMPLATE_t, mblock: [$TEMPLATE_mblock_m, $TEMPLATE_mblock_n], ublock: [1, 1]}

programs:
  - program_unary:
      - staticvar: {$lptr: 0, $gptr: 0}