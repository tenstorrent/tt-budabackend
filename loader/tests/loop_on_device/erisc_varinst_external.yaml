devices:
  arch: [wormhole, wormhole_b0]
  
queues:
  q0    : {type: queue, input: HOST   , entries: 2, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x10000000], [0, 0x12000000], [0, 0x14000000], [0, 0x16000000]]} 
  q1    : {type: queue, input: HOST   , entries: 2, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[1, 0x10000000], [1, 0x12000000], [1, 0x14000000], [1, 0x16000000]]}
  output0: {type: ram, input: unary0 , entries: 10, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x20000000], [0, 0x22000000], [0, 0x24000000], [0, 0x26000000]]}
  output1: {type: ram, input: unary2 , entries: 10, grid_size: [2, 2], t: 1, mblock: [1, 1], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[1, 0x20000000], [1, 0x22000000], [1, 0x24000000], [1, 0x26000000]]}
graphs:
  test_unary_chip0:
    target_device: 0
    input_count: 1

  test_unary_chip1:
    target_device: 1
    input_count: 1
    unary0: {type: datacopy, grid_loc: [0, 0], grid_size: [2, 2], inputs: [q0], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [1, 1], input_0_tms: []}
  
  test_unary1_chip0:
    target_device: 0
    input_count: 1

  test_unary2_chip1:
    target_device: 1
    input_count: 1
    unary2: {type: datacopy, grid_loc: [2, 2], grid_size: [2, 2], inputs: [q1], acc_df: Float16, in_df: [Float16], out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [1, 1], ublock: [1, 1], input_0_tms: []}
programs:
  - program0:
      - var: [$input_r_ptr_local, $input_r_ptr_local1, $input_r_ptr_global1, $input_r_ptr_global, $loop_count]
      - varinst: [$loop_count, set, 2]
      - var: {$c_input_count: 1, $c_input_wrap: 4, $c_input_wrap1: 20}
      - var: {$output_w_ptr_global: 5, $output_r_ptr_global: 0, $output_w_ptr_global1: 0, $output_r_ptr_global1: 0}

      - loop: $loop_count
      
      - execute: {graph_name: test_unary_chip0, queue_settings: {}}
      - execute: {graph_name: test_unary_chip1, queue_settings: {
        q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $input_r_ptr_local, rd_ptr_global: $input_r_ptr_global},
        output0: {prologue: false, epilogue: false, zero: false, rd_ptr_global: $output_r_ptr_global, wr_ptr_global: $output_w_ptr_global},
      }}
      - execute: {graph_name: test_unary1_chip0, queue_settings: {}}
      - execute: {graph_name: test_unary2_chip1, queue_settings: {
        q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $input_r_ptr_local, rd_ptr_global: $input_r_ptr_global},
        output1: {prologue: false, epilogue: false, zero: false, rd_ptr_global: $output_r_ptr_global1, wr_ptr_global: $output_w_ptr_global1},
      }}
      - varinst: [$input_r_ptr_global, incwrap, $c_input_count, $c_input_wrap]
      - varinst: [$input_r_ptr_local, incwrap, $c_input_count, $c_input_wrap]
      - varinst: [$input_r_ptr_global1, incwrap, $c_input_count, $c_input_wrap]
      - varinst: [$input_r_ptr_local1, incwrap, $c_input_count, $c_input_wrap]

      - varinst: [$output_w_ptr_global, incwrap, $c_input_count, $c_input_wrap1]
      - varinst: [$output_w_ptr_global1, mul, $c_input_count, 100]
      - endloop: 