devices:
    arch: [grayskull, wormhole_b0]
  
queues:
  in:  {type: queue, input: HOST    , entries: 2, grid_size: [2, 2], t: 2, mblock: [2, 2], ublock: [2, 4], df: RawUInt32, target_device: 0, loc: dram, dram: [[0, 0x30000000], [0, 0x32000000], [0, 0x36000000], [0, 0x38000000]]}
  out: {type: queue, input: unary0  , entries: 2, grid_size: [2, 2], t: 2, mblock: [2, 2], ublock: [2, 4], df: RawUInt32, target_device: 0, loc: dram, dram: [[1, 0x30000000], [1, 0x32000000], [1, 0x36000000], [1, 0x38000000]]}


graphs:
  test_unary:
    target_device: 0
    input_count: 2
    unary0: {type: nop, grid_loc: [0, 0], grid_size: [2, 2], inputs: [in], in_df: [RawUInt32], acc_df: RawUInt32, out_df: RawUInt32,  intermed_df: RawUInt32, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 2, mblock: [2, 2], ublock: [2, 4]}

programs:
  - tilize_untilize:
      - var: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - varinst: [$c_input_count, set, 2]  # load input count
      - loop: $c_loop_count
      - execute: {graph_name: test_unary, queue_settings: {
          in: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, add, $lptr, $c_input_count] # add two variables
      - varinst: [$gptr, add, $gptr, $c_input_count] # add two variables
      - endloop 