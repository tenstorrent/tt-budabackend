#  Untilize directly to queue allocated in host memory

devices:
  arch: [grayskull, wormhole]

queues:
  in: {type: queue, input: HOST   , entries: 4096, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  out: {type: queue, input: unary0 , entries: 4096, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x10000000]]}

graphs:
  test_unary:
    target_device: 0
    input_count: 1024
    unary0: {type: nop, grid_loc: [0, 0], grid_size: [1, 1], inputs: [in], in_df: [Float16_b], acc_df: Float16, out_df: Float16_b,  intermed_df: Float16_b, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}

programs:
  - program_unary:
      - var: {$c_loop_count: 4, $c_input_count: 1024, $c_input_wrap: 8192}
      - staticvar: {$lptr: 0, $gptr: 0}
      - loop: $c_loop_count
      - execute: {graph_name: test_unary, queue_settings: {
          in: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, incwrap, $c_input_count, $c_input_wrap] # incr ptr by input_count
      - varinst: [$gptr, incwrap, $c_input_count, $c_input_wrap] # incr ptr by input_count
      - endloop 

