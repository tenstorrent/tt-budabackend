devices:
  arch: [grayskull, wormhole, wormhole_b0]

queues:
  in: {type: queue, input: HOST   , entries: 8, grid_size: [1, 1], t: 1, mblock: [4, 4], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  out: {type: queue, input: unary0 , entries: 8, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x20000000]]}

graphs:
  test_unary:
    target_device: 0
    input_count: 2
    unary0: {type: nop, grid_loc: [0, 0], grid_size: [1, 1], inputs: [in], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}

programs:
#   - ping:
#       - var: [$lptr, $gptr, $c_loop_count, $c_input_count]
#       - varinst: [$c_loop_count, set, 2]  # load loop count
#       - varinst: [$c_input_count, set, 2]  # load input count
#       - loop: $c_loop_count
#       - execute: {graph_name: test_unary, queue_settings: {
#           in: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
#       - varinst: [$lptr, add, $lptr, $c_input_count] # add two variables
#       - varinst: [$gptr, add, $gptr, $c_input_count] # add two variables
#       - endloop 

#   - pong:
#       - var: [$lptr, $gptr, $c_loop_count, $c_input_count]
#       - varinst: [$c_loop_count, set, 2]  # load loop count
#       - varinst: [$c_input_count, set, 2]  # load input count
#       - varinst: [$lptr, set, 4]  # pong-buffer
#       - varinst: [$gptr, set, 4]  # pong-buffer
#       - loop: $c_loop_count
#       - execute: {graph_name: test_unary, queue_settings: {
#           in: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
#       - varinst: [$lptr, add, $lptr, $c_input_count] # add two variables
#       - varinst: [$gptr, add, $gptr, $c_input_count] # add two variables
#       - endloop 

  - ping_pong:
      - staticvar: {$lptr: 0, $gptr: 0}
      - var: {$c_loop_count: 4, $c_input_count: 2, $c_input_wrap: 16}
      - loop: $c_loop_count
      - execute: {graph_name: test_unary, queue_settings: {
          in: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, incwrap, $c_input_count, $c_input_wrap] # incr and wrap
      - varinst: [$gptr, incwrap, $c_input_count, $c_input_wrap] # incr and wrap
      - endloop
