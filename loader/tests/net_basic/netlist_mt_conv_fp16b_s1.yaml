# Fp16b Stride 1

devices:
  arch: [grayskull, wormhole]

queues:
  input_tensor_for_conv_fp16b_s1: {type: queue, input: HOST   , entries: 64, grid_size: [1, 1], t: 1, mblock: [1, 128], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x30000000]]}
  out: {type: queue, input: unary0 , entries: 64, grid_size: [1, 1], t: 1, mblock: [1, 128], ublock: [1, 1], df: Float16_b, target_device: 0, loc: dram, dram: [[0, 0x10000000]]}

graphs:
  test_unary:
    target_device: 0
    input_count: 64
    unary0: {type: nop, grid_loc: [0, 0], grid_size: [1, 1], inputs: [input_tensor_for_conv_fp16b_s1], in_df: [Float16_b], acc_df: Float16, out_df: Float16_b,  intermed_df: Float16_b, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: true, t: 1, mblock: [1, 128], ublock: [1, 1]}

programs:
  - program_unary:
      - var: {$c_loop_count: 1, $c_input_count: 64, $c_input_wrap: 128}
      - staticvar: {$lptr: 0, $gptr: 0}
      - loop: $c_loop_count
      - execute: {graph_name: test_unary, queue_settings: {
          input_tensor_for_conv_fp16b_s1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, incwrap, $c_input_count, $c_input_wrap] # incr ptr by input_count
      - varinst: [$gptr, incwrap, $c_input_count, $c_input_wrap] # incr ptr by input_count
      - endloop 

test-config:
  comparison-config:
    method: tilizedtensor
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    verbosity: Concise
    check_pct: 0.999
    check_pcc: 0.999