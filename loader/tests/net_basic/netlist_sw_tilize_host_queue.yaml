devices:
    arch: [grayskull, wormhole, wormhole_b0]
  
queues:
  input: {input: HOST, type: queue, entries: 64, grid_size: [2, 1], t: 1, mblock: [2, 2], ublock: [1, 1], ublock_order: r, df: Float16, target_device: 0, loc: host, host: [[0, 0x0], [0, 0x4000000]]}
  output : {type: queue, input: unary0 , entries: 64, grid_size: [1, 1], t: 1, mblock: [4, 2], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[1, 0x30000000]]}

graphs:
  test_unary:
    target_device: 0
    input_count: 32
    unary0: {type: nop, grid_loc: [0, 0], grid_size: [1, 1], inputs: [input], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: true, t: 1, mblock: [4, 2], ublock: [1, 1]}

programs:
  - program_unary:
      - var: {$c_loop_count: 1, $c_input_count: 32, $c_input_wrap: 128}
      - staticvar: {$lptr: 0, $gptr: 0}
      - loop: $c_loop_count
      - execute: {graph_name: test_unary, queue_settings: {
          input: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, incwrap, $c_input_count, $c_input_wrap] # incr ptr by input_count
      - varinst: [$gptr, incwrap, $c_input_count, $c_input_wrap] # incr ptr by input_count
      - endloop 

test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    verbosity: Concise
    method: tilizedtensor
    check_pct: 0.99
    check_pcc: 0.99
