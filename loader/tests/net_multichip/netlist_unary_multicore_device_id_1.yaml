devices:
  arch: [grayskull, wormhole]

queues:
  in_nl1:  {type: queue, input: HOST        , entries: 1, grid_size: [2, 2], t: 1, mblock: [4, 4], ublock: [1, 1], df: Float16_b, target_device: 1, loc: dram, dram: [[0, 0x30000000],[0, 0x32000000],[0, 0x34000000],[0, 0x36000000]]}
  out_nl1: {type: queue, input: unary0_nl1  , entries: 1, grid_size: [2, 2], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x10000000],[0, 0x12000000],[0, 0x14000000],[0, 0x16000000]]}

graphs:
  test_unary_nl1:
    target_device: 1
    input_count: 1
    unary0_nl1: {type: nop, grid_loc: [0, 0], grid_size: [2, 2], inputs: [in_nl1], in_df: [Float16_b], acc_df: Float16, out_df: Float16,  intermed_df: Float16_b,  ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}

programs:
  - tilize_untilize_nl1:
      - var: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - varinst: [$c_loop_count, set, 1]  # load loop count
      - varinst: [$c_input_count, set, 1]  # load input count
      - loop: $c_loop_count
      - execute: {graph_name: test_unary_nl1, queue_settings: {
          in_nl1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, add, $lptr, $c_input_count] # add two variables
      - varinst: [$gptr, add, $gptr, $c_input_count] # add two variables
      - endloop 


test-config:
  comparison-config:
    type: AllCloseHw
    atol: 0.01
    rtol: 0.15
    check_pct: 0.50
    check_pcc: 0.92
    verbosity: Concise
  stimulus-config:
    type: Normal
    normal_mean: 0.0
    normal_stddev: 0.1
  io-config:
    inputs: [in_nl1]
    outputs: [out_nl1]
