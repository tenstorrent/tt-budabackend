devices:
    arch: wormhole_b0
  
queues:

  # input
  inputs:                                                        {input: HOST, type: queue, entries: 256, grid_size: [1, 1], t: 4, mblock: [4, 1], ublock: [1, 1], ublock_order: r, df: Float32, target_device: 1, loc: dram, dram: [[0, 0x38da100]]}

  # output
  out:  {input: unary1_A, type: queue, entries: 256, grid_size: [1, 1], t: 4, mblock: [4, 1], ublock: [1, 1], ublock_order: r, df: Float32, target_device: 0, loc: dram, dram: [[0, 0x38da100]]}

graphs:
  fwd_0:
    target_device: 1
    input_count: 256
    unary0_A: {type: nop, grid_loc: [0, 0], grid_size: [1, 1], inputs: [inputs],
          t: 4, mblock: [4, 1], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float32], out_df: Float32, intermed_df: Float32, acc_df: Float32, math_fidelity: HiFi3}
    

  fwd_1:
    target_device: 0
    input_count: 256
    unary1_A: {type: nop, grid_loc: [0, 0], grid_size: [1, 1], inputs: [unary0_A],
          t: 4, mblock: [4, 1], ublock: [1, 1], buf_size_mb: 2, ublock_order: r, in_df: [Float32], out_df: Float32, intermed_df: Float32, acc_df: Float32, math_fidelity: HiFi3}
    
programs:
  - run_fwd:
    - param: [$p_loop_count]
    - var: {$c_microbatch_size: 256, $c_one: 1, $c_zero: 0}
    - staticvar: {$gptr_q0: 0, $lptr_q0: 0}
    - loop: $p_loop_count
    -   execute: {graph_name: fwd_0, queue_settings: {
                inputs: {prologue: false, epilogue: false, zero: False, rd_ptr_local: $lptr_q0, rd_ptr_global: $gptr_q0}} }
    -   execute: {graph_name: fwd_1}
    -   varinst: [$gptr_q0, incwrap, $c_microbatch_size, 512]
    -   varinst: [$lptr_q0, incwrap, $c_microbatch_size, 512]
    - endloop
