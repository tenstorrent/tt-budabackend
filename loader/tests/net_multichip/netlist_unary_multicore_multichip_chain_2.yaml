devices:
  arch: [grayskull, wormhole]

queues:
  q0: {type: queue, input: HOST     , entries: 6, grid_size: [2, 1], t: 1, mblock: [4, 4], ublock: [1, 1], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x30000000],[0, 0x31000000]]}
  q1: {type: queue, input: unary0   , entries: 6, grid_size: [2, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 2, loc: dram, dram: [[0, 0x30000000],[0, 0x31000000]]}
  q2: {type: queue, input: unary1   , entries: 6, grid_size: [2, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x30000000],[0, 0x31000000]]}
  q3: {type: queue, input: unary2   , entries: 6, grid_size: [2, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 3, loc: dram, dram: [[0, 0x30000000],[0, 0x31000000]]}

  q4: {type: queue, input: unary3   , entries: 6, grid_size: [2, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 3, loc: dram, dram: [[0, 0x32000000],[0, 0x33000000]]}
  q5: {type: queue, input: unary4   , entries: 6, grid_size: [2, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 1, loc: dram, dram: [[0, 0x32000000],[0, 0x33000000]]}
  q6: {type: queue, input: unary5   , entries: 6, grid_size: [2, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 2, loc: dram, dram: [[0, 0x32000000],[0, 0x33000000]]}
  q7: {type: queue, input: unary6   , entries: 6, grid_size: [2, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x32000000],[0, 0x33000000]]}

  q8: {type: queue, input: unary7   , entries: 6, grid_size: [2, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 3, loc: dram, dram: [[0, 0x34000000],[0, 0x35000000]]}

graphs:
  unary0_graph:
    target_device: 0
    input_count: 2
    unary0: {type: nop, grid_loc: [0, 0], grid_size: [2, 1], inputs: [q0], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16,  ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}
  unary1_graph:
    target_device: 2
    input_count: 2
    unary1: {type: nop, grid_loc: [0, 0], grid_size: [2, 1], inputs: [q1], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16,  ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}
  unary2_graph:
    target_device: 1
    input_count: 2
    unary2: {type: nop, grid_loc: [0, 0], grid_size: [2, 1], inputs: [q2], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16,  ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}
  unary3_graph:
    target_device: 3
    input_count: 2
    unary3: {type: nop, grid_loc: [0, 0], grid_size: [2, 1], inputs: [q3], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16,  ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}

  unary4_graph:
    target_device: 3
    input_count: 2
    unary4: {type: nop, grid_loc: [0, 0], grid_size: [2, 1], inputs: [q4], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16,  ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}
  unary5_graph:
    target_device: 1
    input_count: 2
    unary5: {type: nop, grid_loc: [0, 0], grid_size: [2, 1], inputs: [q5], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16,  ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}
  unary6_graph:
    target_device: 2
    input_count: 2
    unary6: {type: nop, grid_loc: [0, 0], grid_size: [2, 1], inputs: [q6], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16,  ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}
  unary7_graph:
    target_device: 0
    input_count: 2
    unary7: {type: nop, grid_loc: [0, 0], grid_size: [2, 1], inputs: [q7], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16,  ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: false, t: 1, mblock: [2, 2], ublock: [2, 2]}


programs:
  - first_program:
      - var: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - varinst: [$c_loop_count, set, 3]  # load loop count
      - varinst: [$c_input_count, set, 2]  # load input count
      - loop: $c_loop_count
      - execute: {graph_name: unary0_graph, queue_settings: {
          q0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - execute: {graph_name: unary1_graph, queue_settings: {
          q1: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - execute: {graph_name: unary2_graph, queue_settings: {
          q2: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - execute: {graph_name: unary3_graph, queue_settings: {
          q3: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, add, $lptr, $c_input_count] # add two variables
      - varinst: [$gptr, add, $gptr, $c_input_count] # add two variables
      - endloop
  - second_program:
      - var: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - varinst: [$c_loop_count, set, 3]  # load loop count
      - varinst: [$c_input_count, set, 2]  # load input count
      - loop: $c_loop_count
      - execute: {graph_name: unary4_graph, queue_settings: {
          q4: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - execute: {graph_name: unary5_graph, queue_settings: {
          q5: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - execute: {graph_name: unary6_graph, queue_settings: {
          q6: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - execute: {graph_name: unary7_graph, queue_settings: {
          q7: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, add, $lptr, $c_input_count] # add two variables
      - varinst: [$gptr, add, $gptr, $c_input_count] # add two variables
      - endloop