devices:
  arch: [grayskull, wormhole, wormhole_b0]

queues:
  in0:  {type: queue, input: HOST   , entries: 16, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[0, 0x10000000]]}
  out0: {type: queue, input: unary0 , entries: 64, grid_size: [1, 1], t: 1, mblock: [2, 2], ublock: [2, 2], df: Float16, target_device: 0, loc: dram, dram: [[1, 0x10000000]]}

graphs:
  test_unary:
    target_device: 0
    input_count: 1
    unary0: {type: nop, grid_loc: [0, 0], grid_size: [1, 1], inputs: [in0], in_df: [Float16], acc_df: Float16, out_df: Float16,  intermed_df: Float16, ublock_order: r, buf_size_mb: 2, math_fidelity: HiFi3, untilize_output: true, t: 1, mblock: [2, 2], ublock: [2, 2]}

programs:
  - incr_by_1_8_times:
      - var: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - varinst: [$c_loop_count, set, 8]  # load loop count
      - varinst: [$c_incr, set, 1]  # load lptr incr
      - loop: $c_loop_count
      - execute: {graph_name: test_unary, queue_settings: {
          in0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, add, $lptr, $c_incr] # incr local rdptr
      - varinst: [$gptr, add, $gptr, $c_incr] # incr global rdptr
      - endloop 

  - incr_by_2_6_times:
      - var: [$lptr, $gptr, $c_loop_count, $c_input_count]
      - varinst: [$c_loop_count, set, 6]  # load loop count
      - varinst: [$c_incr, set, 2]  # load gptr incr
      - loop: $c_loop_count
      - execute: {graph_name: test_unary, queue_settings: {
          in0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - varinst: [$lptr, add, $lptr, $c_incr] # incr local rdptr
      - varinst: [$gptr, add, $gptr, $c_incr] # incr global rdptr
      - endloop 

  - offset_by_4_incr_by_6:
      - var: {$lptr: 5, $gptr: 4, $c_incr: 2, $c_loop_count: 3}
      - execute: {graph_name: test_unary, queue_settings: {
          in0: {prologue: false, epilogue: false, zero: false, rd_ptr_local: $lptr, rd_ptr_global: $gptr}}}
      - loop: $c_loop_count
      - varinst: [$gptr, add, $gptr, $c_incr] # incr global rdptr
      - endloop
